{
	"id": "e5feead819585477dc437ce1f20b9b7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"recipe.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.23;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract Recipe is ERC20, Ownable {\n\n    enum TerrainType {Mountains,Forest,Water,DeepWater,Sand,Grass}\n    enum Levels {Level1,Level2,Level3,Level4,Level5}\n\n    struct ResourceAmount {\n        address resourceContractAddr;\n        uint256 amount;\n    }\n\n    using SafeERC20 for IERC20;\n\n    address public unlimitedAllowanceAddress;\n    Levels public level;\n    ResourceAmount[] public inputResources;\n    ResourceAmount[] public outputResources;\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        address _unlimitedAllowanceAddress,\n        address initialOwner,\n        ResourceAmount[] memory _inputResources,\n        ResourceAmount[] memory _outputResources,\n        Levels level_\n    ) ERC20(name, symbol) Ownable(initialOwner) {\n        // Set unlimited allowance for the specified address\n        unlimitedAllowanceAddress = _unlimitedAllowanceAddress;\n        _approve(unlimitedAllowanceAddress, initialOwner, type(uint256).max);\n        level = level_;\n        \n        // Store the input and output resources\n        for (uint256 i = 0; i < _inputResources.length; i++) {\n            inputResources.push(_inputResources[i]);\n        }\n        for (uint256 i = 0; i < _outputResources.length; i++) {\n            outputResources.push(_outputResources[i]);\n        }\n    }\n\n    function isFirstLevel() public view returns (bool){\n        return  level == Levels.Level1;\n    }\n\n    function setLevel(Levels level_)public {\n        require(msg.sender == unlimitedAllowanceAddress, \"Not allowed to set level\");\n        level = level_;\n    }\n\n    // Mint new tokens - only the unlimitedAllowanceAddress can mint\n    function mint(address to, uint256 amount) public {\n        require(msg.sender == unlimitedAllowanceAddress, \"Not allowed to mint\");\n        _mint(to, amount);\n    }\n\n    // Burn tokens - only the unlimitedAllowanceAddress can burn\n    function burn(uint256 amount) public {\n        require(msg.sender == unlimitedAllowanceAddress, \"Not allowed to burn\");\n        _burn(msg.sender, amount);\n    }\n\n    // Transfer tokens - using the inherited ERC20 transfer function\n    function transfer(address to, uint256 amount) public override returns (bool) {\n        return super.transfer(to, amount);\n    }\n\n    // Check balance - using the inherited ERC20 balanceOf function\n    function balanceOf(address account) public view override returns (uint256) {\n        return super.balanceOf(account);\n    }\n\n    // Getter for input resources\n    function getInputResources() public view returns (ResourceAmount[] memory) {\n        return inputResources;\n    }\n\n    // Getter for output resources\n    function getOutputResources() public view returns (ResourceAmount[] memory) {\n        return outputResources;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x91400817A14899FB90E4CCEBA323D9 0x2C 0x1E 0xD4 0xD1 0x2A PREVRANDAO PUSH3 0xB3495 0xB1 DUP8 CALLDATACOPY REVERT MLOAD GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x91400817A14899FB90E4CCEBA323D9 0x2C 0x1E 0xD4 0xD1 0x2A PREVRANDAO PUSH3 0xB3495 0xB1 DUP8 CALLDATACOPY REVERT MLOAD GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"recipe.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x24 SELFDESTRUCT EXTCODESIZE PUSH11 0x47B6F74E8DD78A73EE72B7 0xDD 0x26 0xF DUP3 0xC5 0xCE OR 0xE4 NOT 0x49 0xB6 MSTORE CHAINID 0xAB 0x2A NOT PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x24 SELFDESTRUCT EXTCODESIZE PUSH11 0x47B6F74E8DD78A73EE72B7 0xDD 0x26 0xF DUP3 0xC5 0xCE OR 0xE4 NOT 0x49 0xB6 MSTORE CHAINID 0xAB 0x2A NOT PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"recipe.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"recipe.sol": {
				"Recipe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_unlimitedAllowanceAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "resourceContractAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Recipe.ResourceAmount[]",
									"name": "_inputResources",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "resourceContractAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Recipe.ResourceAmount[]",
									"name": "_outputResources",
									"type": "tuple[]"
								},
								{
									"internalType": "enum Recipe.Levels",
									"name": "level_",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getInputResources",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "resourceContractAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Recipe.ResourceAmount[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOutputResources",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "resourceContractAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Recipe.ResourceAmount[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "inputResources",
							"outputs": [
								{
									"internalType": "address",
									"name": "resourceContractAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFirstLevel",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level",
							"outputs": [
								{
									"internalType": "enum Recipe.Levels",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "outputResources",
							"outputs": [
								{
									"internalType": "address",
									"name": "resourceContractAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Recipe.Levels",
									"name": "level_",
									"type": "uint8"
								}
							],
							"name": "setLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlimitedAllowanceAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"recipe.sol\":233:2991  contract Recipe is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"recipe.sol\":686:1546  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"recipe.sol\":986:998  initialOwner */\n  dup4\n    /* \"recipe.sol\":964:968  name */\n  dup8\n    /* \"recipe.sol\":970:976  symbol */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"recipe.sol\":1099:1125  _unlimitedAllowanceAddress */\n  dup5\n    /* \"recipe.sol\":1071:1096  unlimitedAllowanceAddress */\n  0x06\n  0x00\n    /* \"recipe.sol\":1071:1125  unlimitedAllowanceAddress = _unlimitedAllowanceAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"recipe.sol\":1135:1203  _approve(unlimitedAllowanceAddress, initialOwner, type(uint256).max) */\n  tag_18\n    /* \"recipe.sol\":1144:1169  unlimitedAllowanceAddress */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"recipe.sol\":1171:1183  initialOwner */\n  dup6\n    /* \"recipe.sol\":1185:1202  type(uint256).max */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"recipe.sol\":1135:1143  _approve */\n  shl(0x20, tag_19)\n    /* \"recipe.sol\":1135:1203  _approve(unlimitedAllowanceAddress, initialOwner, type(uint256).max) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"recipe.sol\":1221:1227  level_ */\n  dup1\n    /* \"recipe.sol\":1213:1218  level */\n  0x06\n  0x14\n    /* \"recipe.sol\":1213:1227  level = level_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  tag_21\n  tag_22\n  jump\t// in\ntag_21:\ntag_20:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"recipe.sol\":1299:1308  uint256 i */\n  0x00\n    /* \"recipe.sol\":1294:1411  for (uint256 i = 0; i < _inputResources.length; i++) {... */\ntag_23:\n    /* \"recipe.sol\":1318:1333  _inputResources */\n  dup4\n    /* \"recipe.sol\":1318:1340  _inputResources.length */\n  mload\n    /* \"recipe.sol\":1314:1315  i */\n  dup2\n    /* \"recipe.sol\":1314:1340  i < _inputResources.length */\n  lt\n    /* \"recipe.sol\":1294:1411  for (uint256 i = 0; i < _inputResources.length; i++) {... */\n  iszero\n  tag_24\n  jumpi\n    /* \"recipe.sol\":1361:1375  inputResources */\n  0x07\n    /* \"recipe.sol\":1381:1396  _inputResources */\n  dup5\n    /* \"recipe.sol\":1397:1398  i */\n  dup3\n    /* \"recipe.sol\":1381:1399  _inputResources[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_26\n  jumpi\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\ntag_26:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"recipe.sol\":1361:1400  inputResources.push(_inputResources[i]) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n    /* \"recipe.sol\":1342:1345  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"recipe.sol\":1294:1411  for (uint256 i = 0; i < _inputResources.length; i++) {... */\n  jump(tag_23)\ntag_24:\n  pop\n    /* \"recipe.sol\":1425:1434  uint256 i */\n  0x00\n    /* \"recipe.sol\":1420:1540  for (uint256 i = 0; i < _outputResources.length; i++) {... */\ntag_30:\n    /* \"recipe.sol\":1444:1460  _outputResources */\n  dup3\n    /* \"recipe.sol\":1444:1467  _outputResources.length */\n  mload\n    /* \"recipe.sol\":1440:1441  i */\n  dup2\n    /* \"recipe.sol\":1440:1467  i < _outputResources.length */\n  lt\n    /* \"recipe.sol\":1420:1540  for (uint256 i = 0; i < _outputResources.length; i++) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"recipe.sol\":1488:1503  outputResources */\n  0x08\n    /* \"recipe.sol\":1509:1525  _outputResources */\n  dup4\n    /* \"recipe.sol\":1526:1527  i */\n  dup3\n    /* \"recipe.sol\":1509:1528  _outputResources[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_33\n  jumpi\n  tag_34\n  tag_28\n  jump\t// in\ntag_34:\ntag_33:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"recipe.sol\":1488:1529  outputResources.push(_outputResources[i]) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n    /* \"recipe.sol\":1469:1472  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"recipe.sol\":1420:1540  for (uint256 i = 0; i < _outputResources.length; i++) {... */\n  jump(tag_30)\ntag_31:\n  pop\n    /* \"recipe.sol\":686:1546  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"recipe.sol\":233:2991  contract Recipe is ERC20, Ownable {... */\n  jump(tag_36)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n  mload(0x40)\n  0xe602df0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n  mload(0x40)\n  0x94280d6200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n  mload(0x40)\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_49:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_50:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_51:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_52:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_53:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_54:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_55:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_56:\n    /* \"#utility.yul\":957:984   */\n  tag_107\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_109\n  tag_55\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1030:1118   */\ntag_108:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_57:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_111\n  tag_49\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_112\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_58:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_115\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1434:1490   */\ntag_114:\n    /* \"#utility.yul\":1508:1537   */\n  tag_116\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_54\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_59:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_118:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_118)\ntag_120:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_60:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_122\n    /* \"#utility.yul\":1992:2041   */\n  tag_123\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_58\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1976:2042   */\n  tag_57\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_125\n  tag_53\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2117:2229   */\ntag_124:\n    /* \"#utility.yul\":2238:2290   */\n  tag_126\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_59\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_61:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_129\n  tag_52\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2399:2521   */\ntag_128:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_130\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_60\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2803   */\ntag_62:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2754:2796   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2747:2752   */\n  dup3\n    /* \"#utility.yul\":2743:2797   */\n  and\n    /* \"#utility.yul\":2732:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2803   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2809:2905   */\ntag_63:\n    /* \"#utility.yul\":2846:2853   */\n  0x00\n    /* \"#utility.yul\":2875:2899   */\n  tag_133\n    /* \"#utility.yul\":2893:2898   */\n  dup3\n    /* \"#utility.yul\":2875:2899   */\n  tag_62\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2864:2899   */\n  swap1\n  pop\n    /* \"#utility.yul\":2809:2905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2911:3033   */\ntag_64:\n    /* \"#utility.yul\":2984:3008   */\n  tag_135\n    /* \"#utility.yul\":3002:3007   */\n  dup2\n    /* \"#utility.yul\":2984:3008   */\n  tag_63\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2977:2982   */\n  dup2\n    /* \"#utility.yul\":2974:3009   */\n  eq\n    /* \"#utility.yul\":2964:3027   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3023:3024   */\n  0x00\n    /* \"#utility.yul\":3020:3021   */\n  dup1\n    /* \"#utility.yul\":3013:3025   */\n  revert\n    /* \"#utility.yul\":2964:3027   */\ntag_136:\n    /* \"#utility.yul\":2911:3033   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3039:3182   */\ntag_65:\n    /* \"#utility.yul\":3096:3101   */\n  0x00\n    /* \"#utility.yul\":3127:3133   */\n  dup2\n    /* \"#utility.yul\":3121:3134   */\n  mload\n    /* \"#utility.yul\":3112:3134   */\n  swap1\n  pop\n    /* \"#utility.yul\":3143:3176   */\n  tag_138\n    /* \"#utility.yul\":3170:3175   */\n  dup2\n    /* \"#utility.yul\":3143:3176   */\n  tag_64\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3039:3182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:3531   */\ntag_66:\n    /* \"#utility.yul\":3297:3301   */\n  0x00\n    /* \"#utility.yul\":3387:3405   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3379:3385   */\n  dup3\n    /* \"#utility.yul\":3376:3406   */\n  gt\n    /* \"#utility.yul\":3373:3429   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":3409:3427   */\n  tag_141\n  tag_55\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3373:3429   */\ntag_140:\n    /* \"#utility.yul\":3459:3463   */\n  0x20\n    /* \"#utility.yul\":3451:3457   */\n  dup3\n    /* \"#utility.yul\":3447:3464   */\n  mul\n    /* \"#utility.yul\":3439:3464   */\n  swap1\n  pop\n    /* \"#utility.yul\":3519:3523   */\n  0x20\n    /* \"#utility.yul\":3513:3517   */\n  dup2\n    /* \"#utility.yul\":3509:3524   */\n  add\n    /* \"#utility.yul\":3501:3524   */\n  swap1\n  pop\n    /* \"#utility.yul\":3188:3531   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3537:3654   */\ntag_67:\n    /* \"#utility.yul\":3646:3647   */\n  0x00\n    /* \"#utility.yul\":3643:3644   */\n  dup1\n    /* \"#utility.yul\":3636:3648   */\n  revert\n    /* \"#utility.yul\":3660:3777   */\ntag_68:\n    /* \"#utility.yul\":3769:3770   */\n  0x00\n    /* \"#utility.yul\":3766:3767   */\n  dup1\n    /* \"#utility.yul\":3759:3771   */\n  revert\n    /* \"#utility.yul\":3906:3983   */\ntag_70:\n    /* \"#utility.yul\":3943:3950   */\n  0x00\n    /* \"#utility.yul\":3972:3977   */\n  dup2\n    /* \"#utility.yul\":3961:3977   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:3983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3989:4111   */\ntag_71:\n    /* \"#utility.yul\":4062:4086   */\n  tag_147\n    /* \"#utility.yul\":4080:4085   */\n  dup2\n    /* \"#utility.yul\":4062:4086   */\n  tag_70\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4055:4060   */\n  dup2\n    /* \"#utility.yul\":4052:4087   */\n  eq\n    /* \"#utility.yul\":4042:4105   */\n  tag_148\n  jumpi\n    /* \"#utility.yul\":4101:4102   */\n  0x00\n    /* \"#utility.yul\":4098:4099   */\n  dup1\n    /* \"#utility.yul\":4091:4103   */\n  revert\n    /* \"#utility.yul\":4042:4105   */\ntag_148:\n    /* \"#utility.yul\":3989:4111   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4117:4260   */\ntag_72:\n    /* \"#utility.yul\":4174:4179   */\n  0x00\n    /* \"#utility.yul\":4205:4211   */\n  dup2\n    /* \"#utility.yul\":4199:4212   */\n  mload\n    /* \"#utility.yul\":4190:4212   */\n  swap1\n  pop\n    /* \"#utility.yul\":4221:4254   */\n  tag_150\n    /* \"#utility.yul\":4248:4253   */\n  dup2\n    /* \"#utility.yul\":4221:4254   */\n  tag_71\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4117:4260   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4302:4934   */\ntag_73:\n    /* \"#utility.yul\":4394:4399   */\n  0x00\n    /* \"#utility.yul\":4438:4442   */\n  0x40\n    /* \"#utility.yul\":4426:4435   */\n  dup3\n    /* \"#utility.yul\":4421:4424   */\n  dup5\n    /* \"#utility.yul\":4417:4436   */\n  sub\n    /* \"#utility.yul\":4413:4443   */\n  slt\n    /* \"#utility.yul\":4410:4527   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":4446:4525   */\n  tag_153\n  tag_68\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4410:4527   */\ntag_152:\n    /* \"#utility.yul\":4545:4566   */\n  tag_154\n    /* \"#utility.yul\":4561:4565   */\n  0x40\n    /* \"#utility.yul\":4545:4566   */\n  tag_57\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4536:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4641:4642   */\n  0x00\n    /* \"#utility.yul\":4681:4741   */\n  tag_155\n    /* \"#utility.yul\":4737:4740   */\n  dup5\n    /* \"#utility.yul\":4728:4734   */\n  dup3\n    /* \"#utility.yul\":4717:4726   */\n  dup6\n    /* \"#utility.yul\":4713:4735   */\n  add\n    /* \"#utility.yul\":4681:4741   */\n  tag_65\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4674:4678   */\n  0x00\n    /* \"#utility.yul\":4667:4672   */\n  dup4\n    /* \"#utility.yul\":4663:4679   */\n  add\n    /* \"#utility.yul\":4656:4742   */\n  mstore\n    /* \"#utility.yul\":4576:4753   */\n  pop\n    /* \"#utility.yul\":4814:4816   */\n  0x20\n    /* \"#utility.yul\":4855:4915   */\n  tag_156\n    /* \"#utility.yul\":4911:4914   */\n  dup5\n    /* \"#utility.yul\":4902:4908   */\n  dup3\n    /* \"#utility.yul\":4891:4900   */\n  dup6\n    /* \"#utility.yul\":4887:4909   */\n  add\n    /* \"#utility.yul\":4855:4915   */\n  tag_72\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4848:4852   */\n  0x20\n    /* \"#utility.yul\":4841:4846   */\n  dup4\n    /* \"#utility.yul\":4837:4853   */\n  add\n    /* \"#utility.yul\":4830:4916   */\n  mstore\n    /* \"#utility.yul\":4763:4927   */\n  pop\n    /* \"#utility.yul\":4302:4934   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4978:5806   */\ntag_74:\n    /* \"#utility.yul\":5117:5122   */\n  0x00\n    /* \"#utility.yul\":5142:5255   */\n  tag_158\n    /* \"#utility.yul\":5158:5254   */\n  tag_159\n    /* \"#utility.yul\":5247:5253   */\n  dup5\n    /* \"#utility.yul\":5158:5254   */\n  tag_66\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5142:5255   */\n  tag_57\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5133:5255   */\n  swap1\n  pop\n    /* \"#utility.yul\":5275:5280   */\n  dup1\n    /* \"#utility.yul\":5304:5310   */\n  dup4\n    /* \"#utility.yul\":5297:5302   */\n  dup3\n    /* \"#utility.yul\":5290:5311   */\n  mstore\n    /* \"#utility.yul\":5338:5342   */\n  0x20\n    /* \"#utility.yul\":5331:5336   */\n  dup3\n    /* \"#utility.yul\":5327:5343   */\n  add\n    /* \"#utility.yul\":5320:5343   */\n  swap1\n  pop\n    /* \"#utility.yul\":5391:5395   */\n  0x40\n    /* \"#utility.yul\":5383:5389   */\n  dup5\n    /* \"#utility.yul\":5379:5396   */\n  mul\n    /* \"#utility.yul\":5371:5377   */\n  dup4\n    /* \"#utility.yul\":5367:5397   */\n  add\n    /* \"#utility.yul\":5420:5423   */\n  dup6\n    /* \"#utility.yul\":5412:5418   */\n  dup2\n    /* \"#utility.yul\":5409:5424   */\n  gt\n    /* \"#utility.yul\":5406:5528   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":5439:5518   */\n  tag_161\n  tag_67\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5406:5528   */\ntag_160:\n    /* \"#utility.yul\":5554:5560   */\n  dup4\n    /* \"#utility.yul\":5537:5800   */\ntag_162:\n    /* \"#utility.yul\":5571:5577   */\n  dup2\n    /* \"#utility.yul\":5566:5569   */\n  dup2\n    /* \"#utility.yul\":5563:5578   */\n  lt\n    /* \"#utility.yul\":5537:5800   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":5646:5649   */\n  dup1\n    /* \"#utility.yul\":5675:5755   */\n  tag_165\n    /* \"#utility.yul\":5751:5754   */\n  dup9\n    /* \"#utility.yul\":5739:5749   */\n  dup3\n    /* \"#utility.yul\":5675:5755   */\n  tag_73\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5670:5673   */\n  dup5\n    /* \"#utility.yul\":5663:5756   */\n  mstore\n    /* \"#utility.yul\":5785:5789   */\n  0x20\n    /* \"#utility.yul\":5780:5783   */\n  dup5\n    /* \"#utility.yul\":5776:5790   */\n  add\n    /* \"#utility.yul\":5769:5790   */\n  swap4\n  pop\n    /* \"#utility.yul\":5613:5800   */\n  pop\n    /* \"#utility.yul\":5597:5601   */\n  0x40\n    /* \"#utility.yul\":5592:5595   */\n  dup2\n    /* \"#utility.yul\":5588:5602   */\n  add\n    /* \"#utility.yul\":5581:5602   */\n  swap1\n  pop\n    /* \"#utility.yul\":5537:5800   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":5541:5562   */\n  pop\n    /* \"#utility.yul\":5123:5806   */\n  pop\n  pop\n    /* \"#utility.yul\":4978:5806   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5850:6299   */\ntag_75:\n    /* \"#utility.yul\":5964:5969   */\n  0x00\n    /* \"#utility.yul\":6013:6016   */\n  dup3\n    /* \"#utility.yul\":6006:6010   */\n  0x1f\n    /* \"#utility.yul\":5998:6004   */\n  dup4\n    /* \"#utility.yul\":5994:6011   */\n  add\n    /* \"#utility.yul\":5990:6017   */\n  slt\n    /* \"#utility.yul\":5980:6102   */\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6021:6100   */\n  tag_168\n  tag_52\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5980:6102   */\ntag_167:\n    /* \"#utility.yul\":6131:6137   */\n  dup2\n    /* \"#utility.yul\":6125:6138   */\n  mload\n    /* \"#utility.yul\":6156:6293   */\n  tag_169\n    /* \"#utility.yul\":6289:6292   */\n  dup5\n    /* \"#utility.yul\":6281:6287   */\n  dup3\n    /* \"#utility.yul\":6274:6278   */\n  0x20\n    /* \"#utility.yul\":6266:6272   */\n  dup7\n    /* \"#utility.yul\":6262:6279   */\n  add\n    /* \"#utility.yul\":6156:6293   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6147:6293   */\n  swap2\n  pop\n    /* \"#utility.yul\":5970:6299   */\n  pop\n    /* \"#utility.yul\":5850:6299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6305:6415   */\ntag_76:\n    /* \"#utility.yul\":6389:6390   */\n  0x05\n    /* \"#utility.yul\":6382:6387   */\n  dup2\n    /* \"#utility.yul\":6379:6391   */\n  lt\n    /* \"#utility.yul\":6369:6409   */\n  tag_171\n  jumpi\n    /* \"#utility.yul\":6405:6406   */\n  0x00\n    /* \"#utility.yul\":6402:6403   */\n  dup1\n    /* \"#utility.yul\":6395:6407   */\n  revert\n    /* \"#utility.yul\":6369:6409   */\ntag_171:\n    /* \"#utility.yul\":6305:6415   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6421:6586   */\ntag_77:\n    /* \"#utility.yul\":6489:6494   */\n  0x00\n    /* \"#utility.yul\":6520:6526   */\n  dup2\n    /* \"#utility.yul\":6514:6527   */\n  mload\n    /* \"#utility.yul\":6505:6527   */\n  swap1\n  pop\n    /* \"#utility.yul\":6536:6580   */\n  tag_173\n    /* \"#utility.yul\":6574:6579   */\n  dup2\n    /* \"#utility.yul\":6536:6580   */\n  tag_76\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6421:6586   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6592:8785   */\ntag_3:\n    /* \"#utility.yul\":6861:6867   */\n  0x00\n    /* \"#utility.yul\":6869:6875   */\n  dup1\n    /* \"#utility.yul\":6877:6883   */\n  0x00\n    /* \"#utility.yul\":6885:6891   */\n  dup1\n    /* \"#utility.yul\":6893:6899   */\n  0x00\n    /* \"#utility.yul\":6901:6907   */\n  dup1\n    /* \"#utility.yul\":6909:6915   */\n  0x00\n    /* \"#utility.yul\":6958:6961   */\n  0xe0\n    /* \"#utility.yul\":6946:6955   */\n  dup9\n    /* \"#utility.yul\":6937:6944   */\n  dup11\n    /* \"#utility.yul\":6933:6956   */\n  sub\n    /* \"#utility.yul\":6929:6962   */\n  slt\n    /* \"#utility.yul\":6926:7046   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6965:7044   */\n  tag_176\n  tag_50\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6926:7046   */\ntag_175:\n    /* \"#utility.yul\":7106:7107   */\n  0x00\n    /* \"#utility.yul\":7095:7104   */\n  dup9\n    /* \"#utility.yul\":7091:7108   */\n  add\n    /* \"#utility.yul\":7085:7109   */\n  mload\n    /* \"#utility.yul\":7136:7154   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7128:7134   */\n  dup2\n    /* \"#utility.yul\":7125:7155   */\n  gt\n    /* \"#utility.yul\":7122:7239   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":7158:7237   */\n  tag_178\n  tag_51\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7122:7239   */\ntag_177:\n    /* \"#utility.yul\":7263:7337   */\n  tag_179\n    /* \"#utility.yul\":7329:7336   */\n  dup11\n    /* \"#utility.yul\":7320:7326   */\n  dup3\n    /* \"#utility.yul\":7309:7318   */\n  dup12\n    /* \"#utility.yul\":7305:7327   */\n  add\n    /* \"#utility.yul\":7263:7337   */\n  tag_61\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7253:7337   */\n  swap8\n  pop\n    /* \"#utility.yul\":7056:7347   */\n  pop\n    /* \"#utility.yul\":7407:7409   */\n  0x20\n    /* \"#utility.yul\":7396:7405   */\n  dup9\n    /* \"#utility.yul\":7392:7410   */\n  add\n    /* \"#utility.yul\":7386:7411   */\n  mload\n    /* \"#utility.yul\":7438:7456   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7430:7436   */\n  dup2\n    /* \"#utility.yul\":7427:7457   */\n  gt\n    /* \"#utility.yul\":7424:7541   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7460:7539   */\n  tag_181\n  tag_51\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7424:7541   */\ntag_180:\n    /* \"#utility.yul\":7565:7639   */\n  tag_182\n    /* \"#utility.yul\":7631:7638   */\n  dup11\n    /* \"#utility.yul\":7622:7628   */\n  dup3\n    /* \"#utility.yul\":7611:7620   */\n  dup12\n    /* \"#utility.yul\":7607:7629   */\n  add\n    /* \"#utility.yul\":7565:7639   */\n  tag_61\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7555:7639   */\n  swap7\n  pop\n    /* \"#utility.yul\":7357:7649   */\n  pop\n    /* \"#utility.yul\":7688:7690   */\n  0x40\n    /* \"#utility.yul\":7714:7778   */\n  tag_183\n    /* \"#utility.yul\":7770:7777   */\n  dup11\n    /* \"#utility.yul\":7761:7767   */\n  dup3\n    /* \"#utility.yul\":7750:7759   */\n  dup12\n    /* \"#utility.yul\":7746:7768   */\n  add\n    /* \"#utility.yul\":7714:7778   */\n  tag_65\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7704:7778   */\n  swap6\n  pop\n    /* \"#utility.yul\":7659:7788   */\n  pop\n    /* \"#utility.yul\":7827:7829   */\n  0x60\n    /* \"#utility.yul\":7853:7917   */\n  tag_184\n    /* \"#utility.yul\":7909:7916   */\n  dup11\n    /* \"#utility.yul\":7900:7906   */\n  dup3\n    /* \"#utility.yul\":7889:7898   */\n  dup12\n    /* \"#utility.yul\":7885:7907   */\n  add\n    /* \"#utility.yul\":7853:7917   */\n  tag_65\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7843:7917   */\n  swap5\n  pop\n    /* \"#utility.yul\":7798:7927   */\n  pop\n    /* \"#utility.yul\":7987:7990   */\n  0x80\n    /* \"#utility.yul\":7976:7985   */\n  dup9\n    /* \"#utility.yul\":7972:7991   */\n  add\n    /* \"#utility.yul\":7966:7992   */\n  mload\n    /* \"#utility.yul\":8019:8037   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8011:8017   */\n  dup2\n    /* \"#utility.yul\":8008:8038   */\n  gt\n    /* \"#utility.yul\":8005:8122   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8041:8120   */\n  tag_186\n  tag_51\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8005:8122   */\ntag_185:\n    /* \"#utility.yul\":8146:8267   */\n  tag_187\n    /* \"#utility.yul\":8259:8266   */\n  dup11\n    /* \"#utility.yul\":8250:8256   */\n  dup3\n    /* \"#utility.yul\":8239:8248   */\n  dup12\n    /* \"#utility.yul\":8235:8257   */\n  add\n    /* \"#utility.yul\":8146:8267   */\n  tag_75\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8136:8267   */\n  swap4\n  pop\n    /* \"#utility.yul\":7937:8277   */\n  pop\n    /* \"#utility.yul\":8337:8340   */\n  0xa0\n    /* \"#utility.yul\":8326:8335   */\n  dup9\n    /* \"#utility.yul\":8322:8341   */\n  add\n    /* \"#utility.yul\":8316:8342   */\n  mload\n    /* \"#utility.yul\":8369:8387   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8361:8367   */\n  dup2\n    /* \"#utility.yul\":8358:8388   */\n  gt\n    /* \"#utility.yul\":8355:8472   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8391:8470   */\n  tag_189\n  tag_51\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8355:8472   */\ntag_188:\n    /* \"#utility.yul\":8496:8617   */\n  tag_190\n    /* \"#utility.yul\":8609:8616   */\n  dup11\n    /* \"#utility.yul\":8600:8606   */\n  dup3\n    /* \"#utility.yul\":8589:8598   */\n  dup12\n    /* \"#utility.yul\":8585:8607   */\n  add\n    /* \"#utility.yul\":8496:8617   */\n  tag_75\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8486:8617   */\n  swap3\n  pop\n    /* \"#utility.yul\":8287:8627   */\n  pop\n    /* \"#utility.yul\":8666:8669   */\n  0xc0\n    /* \"#utility.yul\":8693:8768   */\n  tag_191\n    /* \"#utility.yul\":8760:8767   */\n  dup11\n    /* \"#utility.yul\":8751:8757   */\n  dup3\n    /* \"#utility.yul\":8740:8749   */\n  dup12\n    /* \"#utility.yul\":8736:8758   */\n  add\n    /* \"#utility.yul\":8693:8768   */\n  tag_77\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8683:8768   */\n  swap2\n  pop\n    /* \"#utility.yul\":8637:8778   */\n  pop\n    /* \"#utility.yul\":6592:8785   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8791:8890   */\ntag_78:\n    /* \"#utility.yul\":8843:8849   */\n  0x00\n    /* \"#utility.yul\":8877:8882   */\n  dup2\n    /* \"#utility.yul\":8871:8883   */\n  mload\n    /* \"#utility.yul\":8861:8883   */\n  swap1\n  pop\n    /* \"#utility.yul\":8791:8890   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8896:9076   */\ntag_79:\n    /* \"#utility.yul\":8944:9021   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8941:8942   */\n  0x00\n    /* \"#utility.yul\":8934:9022   */\n  mstore\n    /* \"#utility.yul\":9041:9045   */\n  0x22\n    /* \"#utility.yul\":9038:9039   */\n  0x04\n    /* \"#utility.yul\":9031:9046   */\n  mstore\n    /* \"#utility.yul\":9065:9069   */\n  0x24\n    /* \"#utility.yul\":9062:9063   */\n  0x00\n    /* \"#utility.yul\":9055:9070   */\n  revert\n    /* \"#utility.yul\":9082:9402   */\ntag_80:\n    /* \"#utility.yul\":9126:9132   */\n  0x00\n    /* \"#utility.yul\":9163:9164   */\n  0x02\n    /* \"#utility.yul\":9157:9161   */\n  dup3\n    /* \"#utility.yul\":9153:9165   */\n  div\n    /* \"#utility.yul\":9143:9165   */\n  swap1\n  pop\n    /* \"#utility.yul\":9210:9211   */\n  0x01\n    /* \"#utility.yul\":9204:9208   */\n  dup3\n    /* \"#utility.yul\":9200:9212   */\n  and\n    /* \"#utility.yul\":9231:9249   */\n  dup1\n    /* \"#utility.yul\":9221:9302   */\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9287:9291   */\n  0x7f\n    /* \"#utility.yul\":9279:9285   */\n  dup3\n    /* \"#utility.yul\":9275:9292   */\n  and\n    /* \"#utility.yul\":9265:9292   */\n  swap2\n  pop\n    /* \"#utility.yul\":9221:9302   */\ntag_195:\n    /* \"#utility.yul\":9349:9351   */\n  0x20\n    /* \"#utility.yul\":9341:9347   */\n  dup3\n    /* \"#utility.yul\":9338:9352   */\n  lt\n    /* \"#utility.yul\":9318:9336   */\n  dup2\n    /* \"#utility.yul\":9315:9353   */\n  sub\n    /* \"#utility.yul\":9312:9396   */\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9368:9386   */\n  tag_197\n  tag_79\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9312:9396   */\ntag_196:\n    /* \"#utility.yul\":9133:9402   */\n  pop\n    /* \"#utility.yul\":9082:9402   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9408:9549   */\ntag_81:\n    /* \"#utility.yul\":9457:9461   */\n  0x00\n    /* \"#utility.yul\":9480:9483   */\n  dup2\n    /* \"#utility.yul\":9472:9483   */\n  swap1\n  pop\n    /* \"#utility.yul\":9503:9506   */\n  dup2\n    /* \"#utility.yul\":9500:9501   */\n  0x00\n    /* \"#utility.yul\":9493:9507   */\n  mstore\n    /* \"#utility.yul\":9537:9541   */\n  0x20\n    /* \"#utility.yul\":9534:9535   */\n  0x00\n    /* \"#utility.yul\":9524:9542   */\n  keccak256\n    /* \"#utility.yul\":9516:9542   */\n  swap1\n  pop\n    /* \"#utility.yul\":9408:9549   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9555:9648   */\ntag_82:\n    /* \"#utility.yul\":9592:9598   */\n  0x00\n    /* \"#utility.yul\":9639:9641   */\n  0x20\n    /* \"#utility.yul\":9634:9636   */\n  0x1f\n    /* \"#utility.yul\":9627:9632   */\n  dup4\n    /* \"#utility.yul\":9623:9637   */\n  add\n    /* \"#utility.yul\":9619:9642   */\n  div\n    /* \"#utility.yul\":9609:9642   */\n  swap1\n  pop\n    /* \"#utility.yul\":9555:9648   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9654:9761   */\ntag_83:\n    /* \"#utility.yul\":9698:9706   */\n  0x00\n    /* \"#utility.yul\":9748:9753   */\n  dup3\n    /* \"#utility.yul\":9742:9746   */\n  dup3\n    /* \"#utility.yul\":9738:9754   */\n  shl\n    /* \"#utility.yul\":9717:9754   */\n  swap1\n  pop\n    /* \"#utility.yul\":9654:9761   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9767:10160   */\ntag_84:\n    /* \"#utility.yul\":9836:9842   */\n  0x00\n    /* \"#utility.yul\":9886:9887   */\n  0x08\n    /* \"#utility.yul\":9874:9884   */\n  dup4\n    /* \"#utility.yul\":9870:9888   */\n  mul\n    /* \"#utility.yul\":9909:10006   */\n  tag_202\n    /* \"#utility.yul\":9939:10005   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9928:9937   */\n  dup3\n    /* \"#utility.yul\":9909:10006   */\n  tag_83\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10027:10066   */\n  tag_203\n    /* \"#utility.yul\":10057:10065   */\n  dup7\n    /* \"#utility.yul\":10046:10055   */\n  dup4\n    /* \"#utility.yul\":10027:10066   */\n  tag_83\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10015:10066   */\n  swap6\n  pop\n    /* \"#utility.yul\":10099:10103   */\n  dup1\n    /* \"#utility.yul\":10095:10104   */\n  not\n    /* \"#utility.yul\":10088:10093   */\n  dup5\n    /* \"#utility.yul\":10084:10105   */\n  and\n    /* \"#utility.yul\":10075:10105   */\n  swap4\n  pop\n    /* \"#utility.yul\":10148:10152   */\n  dup1\n    /* \"#utility.yul\":10138:10146   */\n  dup7\n    /* \"#utility.yul\":10134:10153   */\n  and\n    /* \"#utility.yul\":10127:10132   */\n  dup5\n    /* \"#utility.yul\":10124:10154   */\n  or\n    /* \"#utility.yul\":10114:10154   */\n  swap3\n  pop\n    /* \"#utility.yul\":9843:10160   */\n  pop\n  pop\n    /* \"#utility.yul\":9767:10160   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10166:10226   */\ntag_85:\n    /* \"#utility.yul\":10194:10197   */\n  0x00\n    /* \"#utility.yul\":10215:10220   */\n  dup2\n    /* \"#utility.yul\":10208:10220   */\n  swap1\n  pop\n    /* \"#utility.yul\":10166:10226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10232:10374   */\ntag_86:\n    /* \"#utility.yul\":10282:10291   */\n  0x00\n    /* \"#utility.yul\":10315:10368   */\n  tag_206\n    /* \"#utility.yul\":10333:10367   */\n  tag_207\n    /* \"#utility.yul\":10342:10366   */\n  tag_208\n    /* \"#utility.yul\":10360:10365   */\n  dup5\n    /* \"#utility.yul\":10342:10366   */\n  tag_70\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10333:10367   */\n  tag_85\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10315:10368   */\n  tag_70\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10302:10368   */\n  swap1\n  pop\n    /* \"#utility.yul\":10232:10374   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10380:10455   */\ntag_87:\n    /* \"#utility.yul\":10423:10426   */\n  0x00\n    /* \"#utility.yul\":10444:10449   */\n  dup2\n    /* \"#utility.yul\":10437:10449   */\n  swap1\n  pop\n    /* \"#utility.yul\":10380:10455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10461:10730   */\ntag_88:\n    /* \"#utility.yul\":10571:10610   */\n  tag_211\n    /* \"#utility.yul\":10602:10609   */\n  dup4\n    /* \"#utility.yul\":10571:10610   */\n  tag_86\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10632:10723   */\n  tag_212\n    /* \"#utility.yul\":10681:10722   */\n  tag_213\n    /* \"#utility.yul\":10705:10721   */\n  dup3\n    /* \"#utility.yul\":10681:10722   */\n  tag_87\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10673:10679   */\n  dup5\n    /* \"#utility.yul\":10666:10670   */\n  dup5\n    /* \"#utility.yul\":10660:10671   */\n  sload\n    /* \"#utility.yul\":10632:10723   */\n  tag_84\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10626:10630   */\n  dup3\n    /* \"#utility.yul\":10619:10724   */\n  sstore\n    /* \"#utility.yul\":10537:10730   */\n  pop\n    /* \"#utility.yul\":10461:10730   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10736:10809   */\ntag_89:\n    /* \"#utility.yul\":10781:10784   */\n  0x00\n    /* \"#utility.yul\":10736:10809   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":10815:11004   */\ntag_90:\n    /* \"#utility.yul\":10892:10924   */\n  tag_216\n  tag_89\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10933:10998   */\n  tag_217\n    /* \"#utility.yul\":10991:10997   */\n  dup2\n    /* \"#utility.yul\":10983:10989   */\n  dup5\n    /* \"#utility.yul\":10977:10981   */\n  dup5\n    /* \"#utility.yul\":10933:10998   */\n  tag_88\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10868:11004   */\n  pop\n    /* \"#utility.yul\":10815:11004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11010:11196   */\ntag_91:\n    /* \"#utility.yul\":11070:11190   */\ntag_219:\n    /* \"#utility.yul\":11087:11090   */\n  dup2\n    /* \"#utility.yul\":11080:11085   */\n  dup2\n    /* \"#utility.yul\":11077:11091   */\n  lt\n    /* \"#utility.yul\":11070:11190   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":11141:11180   */\n  tag_222\n    /* \"#utility.yul\":11178:11179   */\n  0x00\n    /* \"#utility.yul\":11171:11176   */\n  dup3\n    /* \"#utility.yul\":11141:11180   */\n  tag_90\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11114:11115   */\n  0x01\n    /* \"#utility.yul\":11107:11112   */\n  dup2\n    /* \"#utility.yul\":11103:11116   */\n  add\n    /* \"#utility.yul\":11094:11116   */\n  swap1\n  pop\n    /* \"#utility.yul\":11070:11190   */\n  jump(tag_219)\ntag_221:\n    /* \"#utility.yul\":11010:11196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11202:11745   */\ntag_92:\n    /* \"#utility.yul\":11303:11305   */\n  0x1f\n    /* \"#utility.yul\":11298:11301   */\n  dup3\n    /* \"#utility.yul\":11295:11306   */\n  gt\n    /* \"#utility.yul\":11292:11738   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":11337:11375   */\n  tag_225\n    /* \"#utility.yul\":11369:11374   */\n  dup2\n    /* \"#utility.yul\":11337:11375   */\n  tag_81\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11421:11450   */\n  tag_226\n    /* \"#utility.yul\":11439:11449   */\n  dup5\n    /* \"#utility.yul\":11421:11450   */\n  tag_82\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":11411:11419   */\n  dup2\n    /* \"#utility.yul\":11407:11451   */\n  add\n    /* \"#utility.yul\":11604:11606   */\n  0x20\n    /* \"#utility.yul\":11592:11602   */\n  dup6\n    /* \"#utility.yul\":11589:11607   */\n  lt\n    /* \"#utility.yul\":11586:11635   */\n  iszero\n  tag_227\n  jumpi\n    /* \"#utility.yul\":11625:11633   */\n  dup2\n    /* \"#utility.yul\":11610:11633   */\n  swap1\n  pop\n    /* \"#utility.yul\":11586:11635   */\ntag_227:\n    /* \"#utility.yul\":11648:11728   */\n  tag_228\n    /* \"#utility.yul\":11704:11726   */\n  tag_229\n    /* \"#utility.yul\":11722:11725   */\n  dup6\n    /* \"#utility.yul\":11704:11726   */\n  tag_82\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11694:11702   */\n  dup4\n    /* \"#utility.yul\":11690:11727   */\n  add\n    /* \"#utility.yul\":11677:11688   */\n  dup3\n    /* \"#utility.yul\":11648:11728   */\n  tag_91\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11307:11738   */\n  pop\n  pop\n    /* \"#utility.yul\":11292:11738   */\ntag_224:\n    /* \"#utility.yul\":11202:11745   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11751:11868   */\ntag_93:\n    /* \"#utility.yul\":11805:11813   */\n  0x00\n    /* \"#utility.yul\":11855:11860   */\n  dup3\n    /* \"#utility.yul\":11849:11853   */\n  dup3\n    /* \"#utility.yul\":11845:11861   */\n  shr\n    /* \"#utility.yul\":11824:11861   */\n  swap1\n  pop\n    /* \"#utility.yul\":11751:11868   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11874:12043   */\ntag_94:\n    /* \"#utility.yul\":11918:11924   */\n  0x00\n    /* \"#utility.yul\":11951:12002   */\n  tag_232\n    /* \"#utility.yul\":11999:12000   */\n  0x00\n    /* \"#utility.yul\":11995:12001   */\n  not\n    /* \"#utility.yul\":11987:11992   */\n  dup5\n    /* \"#utility.yul\":11984:11985   */\n  0x08\n    /* \"#utility.yul\":11980:11993   */\n  mul\n    /* \"#utility.yul\":11951:12002   */\n  tag_93\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11947:12003   */\n  not\n    /* \"#utility.yul\":12032:12036   */\n  dup1\n    /* \"#utility.yul\":12026:12030   */\n  dup4\n    /* \"#utility.yul\":12022:12037   */\n  and\n    /* \"#utility.yul\":12012:12037   */\n  swap2\n  pop\n    /* \"#utility.yul\":11925:12043   */\n  pop\n    /* \"#utility.yul\":11874:12043   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12048:12343   */\ntag_95:\n    /* \"#utility.yul\":12124:12128   */\n  0x00\n    /* \"#utility.yul\":12270:12299   */\n  tag_234\n    /* \"#utility.yul\":12295:12298   */\n  dup4\n    /* \"#utility.yul\":12289:12293   */\n  dup4\n    /* \"#utility.yul\":12270:12299   */\n  tag_94\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":12262:12299   */\n  swap2\n  pop\n    /* \"#utility.yul\":12332:12335   */\n  dup3\n    /* \"#utility.yul\":12329:12330   */\n  0x02\n    /* \"#utility.yul\":12325:12336   */\n  mul\n    /* \"#utility.yul\":12319:12323   */\n  dup3\n    /* \"#utility.yul\":12316:12337   */\n  or\n    /* \"#utility.yul\":12308:12337   */\n  swap1\n  pop\n    /* \"#utility.yul\":12048:12343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12348:13743   */\ntag_9:\n    /* \"#utility.yul\":12465:12502   */\n  tag_236\n    /* \"#utility.yul\":12498:12501   */\n  dup3\n    /* \"#utility.yul\":12465:12502   */\n  tag_78\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12567:12585   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":12559:12565   */\n  dup2\n    /* \"#utility.yul\":12556:12586   */\n  gt\n    /* \"#utility.yul\":12553:12609   */\n  iszero\n  tag_237\n  jumpi\n    /* \"#utility.yul\":12589:12607   */\n  tag_238\n  tag_55\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12553:12609   */\ntag_237:\n    /* \"#utility.yul\":12633:12671   */\n  tag_239\n    /* \"#utility.yul\":12665:12669   */\n  dup3\n    /* \"#utility.yul\":12659:12670   */\n  sload\n    /* \"#utility.yul\":12633:12671   */\n  tag_80\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":12718:12785   */\n  tag_240\n    /* \"#utility.yul\":12778:12784   */\n  dup3\n    /* \"#utility.yul\":12770:12776   */\n  dup3\n    /* \"#utility.yul\":12764:12768   */\n  dup6\n    /* \"#utility.yul\":12718:12785   */\n  tag_92\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12812:12813   */\n  0x00\n    /* \"#utility.yul\":12836:12840   */\n  0x20\n    /* \"#utility.yul\":12823:12840   */\n  swap1\n  pop\n    /* \"#utility.yul\":12868:12870   */\n  0x1f\n    /* \"#utility.yul\":12860:12866   */\n  dup4\n    /* \"#utility.yul\":12857:12871   */\n  gt\n    /* \"#utility.yul\":12885:12886   */\n  0x01\n    /* \"#utility.yul\":12880:13498   */\n  dup2\n  eq\n  tag_242\n  jumpi\n    /* \"#utility.yul\":13542:13543   */\n  0x00\n    /* \"#utility.yul\":13559:13565   */\n  dup5\n    /* \"#utility.yul\":13556:13633   */\n  iszero\n  tag_243\n  jumpi\n    /* \"#utility.yul\":13608:13617   */\n  dup3\n    /* \"#utility.yul\":13603:13606   */\n  dup8\n    /* \"#utility.yul\":13599:13618   */\n  add\n    /* \"#utility.yul\":13593:13619   */\n  mload\n    /* \"#utility.yul\":13584:13619   */\n  swap1\n  pop\n    /* \"#utility.yul\":13556:13633   */\ntag_243:\n    /* \"#utility.yul\":13659:13726   */\n  tag_244\n    /* \"#utility.yul\":13719:13725   */\n  dup6\n    /* \"#utility.yul\":13712:13717   */\n  dup3\n    /* \"#utility.yul\":13659:13726   */\n  tag_95\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":13653:13657   */\n  dup7\n    /* \"#utility.yul\":13646:13727   */\n  sstore\n    /* \"#utility.yul\":13515:13737   */\n  pop\n    /* \"#utility.yul\":12850:13737   */\n  jump(tag_241)\n    /* \"#utility.yul\":12880:13498   */\ntag_242:\n    /* \"#utility.yul\":12932:12936   */\n  0x1f\n    /* \"#utility.yul\":12928:12937   */\n  not\n    /* \"#utility.yul\":12920:12926   */\n  dup5\n    /* \"#utility.yul\":12916:12938   */\n  and\n    /* \"#utility.yul\":12966:13003   */\n  tag_245\n    /* \"#utility.yul\":12998:13002   */\n  dup7\n    /* \"#utility.yul\":12966:13003   */\n  tag_81\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":13025:13026   */\n  0x00\n    /* \"#utility.yul\":13039:13247   */\ntag_246:\n    /* \"#utility.yul\":13053:13060   */\n  dup3\n    /* \"#utility.yul\":13050:13051   */\n  dup2\n    /* \"#utility.yul\":13047:13061   */\n  lt\n    /* \"#utility.yul\":13039:13247   */\n  iszero\n  tag_248\n  jumpi\n    /* \"#utility.yul\":13132:13141   */\n  dup5\n    /* \"#utility.yul\":13127:13130   */\n  dup10\n    /* \"#utility.yul\":13123:13142   */\n  add\n    /* \"#utility.yul\":13117:13143   */\n  mload\n    /* \"#utility.yul\":13109:13115   */\n  dup3\n    /* \"#utility.yul\":13102:13144   */\n  sstore\n    /* \"#utility.yul\":13183:13184   */\n  0x01\n    /* \"#utility.yul\":13175:13181   */\n  dup3\n    /* \"#utility.yul\":13171:13185   */\n  add\n    /* \"#utility.yul\":13161:13185   */\n  swap2\n  pop\n    /* \"#utility.yul\":13230:13232   */\n  0x20\n    /* \"#utility.yul\":13219:13228   */\n  dup6\n    /* \"#utility.yul\":13215:13233   */\n  add\n    /* \"#utility.yul\":13202:13233   */\n  swap5\n  pop\n    /* \"#utility.yul\":13076:13080   */\n  0x20\n    /* \"#utility.yul\":13073:13074   */\n  dup2\n    /* \"#utility.yul\":13069:13081   */\n  add\n    /* \"#utility.yul\":13064:13081   */\n  swap1\n  pop\n    /* \"#utility.yul\":13039:13247   */\n  jump(tag_246)\ntag_248:\n    /* \"#utility.yul\":13275:13281   */\n  dup7\n    /* \"#utility.yul\":13266:13273   */\n  dup4\n    /* \"#utility.yul\":13263:13282   */\n  lt\n    /* \"#utility.yul\":13260:13439   */\n  iszero\n  tag_249\n  jumpi\n    /* \"#utility.yul\":13333:13342   */\n  dup5\n    /* \"#utility.yul\":13328:13331   */\n  dup10\n    /* \"#utility.yul\":13324:13343   */\n  add\n    /* \"#utility.yul\":13318:13344   */\n  mload\n    /* \"#utility.yul\":13376:13424   */\n  tag_250\n    /* \"#utility.yul\":13418:13422   */\n  0x1f\n    /* \"#utility.yul\":13410:13416   */\n  dup10\n    /* \"#utility.yul\":13406:13423   */\n  and\n    /* \"#utility.yul\":13395:13404   */\n  dup3\n    /* \"#utility.yul\":13376:13424   */\n  tag_94\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":13368:13374   */\n  dup4\n    /* \"#utility.yul\":13361:13425   */\n  sstore\n    /* \"#utility.yul\":13283:13439   */\n  pop\n    /* \"#utility.yul\":13260:13439   */\ntag_249:\n    /* \"#utility.yul\":13485:13486   */\n  0x01\n    /* \"#utility.yul\":13481:13482   */\n  0x02\n    /* \"#utility.yul\":13473:13479   */\n  dup9\n    /* \"#utility.yul\":13469:13483   */\n  mul\n    /* \"#utility.yul\":13465:13487   */\n  add\n    /* \"#utility.yul\":13459:13463   */\n  dup9\n    /* \"#utility.yul\":13452:13488   */\n  sstore\n    /* \"#utility.yul\":12887:13498   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":12850:13737   */\ntag_241:\n  pop\n    /* \"#utility.yul\":12440:13743   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":12348:13743   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13749:13867   */\ntag_96:\n    /* \"#utility.yul\":13836:13860   */\n  tag_252\n    /* \"#utility.yul\":13854:13859   */\n  dup2\n    /* \"#utility.yul\":13836:13860   */\n  tag_63\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13831:13834   */\n  dup3\n    /* \"#utility.yul\":13824:13861   */\n  mstore\n    /* \"#utility.yul\":13749:13867   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13873:14095   */\ntag_14:\n    /* \"#utility.yul\":13966:13970   */\n  0x00\n    /* \"#utility.yul\":14004:14006   */\n  0x20\n    /* \"#utility.yul\":13993:14002   */\n  dup3\n    /* \"#utility.yul\":13989:14007   */\n  add\n    /* \"#utility.yul\":13981:14007   */\n  swap1\n  pop\n    /* \"#utility.yul\":14017:14088   */\n  tag_254\n    /* \"#utility.yul\":14085:14086   */\n  0x00\n    /* \"#utility.yul\":14074:14083   */\n  dup4\n    /* \"#utility.yul\":14070:14087   */\n  add\n    /* \"#utility.yul\":14061:14067   */\n  dup5\n    /* \"#utility.yul\":14017:14088   */\n  tag_96\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":13873:14095   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14101:14281   */\ntag_22:\n    /* \"#utility.yul\":14149:14226   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14146:14147   */\n  0x00\n    /* \"#utility.yul\":14139:14227   */\n  mstore\n    /* \"#utility.yul\":14246:14250   */\n  0x21\n    /* \"#utility.yul\":14243:14244   */\n  0x04\n    /* \"#utility.yul\":14236:14251   */\n  mstore\n    /* \"#utility.yul\":14270:14274   */\n  0x24\n    /* \"#utility.yul\":14267:14268   */\n  0x00\n    /* \"#utility.yul\":14260:14275   */\n  revert\n    /* \"#utility.yul\":14287:14467   */\ntag_28:\n    /* \"#utility.yul\":14335:14412   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14332:14333   */\n  0x00\n    /* \"#utility.yul\":14325:14413   */\n  mstore\n    /* \"#utility.yul\":14432:14436   */\n  0x32\n    /* \"#utility.yul\":14429:14430   */\n  0x04\n    /* \"#utility.yul\":14422:14437   */\n  mstore\n    /* \"#utility.yul\":14456:14460   */\n  0x24\n    /* \"#utility.yul\":14453:14454   */\n  0x00\n    /* \"#utility.yul\":14446:14461   */\n  revert\n    /* \"#utility.yul\":14473:14591   */\ntag_97:\n    /* \"#utility.yul\":14560:14584   */\n  tag_258\n    /* \"#utility.yul\":14578:14583   */\n  dup2\n    /* \"#utility.yul\":14560:14584   */\n  tag_70\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":14555:14558   */\n  dup3\n    /* \"#utility.yul\":14548:14585   */\n  mstore\n    /* \"#utility.yul\":14473:14591   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14597:14819   */\ntag_48:\n    /* \"#utility.yul\":14690:14694   */\n  0x00\n    /* \"#utility.yul\":14728:14730   */\n  0x20\n    /* \"#utility.yul\":14717:14726   */\n  dup3\n    /* \"#utility.yul\":14713:14731   */\n  add\n    /* \"#utility.yul\":14705:14731   */\n  swap1\n  pop\n    /* \"#utility.yul\":14741:14812   */\n  tag_260\n    /* \"#utility.yul\":14809:14810   */\n  0x00\n    /* \"#utility.yul\":14798:14807   */\n  dup4\n    /* \"#utility.yul\":14794:14811   */\n  add\n    /* \"#utility.yul\":14785:14791   */\n  dup5\n    /* \"#utility.yul\":14741:14812   */\n  tag_97\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":14597:14819   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"recipe.sol\":233:2991  contract Recipe is ERC20, Ownable {... */\ntag_36:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"recipe.sol\":233:2991  contract Recipe is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6fd5ae15\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbd5546be\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf9e05c6d\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x6fd5ae15\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x737d6a6c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x48361490\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x635a4cc5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x63a2b02b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d9ce804\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":596:634  ResourceAmount[] public inputResources */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":1886:2050  function mint(address to, uint256 amount) public {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"recipe.sol\":2121:2281  function burn(uint256 amount) public {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"recipe.sol\":2720:2833  function getInputResources() public view returns (ResourceAmount[] memory) {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":640:679  ResourceAmount[] public outputResources */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":1552:1649  function isFirstLevel() public view returns (bool){... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":571:590  Levels public level */\n    tag_14:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":2557:2680  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"recipe.sol\":2874:2989  function getOutputResources() public view returns (ResourceAmount[] memory) {... */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":2356:2483  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"recipe.sol\":1655:1811  function setLevel(Levels level_)public {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"recipe.sol\":525:565  address public unlimitedAllowanceAddress */\n    tag_24:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"recipe.sol\":596:634  ResourceAmount[] public inputResources */\n    tag_41:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"recipe.sol\":1886:2050  function mint(address to, uint256 amount) public {... */\n    tag_59:\n        /* \"recipe.sol\":1967:1992  unlimitedAllowanceAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"recipe.sol\":1953:1992  msg.sender == unlimitedAllowanceAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"recipe.sol\":1953:1963  msg.sender */\n      caller\n        /* \"recipe.sol\":1953:1992  msg.sender == unlimitedAllowanceAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"recipe.sol\":1945:2016  require(msg.sender == unlimitedAllowanceAddress, \"Not allowed to mint\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"recipe.sol\":2026:2043  _mint(to, amount) */\n      tag_140\n        /* \"recipe.sol\":2032:2034  to */\n      dup3\n        /* \"recipe.sol\":2036:2042  amount */\n      dup3\n        /* \"recipe.sol\":2026:2031  _mint */\n      tag_141\n        /* \"recipe.sol\":2026:2043  _mint(to, amount) */\n      jump\t// in\n    tag_140:\n        /* \"recipe.sol\":1886:2050  function mint(address to, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"recipe.sol\":2121:2281  function burn(uint256 amount) public {... */\n    tag_62:\n        /* \"recipe.sol\":2190:2215  unlimitedAllowanceAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"recipe.sol\":2176:2215  msg.sender == unlimitedAllowanceAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"recipe.sol\":2176:2186  msg.sender */\n      caller\n        /* \"recipe.sol\":2176:2215  msg.sender == unlimitedAllowanceAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"recipe.sol\":2168:2239  require(msg.sender == unlimitedAllowanceAddress, \"Not allowed to burn\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"recipe.sol\":2249:2274  _burn(msg.sender, amount) */\n      tag_146\n        /* \"recipe.sol\":2255:2265  msg.sender */\n      caller\n        /* \"recipe.sol\":2267:2273  amount */\n      dup3\n        /* \"recipe.sol\":2249:2254  _burn */\n      tag_147\n        /* \"recipe.sol\":2249:2274  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_146:\n        /* \"recipe.sol\":2121:2281  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"recipe.sol\":2720:2833  function getInputResources() public view returns (ResourceAmount[] memory) {... */\n    tag_64:\n        /* \"recipe.sol\":2770:2793  ResourceAmount[] memory */\n      0x60\n        /* \"recipe.sol\":2812:2826  inputResources */\n      0x07\n        /* \"recipe.sol\":2805:2826  return inputResources */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_149:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_150\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_149)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"recipe.sol\":2720:2833  function getInputResources() public view returns (ResourceAmount[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"recipe.sol\":640:679  ResourceAmount[] public outputResources */\n    tag_69:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"recipe.sol\":1552:1649  function isFirstLevel() public view returns (bool){... */\n    tag_72:\n        /* \"recipe.sol\":1597:1601  bool */\n      0x00\n        /* \"recipe.sol\":1629:1642  Levels.Level1 */\n      dup1\n        /* \"recipe.sol\":1620:1642  level == Levels.Level1 */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_155\n      jumpi\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n    tag_155:\n        /* \"recipe.sol\":1620:1625  level */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"recipe.sol\":1620:1642  level == Levels.Level1 */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_158\n      jumpi\n      tag_159\n      tag_157\n      jump\t// in\n    tag_159:\n    tag_158:\n      eq\n        /* \"recipe.sol\":1612:1642  return  level == Levels.Level1 */\n      swap1\n      pop\n        /* \"recipe.sol\":1552:1649  function isFirstLevel() public view returns (bool){... */\n      swap1\n      jump\t// out\n        /* \"recipe.sol\":571:590  Levels public level */\n    tag_75:\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"recipe.sol\":2557:2680  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_81:\n        /* \"recipe.sol\":2623:2630  uint256 */\n      0x00\n        /* \"recipe.sol\":2649:2673  super.balanceOf(account) */\n      tag_161\n        /* \"recipe.sol\":2665:2672  account */\n      dup3\n        /* \"recipe.sol\":2649:2664  super.balanceOf */\n      tag_162\n        /* \"recipe.sol\":2649:2673  super.balanceOf(account) */\n      jump\t// in\n    tag_161:\n        /* \"recipe.sol\":2642:2673  return super.balanceOf(account) */\n      swap1\n      pop\n        /* \"recipe.sol\":2557:2680  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"recipe.sol\":2874:2989  function getOutputResources() public view returns (ResourceAmount[] memory) {... */\n    tag_86:\n        /* \"recipe.sol\":2925:2948  ResourceAmount[] memory */\n      0x60\n        /* \"recipe.sol\":2967:2982  outputResources */\n      0x08\n        /* \"recipe.sol\":2960:2982  return outputResources */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_170:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_171\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_170)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"recipe.sol\":2874:2989  function getOutputResources() public view returns (ResourceAmount[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_116\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_116\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"recipe.sol\":2356:2483  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_97:\n        /* \"recipe.sol\":2427:2431  bool */\n      0x00\n        /* \"recipe.sol\":2450:2476  super.transfer(to, amount) */\n      tag_181\n        /* \"recipe.sol\":2465:2467  to */\n      dup4\n        /* \"recipe.sol\":2469:2475  amount */\n      dup4\n        /* \"recipe.sol\":2450:2464  super.transfer */\n      tag_182\n        /* \"recipe.sol\":2450:2476  super.transfer(to, amount) */\n      jump\t// in\n    tag_181:\n        /* \"recipe.sol\":2443:2476  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"recipe.sol\":2356:2483  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"recipe.sol\":1655:1811  function setLevel(Levels level_)public {... */\n    tag_102:\n        /* \"recipe.sol\":1726:1751  unlimitedAllowanceAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"recipe.sol\":1712:1751  msg.sender == unlimitedAllowanceAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"recipe.sol\":1712:1722  msg.sender */\n      caller\n        /* \"recipe.sol\":1712:1751  msg.sender == unlimitedAllowanceAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"recipe.sol\":1704:1780  require(msg.sender == unlimitedAllowanceAddress, \"Not allowed to set level\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"recipe.sol\":1798:1804  level_ */\n      dup1\n        /* \"recipe.sol\":1790:1795  level */\n      0x06\n      0x14\n        /* \"recipe.sol\":1790:1804  level = level_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_157\n      jump\t// in\n    tag_188:\n    tag_187:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"recipe.sol\":1655:1811  function setLevel(Levels level_)public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"recipe.sol\":525:565  address public unlimitedAllowanceAddress */\n    tag_112:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_244)\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_248)\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_250:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_251:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_252:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_298:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_298)\n    tag_300:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_253:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_254:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_303\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_250\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":818:889   */\n      tag_304\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_251\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_305\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_252\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":988:1017   */\n      tag_306\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_253\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_31:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_308\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_254\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_256:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_258:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_259:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_314\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_258\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_260:\n        /* \"#utility.yul\":1983:2007   */\n      tag_316\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_259\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_317:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_261:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_319\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_260\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_262:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_263:\n        /* \"#utility.yul\":2339:2363   */\n      tag_322\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_262\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_323:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_264:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_325\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_263\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_34:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_328\n      tag_256\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2632:2751   */\n    tag_327:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_329\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_261\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_330\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_264\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_265:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_266:\n        /* \"#utility.yul\":3196:3217   */\n      tag_333\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_265\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_37:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_335\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_266\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3775   */\n    tag_40:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      sub\n        /* \"#utility.yul\":3525:3557   */\n      slt\n        /* \"#utility.yul\":3522:3641   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3560:3639   */\n      tag_338\n      tag_256\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3522:3641   */\n    tag_337:\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3705:3758   */\n      tag_339\n        /* \"#utility.yul\":3750:3757   */\n      dup5\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3730:3739   */\n      dup6\n        /* \"#utility.yul\":3726:3748   */\n      add\n        /* \"#utility.yul\":3705:3758   */\n      tag_264\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3695:3758   */\n      swap2\n      pop\n        /* \"#utility.yul\":3651:3768   */\n      pop\n        /* \"#utility.yul\":3446:3775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:3899   */\n    tag_267:\n        /* \"#utility.yul\":3868:3892   */\n      tag_341\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3868:3892   */\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3863:3866   */\n      dup3\n        /* \"#utility.yul\":3856:3893   */\n      mstore\n        /* \"#utility.yul\":3781:3899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4023   */\n    tag_268:\n        /* \"#utility.yul\":3992:4016   */\n      tag_343\n        /* \"#utility.yul\":4010:4015   */\n      dup2\n        /* \"#utility.yul\":3992:4016   */\n      tag_262\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3987:3990   */\n      dup3\n        /* \"#utility.yul\":3980:4017   */\n      mstore\n        /* \"#utility.yul\":3905:4023   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4029:4361   */\n    tag_43:\n        /* \"#utility.yul\":4150:4154   */\n      0x00\n        /* \"#utility.yul\":4188:4190   */\n      0x40\n        /* \"#utility.yul\":4177:4186   */\n      dup3\n        /* \"#utility.yul\":4173:4191   */\n      add\n        /* \"#utility.yul\":4165:4191   */\n      swap1\n      pop\n        /* \"#utility.yul\":4201:4272   */\n      tag_345\n        /* \"#utility.yul\":4269:4270   */\n      0x00\n        /* \"#utility.yul\":4258:4267   */\n      dup4\n        /* \"#utility.yul\":4254:4271   */\n      add\n        /* \"#utility.yul\":4245:4251   */\n      dup6\n        /* \"#utility.yul\":4201:4272   */\n      tag_267\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4282:4354   */\n      tag_346\n        /* \"#utility.yul\":4350:4352   */\n      0x20\n        /* \"#utility.yul\":4339:4348   */\n      dup4\n        /* \"#utility.yul\":4335:4353   */\n      add\n        /* \"#utility.yul\":4326:4332   */\n      dup5\n        /* \"#utility.yul\":4282:4354   */\n      tag_268\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4029:4361   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4367:4589   */\n    tag_47:\n        /* \"#utility.yul\":4460:4464   */\n      0x00\n        /* \"#utility.yul\":4498:4500   */\n      0x20\n        /* \"#utility.yul\":4487:4496   */\n      dup3\n        /* \"#utility.yul\":4483:4501   */\n      add\n        /* \"#utility.yul\":4475:4501   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4582   */\n      tag_348\n        /* \"#utility.yul\":4579:4580   */\n      0x00\n        /* \"#utility.yul\":4568:4577   */\n      dup4\n        /* \"#utility.yul\":4564:4581   */\n      add\n        /* \"#utility.yul\":4555:4561   */\n      dup5\n        /* \"#utility.yul\":4511:4582   */\n      tag_268\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4367:4589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4595:5214   */\n    tag_50:\n        /* \"#utility.yul\":4672:4678   */\n      0x00\n        /* \"#utility.yul\":4680:4686   */\n      dup1\n        /* \"#utility.yul\":4688:4694   */\n      0x00\n        /* \"#utility.yul\":4737:4739   */\n      0x60\n        /* \"#utility.yul\":4725:4734   */\n      dup5\n        /* \"#utility.yul\":4716:4723   */\n      dup7\n        /* \"#utility.yul\":4712:4735   */\n      sub\n        /* \"#utility.yul\":4708:4740   */\n      slt\n        /* \"#utility.yul\":4705:4824   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":4743:4822   */\n      tag_351\n      tag_256\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4705:4824   */\n    tag_350:\n        /* \"#utility.yul\":4863:4864   */\n      0x00\n        /* \"#utility.yul\":4888:4941   */\n      tag_352\n        /* \"#utility.yul\":4933:4940   */\n      dup7\n        /* \"#utility.yul\":4924:4930   */\n      dup3\n        /* \"#utility.yul\":4913:4922   */\n      dup8\n        /* \"#utility.yul\":4909:4931   */\n      add\n        /* \"#utility.yul\":4888:4941   */\n      tag_261\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4878:4941   */\n      swap4\n      pop\n        /* \"#utility.yul\":4834:4951   */\n      pop\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":5016:5069   */\n      tag_353\n        /* \"#utility.yul\":5061:5068   */\n      dup7\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5041:5050   */\n      dup8\n        /* \"#utility.yul\":5037:5059   */\n      add\n        /* \"#utility.yul\":5016:5069   */\n      tag_261\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5006:5069   */\n      swap3\n      pop\n        /* \"#utility.yul\":4961:5079   */\n      pop\n        /* \"#utility.yul\":5118:5120   */\n      0x40\n        /* \"#utility.yul\":5144:5197   */\n      tag_354\n        /* \"#utility.yul\":5189:5196   */\n      dup7\n        /* \"#utility.yul\":5180:5186   */\n      dup3\n        /* \"#utility.yul\":5169:5178   */\n      dup8\n        /* \"#utility.yul\":5165:5187   */\n      add\n        /* \"#utility.yul\":5144:5197   */\n      tag_264\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5134:5197   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5207   */\n      pop\n        /* \"#utility.yul\":4595:5214   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5220:5306   */\n    tag_269:\n        /* \"#utility.yul\":5255:5262   */\n      0x00\n        /* \"#utility.yul\":5295:5299   */\n      0xff\n        /* \"#utility.yul\":5288:5293   */\n      dup3\n        /* \"#utility.yul\":5284:5300   */\n      and\n        /* \"#utility.yul\":5273:5300   */\n      swap1\n      pop\n        /* \"#utility.yul\":5220:5306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5424   */\n    tag_270:\n        /* \"#utility.yul\":5395:5417   */\n      tag_357\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5395:5417   */\n      tag_269\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5390:5393   */\n      dup3\n        /* \"#utility.yul\":5383:5418   */\n      mstore\n        /* \"#utility.yul\":5312:5424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5644   */\n    tag_56:\n        /* \"#utility.yul\":5519:5523   */\n      0x00\n        /* \"#utility.yul\":5557:5559   */\n      0x20\n        /* \"#utility.yul\":5546:5555   */\n      dup3\n        /* \"#utility.yul\":5542:5560   */\n      add\n        /* \"#utility.yul\":5534:5560   */\n      swap1\n      pop\n        /* \"#utility.yul\":5570:5637   */\n      tag_359\n        /* \"#utility.yul\":5634:5635   */\n      0x00\n        /* \"#utility.yul\":5623:5632   */\n      dup4\n        /* \"#utility.yul\":5619:5636   */\n      add\n        /* \"#utility.yul\":5610:5616   */\n      dup5\n        /* \"#utility.yul\":5570:5637   */\n      tag_270\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5430:5644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5650:5796   */\n    tag_271:\n        /* \"#utility.yul\":5749:5755   */\n      0x00\n        /* \"#utility.yul\":5783:5788   */\n      dup2\n        /* \"#utility.yul\":5777:5789   */\n      mload\n        /* \"#utility.yul\":5767:5789   */\n      swap1\n      pop\n        /* \"#utility.yul\":5650:5796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5802:6018   */\n    tag_272:\n        /* \"#utility.yul\":5933:5944   */\n      0x00\n        /* \"#utility.yul\":5967:5973   */\n      dup3\n        /* \"#utility.yul\":5962:5965   */\n      dup3\n        /* \"#utility.yul\":5955:5974   */\n      mstore\n        /* \"#utility.yul\":6007:6011   */\n      0x20\n        /* \"#utility.yul\":6002:6005   */\n      dup3\n        /* \"#utility.yul\":5998:6012   */\n      add\n        /* \"#utility.yul\":5983:6012   */\n      swap1\n      pop\n        /* \"#utility.yul\":5802:6018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6024:6188   */\n    tag_273:\n        /* \"#utility.yul\":6123:6127   */\n      0x00\n        /* \"#utility.yul\":6146:6149   */\n      dup2\n        /* \"#utility.yul\":6138:6149   */\n      swap1\n      pop\n        /* \"#utility.yul\":6176:6180   */\n      0x20\n        /* \"#utility.yul\":6171:6174   */\n      dup3\n        /* \"#utility.yul\":6167:6181   */\n      add\n        /* \"#utility.yul\":6159:6181   */\n      swap1\n      pop\n        /* \"#utility.yul\":6024:6188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6194:6302   */\n    tag_274:\n        /* \"#utility.yul\":6271:6295   */\n      tag_364\n        /* \"#utility.yul\":6289:6294   */\n      dup2\n        /* \"#utility.yul\":6271:6295   */\n      tag_259\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6266:6269   */\n      dup3\n        /* \"#utility.yul\":6259:6296   */\n      mstore\n        /* \"#utility.yul\":6194:6302   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6308:6416   */\n    tag_275:\n        /* \"#utility.yul\":6385:6409   */\n      tag_366\n        /* \"#utility.yul\":6403:6408   */\n      dup2\n        /* \"#utility.yul\":6385:6409   */\n      tag_262\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6380:6383   */\n      dup3\n        /* \"#utility.yul\":6373:6410   */\n      mstore\n        /* \"#utility.yul\":6308:6416   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6490:7019   */\n    tag_276:\n        /* \"#utility.yul\":6641:6645   */\n      0x40\n        /* \"#utility.yul\":6636:6639   */\n      dup3\n        /* \"#utility.yul\":6632:6646   */\n      add\n        /* \"#utility.yul\":6744:6748   */\n      0x00\n        /* \"#utility.yul\":6737:6742   */\n      dup3\n        /* \"#utility.yul\":6733:6749   */\n      add\n        /* \"#utility.yul\":6727:6750   */\n      mload\n        /* \"#utility.yul\":6763:6826   */\n      tag_368\n        /* \"#utility.yul\":6820:6824   */\n      0x00\n        /* \"#utility.yul\":6815:6818   */\n      dup6\n        /* \"#utility.yul\":6811:6825   */\n      add\n        /* \"#utility.yul\":6797:6809   */\n      dup3\n        /* \"#utility.yul\":6763:6826   */\n      tag_274\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6656:6836   */\n      pop\n        /* \"#utility.yul\":6920:6924   */\n      0x20\n        /* \"#utility.yul\":6913:6918   */\n      dup3\n        /* \"#utility.yul\":6909:6925   */\n      add\n        /* \"#utility.yul\":6903:6926   */\n      mload\n        /* \"#utility.yul\":6939:7002   */\n      tag_369\n        /* \"#utility.yul\":6996:7000   */\n      0x20\n        /* \"#utility.yul\":6991:6994   */\n      dup6\n        /* \"#utility.yul\":6987:7001   */\n      add\n        /* \"#utility.yul\":6973:6985   */\n      dup3\n        /* \"#utility.yul\":6939:7002   */\n      tag_275\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6846:7012   */\n      pop\n        /* \"#utility.yul\":6610:7019   */\n      pop\n        /* \"#utility.yul\":6490:7019   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7332   */\n    tag_277:\n        /* \"#utility.yul\":7158:7168   */\n      0x00\n        /* \"#utility.yul\":7179:7289   */\n      tag_371\n        /* \"#utility.yul\":7285:7288   */\n      dup4\n        /* \"#utility.yul\":7277:7283   */\n      dup4\n        /* \"#utility.yul\":7179:7289   */\n      tag_276\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7321:7325   */\n      0x40\n        /* \"#utility.yul\":7316:7319   */\n      dup4\n        /* \"#utility.yul\":7312:7326   */\n      add\n        /* \"#utility.yul\":7298:7326   */\n      swap1\n      pop\n        /* \"#utility.yul\":7025:7332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7338:7483   */\n    tag_278:\n        /* \"#utility.yul\":7440:7444   */\n      0x00\n        /* \"#utility.yul\":7472:7476   */\n      0x20\n        /* \"#utility.yul\":7467:7470   */\n      dup3\n        /* \"#utility.yul\":7463:7477   */\n      add\n        /* \"#utility.yul\":7455:7477   */\n      swap1\n      pop\n        /* \"#utility.yul\":7338:7483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7561:8549   */\n    tag_279:\n        /* \"#utility.yul\":7744:7747   */\n      0x00\n        /* \"#utility.yul\":7773:7859   */\n      tag_374\n        /* \"#utility.yul\":7853:7858   */\n      dup3\n        /* \"#utility.yul\":7773:7859   */\n      tag_271\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7875:7993   */\n      tag_375\n        /* \"#utility.yul\":7986:7992   */\n      dup2\n        /* \"#utility.yul\":7981:7984   */\n      dup6\n        /* \"#utility.yul\":7875:7993   */\n      tag_272\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7868:7993   */\n      swap4\n      pop\n        /* \"#utility.yul\":8017:8105   */\n      tag_376\n        /* \"#utility.yul\":8099:8104   */\n      dup4\n        /* \"#utility.yul\":8017:8105   */\n      tag_273\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8128:8135   */\n      dup1\n        /* \"#utility.yul\":8159:8160   */\n      0x00\n        /* \"#utility.yul\":8144:8524   */\n    tag_377:\n        /* \"#utility.yul\":8169:8175   */\n      dup4\n        /* \"#utility.yul\":8166:8167   */\n      dup2\n        /* \"#utility.yul\":8163:8176   */\n      lt\n        /* \"#utility.yul\":8144:8524   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":8245:8251   */\n      dup2\n        /* \"#utility.yul\":8239:8252   */\n      mload\n        /* \"#utility.yul\":8272:8399   */\n      tag_380\n        /* \"#utility.yul\":8395:8398   */\n      dup9\n        /* \"#utility.yul\":8380:8393   */\n      dup3\n        /* \"#utility.yul\":8272:8399   */\n      tag_277\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":8265:8399   */\n      swap8\n      pop\n        /* \"#utility.yul\":8422:8514   */\n      tag_381\n        /* \"#utility.yul\":8507:8513   */\n      dup4\n        /* \"#utility.yul\":8422:8514   */\n      tag_278\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8412:8514   */\n      swap3\n      pop\n        /* \"#utility.yul\":8204:8524   */\n      pop\n        /* \"#utility.yul\":8191:8192   */\n      0x01\n        /* \"#utility.yul\":8188:8189   */\n      dup2\n        /* \"#utility.yul\":8184:8193   */\n      add\n        /* \"#utility.yul\":8179:8193   */\n      swap1\n      pop\n        /* \"#utility.yul\":8144:8524   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":8148:8162   */\n      pop\n        /* \"#utility.yul\":8540:8543   */\n      dup6\n        /* \"#utility.yul\":8533:8543   */\n      swap4\n      pop\n        /* \"#utility.yul\":7749:8549   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7561:8549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8555:9056   */\n    tag_66:\n        /* \"#utility.yul\":8762:8766   */\n      0x00\n        /* \"#utility.yul\":8800:8802   */\n      0x20\n        /* \"#utility.yul\":8789:8798   */\n      dup3\n        /* \"#utility.yul\":8785:8803   */\n      add\n        /* \"#utility.yul\":8777:8803   */\n      swap1\n      pop\n        /* \"#utility.yul\":8849:8858   */\n      dup2\n        /* \"#utility.yul\":8843:8847   */\n      dup2\n        /* \"#utility.yul\":8839:8859   */\n      sub\n        /* \"#utility.yul\":8835:8836   */\n      0x00\n        /* \"#utility.yul\":8824:8833   */\n      dup4\n        /* \"#utility.yul\":8820:8837   */\n      add\n        /* \"#utility.yul\":8813:8860   */\n      mstore\n        /* \"#utility.yul\":8877:9049   */\n      tag_383\n        /* \"#utility.yul\":9044:9048   */\n      dup2\n        /* \"#utility.yul\":9035:9041   */\n      dup5\n        /* \"#utility.yul\":8877:9049   */\n      tag_279\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8869:9049   */\n      swap1\n      pop\n        /* \"#utility.yul\":8555:9056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9062:9242   */\n    tag_157:\n        /* \"#utility.yul\":9110:9187   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9107:9108   */\n      0x00\n        /* \"#utility.yul\":9100:9188   */\n      mstore\n        /* \"#utility.yul\":9207:9211   */\n      0x21\n        /* \"#utility.yul\":9204:9205   */\n      0x04\n        /* \"#utility.yul\":9197:9212   */\n      mstore\n        /* \"#utility.yul\":9231:9235   */\n      0x24\n        /* \"#utility.yul\":9228:9229   */\n      0x00\n        /* \"#utility.yul\":9221:9236   */\n      revert\n        /* \"#utility.yul\":9248:9364   */\n    tag_280:\n        /* \"#utility.yul\":9332:9333   */\n      0x05\n        /* \"#utility.yul\":9325:9330   */\n      dup2\n        /* \"#utility.yul\":9322:9334   */\n      lt\n        /* \"#utility.yul\":9312:9358   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":9338:9356   */\n      tag_387\n      tag_157\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9312:9358   */\n    tag_386:\n        /* \"#utility.yul\":9248:9364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9370:9503   */\n    tag_281:\n        /* \"#utility.yul\":9418:9425   */\n      0x00\n        /* \"#utility.yul\":9447:9452   */\n      dup2\n        /* \"#utility.yul\":9436:9452   */\n      swap1\n      pop\n        /* \"#utility.yul\":9453:9497   */\n      tag_389\n        /* \"#utility.yul\":9491:9496   */\n      dup3\n        /* \"#utility.yul\":9453:9497   */\n      tag_280\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9370:9503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9509:9642   */\n    tag_282:\n        /* \"#utility.yul\":9568:9577   */\n      0x00\n        /* \"#utility.yul\":9601:9636   */\n      tag_391\n        /* \"#utility.yul\":9630:9635   */\n      dup3\n        /* \"#utility.yul\":9601:9636   */\n      tag_281\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9588:9636   */\n      swap1\n      pop\n        /* \"#utility.yul\":9509:9642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9648:9797   */\n    tag_283:\n        /* \"#utility.yul\":9744:9790   */\n      tag_393\n        /* \"#utility.yul\":9784:9789   */\n      dup2\n        /* \"#utility.yul\":9744:9790   */\n      tag_282\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9739:9742   */\n      dup3\n        /* \"#utility.yul\":9732:9791   */\n      mstore\n        /* \"#utility.yul\":9648:9797   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:10043   */\n    tag_77:\n        /* \"#utility.yul\":9905:9909   */\n      0x00\n        /* \"#utility.yul\":9943:9945   */\n      0x20\n        /* \"#utility.yul\":9932:9941   */\n      dup3\n        /* \"#utility.yul\":9928:9946   */\n      add\n        /* \"#utility.yul\":9920:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9956:10036   */\n      tag_395\n        /* \"#utility.yul\":10033:10034   */\n      0x00\n        /* \"#utility.yul\":10022:10031   */\n      dup4\n        /* \"#utility.yul\":10018:10035   */\n      add\n        /* \"#utility.yul\":10009:10015   */\n      dup5\n        /* \"#utility.yul\":9956:10036   */\n      tag_283\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9803:10043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10049:10378   */\n    tag_80:\n        /* \"#utility.yul\":10108:10114   */\n      0x00\n        /* \"#utility.yul\":10157:10159   */\n      0x20\n        /* \"#utility.yul\":10145:10154   */\n      dup3\n        /* \"#utility.yul\":10136:10143   */\n      dup5\n        /* \"#utility.yul\":10132:10155   */\n      sub\n        /* \"#utility.yul\":10128:10160   */\n      slt\n        /* \"#utility.yul\":10125:10244   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":10163:10242   */\n      tag_398\n      tag_256\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10125:10244   */\n    tag_397:\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10308:10361   */\n      tag_399\n        /* \"#utility.yul\":10353:10360   */\n      dup5\n        /* \"#utility.yul\":10344:10350   */\n      dup3\n        /* \"#utility.yul\":10333:10342   */\n      dup6\n        /* \"#utility.yul\":10329:10351   */\n      add\n        /* \"#utility.yul\":10308:10361   */\n      tag_261\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10298:10361   */\n      swap2\n      pop\n        /* \"#utility.yul\":10254:10371   */\n      pop\n        /* \"#utility.yul\":10049:10378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10384:10606   */\n    tag_91:\n        /* \"#utility.yul\":10477:10481   */\n      0x00\n        /* \"#utility.yul\":10515:10517   */\n      0x20\n        /* \"#utility.yul\":10504:10513   */\n      dup3\n        /* \"#utility.yul\":10500:10518   */\n      add\n        /* \"#utility.yul\":10492:10518   */\n      swap1\n      pop\n        /* \"#utility.yul\":10528:10599   */\n      tag_401\n        /* \"#utility.yul\":10596:10597   */\n      0x00\n        /* \"#utility.yul\":10585:10594   */\n      dup4\n        /* \"#utility.yul\":10581:10598   */\n      add\n        /* \"#utility.yul\":10572:10578   */\n      dup5\n        /* \"#utility.yul\":10528:10599   */\n      tag_267\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10384:10606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10612:10722   */\n    tag_284:\n        /* \"#utility.yul\":10696:10697   */\n      0x05\n        /* \"#utility.yul\":10689:10694   */\n      dup2\n        /* \"#utility.yul\":10686:10698   */\n      lt\n        /* \"#utility.yul\":10676:10716   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10712:10713   */\n      0x00\n        /* \"#utility.yul\":10709:10710   */\n      dup1\n        /* \"#utility.yul\":10702:10714   */\n      revert\n        /* \"#utility.yul\":10676:10716   */\n    tag_403:\n        /* \"#utility.yul\":10612:10722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10728:10889   */\n    tag_285:\n        /* \"#utility.yul\":10785:10790   */\n      0x00\n        /* \"#utility.yul\":10823:10829   */\n      dup2\n        /* \"#utility.yul\":10810:10830   */\n      calldataload\n        /* \"#utility.yul\":10801:10830   */\n      swap1\n      pop\n        /* \"#utility.yul\":10839:10883   */\n      tag_405\n        /* \"#utility.yul\":10877:10882   */\n      dup2\n        /* \"#utility.yul\":10839:10883   */\n      tag_284\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10728:10889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10895:11246   */\n    tag_101:\n        /* \"#utility.yul\":10965:10971   */\n      0x00\n        /* \"#utility.yul\":11014:11016   */\n      0x20\n        /* \"#utility.yul\":11002:11011   */\n      dup3\n        /* \"#utility.yul\":10993:11000   */\n      dup5\n        /* \"#utility.yul\":10989:11012   */\n      sub\n        /* \"#utility.yul\":10985:11017   */\n      slt\n        /* \"#utility.yul\":10982:11101   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":11020:11099   */\n      tag_408\n      tag_256\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10982:11101   */\n    tag_407:\n        /* \"#utility.yul\":11140:11141   */\n      0x00\n        /* \"#utility.yul\":11165:11229   */\n      tag_409\n        /* \"#utility.yul\":11221:11228   */\n      dup5\n        /* \"#utility.yul\":11212:11218   */\n      dup3\n        /* \"#utility.yul\":11201:11210   */\n      dup6\n        /* \"#utility.yul\":11197:11219   */\n      add\n        /* \"#utility.yul\":11165:11229   */\n      tag_285\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11155:11229   */\n      swap2\n      pop\n        /* \"#utility.yul\":11111:11239   */\n      pop\n        /* \"#utility.yul\":10895:11246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11252:11726   */\n    tag_105:\n        /* \"#utility.yul\":11320:11326   */\n      0x00\n        /* \"#utility.yul\":11328:11334   */\n      dup1\n        /* \"#utility.yul\":11377:11379   */\n      0x40\n        /* \"#utility.yul\":11365:11374   */\n      dup4\n        /* \"#utility.yul\":11356:11363   */\n      dup6\n        /* \"#utility.yul\":11352:11375   */\n      sub\n        /* \"#utility.yul\":11348:11380   */\n      slt\n        /* \"#utility.yul\":11345:11464   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":11383:11462   */\n      tag_412\n      tag_256\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11345:11464   */\n    tag_411:\n        /* \"#utility.yul\":11503:11504   */\n      0x00\n        /* \"#utility.yul\":11528:11581   */\n      tag_413\n        /* \"#utility.yul\":11573:11580   */\n      dup6\n        /* \"#utility.yul\":11564:11570   */\n      dup3\n        /* \"#utility.yul\":11553:11562   */\n      dup7\n        /* \"#utility.yul\":11549:11571   */\n      add\n        /* \"#utility.yul\":11528:11581   */\n      tag_261\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11518:11581   */\n      swap3\n      pop\n        /* \"#utility.yul\":11474:11591   */\n      pop\n        /* \"#utility.yul\":11630:11632   */\n      0x20\n        /* \"#utility.yul\":11656:11709   */\n      tag_414\n        /* \"#utility.yul\":11701:11708   */\n      dup6\n        /* \"#utility.yul\":11692:11698   */\n      dup3\n        /* \"#utility.yul\":11681:11690   */\n      dup7\n        /* \"#utility.yul\":11677:11699   */\n      add\n        /* \"#utility.yul\":11656:11709   */\n      tag_261\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11646:11709   */\n      swap2\n      pop\n        /* \"#utility.yul\":11601:11719   */\n      pop\n        /* \"#utility.yul\":11252:11726   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11732:11912   */\n    tag_286:\n        /* \"#utility.yul\":11780:11857   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11777:11778   */\n      0x00\n        /* \"#utility.yul\":11770:11858   */\n      mstore\n        /* \"#utility.yul\":11877:11881   */\n      0x22\n        /* \"#utility.yul\":11874:11875   */\n      0x04\n        /* \"#utility.yul\":11867:11882   */\n      mstore\n        /* \"#utility.yul\":11901:11905   */\n      0x24\n        /* \"#utility.yul\":11898:11899   */\n      0x00\n        /* \"#utility.yul\":11891:11906   */\n      revert\n        /* \"#utility.yul\":11918:12238   */\n    tag_116:\n        /* \"#utility.yul\":11962:11968   */\n      0x00\n        /* \"#utility.yul\":11999:12000   */\n      0x02\n        /* \"#utility.yul\":11993:11997   */\n      dup3\n        /* \"#utility.yul\":11989:12001   */\n      div\n        /* \"#utility.yul\":11979:12001   */\n      swap1\n      pop\n        /* \"#utility.yul\":12046:12047   */\n      0x01\n        /* \"#utility.yul\":12040:12044   */\n      dup3\n        /* \"#utility.yul\":12036:12048   */\n      and\n        /* \"#utility.yul\":12067:12085   */\n      dup1\n        /* \"#utility.yul\":12057:12138   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":12123:12127   */\n      0x7f\n        /* \"#utility.yul\":12115:12121   */\n      dup3\n        /* \"#utility.yul\":12111:12128   */\n      and\n        /* \"#utility.yul\":12101:12128   */\n      swap2\n      pop\n        /* \"#utility.yul\":12057:12138   */\n    tag_417:\n        /* \"#utility.yul\":12185:12187   */\n      0x20\n        /* \"#utility.yul\":12177:12183   */\n      dup3\n        /* \"#utility.yul\":12174:12188   */\n      lt\n        /* \"#utility.yul\":12154:12172   */\n      dup2\n        /* \"#utility.yul\":12151:12189   */\n      sub\n        /* \"#utility.yul\":12148:12232   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":12204:12222   */\n      tag_419\n      tag_286\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12148:12232   */\n    tag_418:\n        /* \"#utility.yul\":11969:12238   */\n      pop\n        /* \"#utility.yul\":11918:12238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12244:12413   */\n    tag_287:\n        /* \"#utility.yul\":12384:12405   */\n      0x4e6f7420616c6c6f77656420746f206d696e7400000000000000000000000000\n        /* \"#utility.yul\":12380:12381   */\n      0x00\n        /* \"#utility.yul\":12372:12378   */\n      dup3\n        /* \"#utility.yul\":12368:12382   */\n      add\n        /* \"#utility.yul\":12361:12406   */\n      mstore\n        /* \"#utility.yul\":12244:12413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12785   */\n    tag_288:\n        /* \"#utility.yul\":12561:12564   */\n      0x00\n        /* \"#utility.yul\":12582:12649   */\n      tag_422\n        /* \"#utility.yul\":12646:12648   */\n      0x13\n        /* \"#utility.yul\":12641:12644   */\n      dup4\n        /* \"#utility.yul\":12582:12649   */\n      tag_251\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12575:12649   */\n      swap2\n      pop\n        /* \"#utility.yul\":12658:12751   */\n      tag_423\n        /* \"#utility.yul\":12747:12750   */\n      dup3\n        /* \"#utility.yul\":12658:12751   */\n      tag_287\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12776:12778   */\n      0x20\n        /* \"#utility.yul\":12771:12774   */\n      dup3\n        /* \"#utility.yul\":12767:12779   */\n      add\n        /* \"#utility.yul\":12760:12779   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12791:13210   */\n    tag_139:\n        /* \"#utility.yul\":12957:12961   */\n      0x00\n        /* \"#utility.yul\":12995:12997   */\n      0x20\n        /* \"#utility.yul\":12984:12993   */\n      dup3\n        /* \"#utility.yul\":12980:12998   */\n      add\n        /* \"#utility.yul\":12972:12998   */\n      swap1\n      pop\n        /* \"#utility.yul\":13044:13053   */\n      dup2\n        /* \"#utility.yul\":13038:13042   */\n      dup2\n        /* \"#utility.yul\":13034:13054   */\n      sub\n        /* \"#utility.yul\":13030:13031   */\n      0x00\n        /* \"#utility.yul\":13019:13028   */\n      dup4\n        /* \"#utility.yul\":13015:13032   */\n      add\n        /* \"#utility.yul\":13008:13055   */\n      mstore\n        /* \"#utility.yul\":13072:13203   */\n      tag_425\n        /* \"#utility.yul\":13198:13202   */\n      dup2\n        /* \"#utility.yul\":13072:13203   */\n      tag_288\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13064:13203   */\n      swap1\n      pop\n        /* \"#utility.yul\":12791:13210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13216:13385   */\n    tag_289:\n        /* \"#utility.yul\":13356:13377   */\n      0x4e6f7420616c6c6f77656420746f206275726e00000000000000000000000000\n        /* \"#utility.yul\":13352:13353   */\n      0x00\n        /* \"#utility.yul\":13344:13350   */\n      dup3\n        /* \"#utility.yul\":13340:13354   */\n      add\n        /* \"#utility.yul\":13333:13378   */\n      mstore\n        /* \"#utility.yul\":13216:13385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13391:13757   */\n    tag_290:\n        /* \"#utility.yul\":13533:13536   */\n      0x00\n        /* \"#utility.yul\":13554:13621   */\n      tag_428\n        /* \"#utility.yul\":13618:13620   */\n      0x13\n        /* \"#utility.yul\":13613:13616   */\n      dup4\n        /* \"#utility.yul\":13554:13621   */\n      tag_251\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13547:13621   */\n      swap2\n      pop\n        /* \"#utility.yul\":13630:13723   */\n      tag_429\n        /* \"#utility.yul\":13719:13722   */\n      dup3\n        /* \"#utility.yul\":13630:13723   */\n      tag_289\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13748:13750   */\n      0x20\n        /* \"#utility.yul\":13743:13746   */\n      dup3\n        /* \"#utility.yul\":13739:13751   */\n      add\n        /* \"#utility.yul\":13732:13751   */\n      swap1\n      pop\n        /* \"#utility.yul\":13391:13757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13763:14182   */\n    tag_145:\n        /* \"#utility.yul\":13929:13933   */\n      0x00\n        /* \"#utility.yul\":13967:13969   */\n      0x20\n        /* \"#utility.yul\":13956:13965   */\n      dup3\n        /* \"#utility.yul\":13952:13970   */\n      add\n        /* \"#utility.yul\":13944:13970   */\n      swap1\n      pop\n        /* \"#utility.yul\":14016:14025   */\n      dup2\n        /* \"#utility.yul\":14010:14014   */\n      dup2\n        /* \"#utility.yul\":14006:14026   */\n      sub\n        /* \"#utility.yul\":14002:14003   */\n      0x00\n        /* \"#utility.yul\":13991:14000   */\n      dup4\n        /* \"#utility.yul\":13987:14004   */\n      add\n        /* \"#utility.yul\":13980:14027   */\n      mstore\n        /* \"#utility.yul\":14044:14175   */\n      tag_431\n        /* \"#utility.yul\":14170:14174   */\n      dup2\n        /* \"#utility.yul\":14044:14175   */\n      tag_290\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14036:14175   */\n      swap1\n      pop\n        /* \"#utility.yul\":13763:14182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14188:14362   */\n    tag_291:\n        /* \"#utility.yul\":14328:14354   */\n      0x4e6f7420616c6c6f77656420746f20736574206c6576656c0000000000000000\n        /* \"#utility.yul\":14324:14325   */\n      0x00\n        /* \"#utility.yul\":14316:14322   */\n      dup3\n        /* \"#utility.yul\":14312:14326   */\n      add\n        /* \"#utility.yul\":14305:14355   */\n      mstore\n        /* \"#utility.yul\":14188:14362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14368:14734   */\n    tag_292:\n        /* \"#utility.yul\":14510:14513   */\n      0x00\n        /* \"#utility.yul\":14531:14598   */\n      tag_434\n        /* \"#utility.yul\":14595:14597   */\n      0x18\n        /* \"#utility.yul\":14590:14593   */\n      dup4\n        /* \"#utility.yul\":14531:14598   */\n      tag_251\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14524:14598   */\n      swap2\n      pop\n        /* \"#utility.yul\":14607:14700   */\n      tag_435\n        /* \"#utility.yul\":14696:14699   */\n      dup3\n        /* \"#utility.yul\":14607:14700   */\n      tag_291\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14725:14727   */\n      0x20\n        /* \"#utility.yul\":14720:14723   */\n      dup3\n        /* \"#utility.yul\":14716:14728   */\n      add\n        /* \"#utility.yul\":14709:14728   */\n      swap1\n      pop\n        /* \"#utility.yul\":14368:14734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14740:15159   */\n    tag_186:\n        /* \"#utility.yul\":14906:14910   */\n      0x00\n        /* \"#utility.yul\":14944:14946   */\n      0x20\n        /* \"#utility.yul\":14933:14942   */\n      dup3\n        /* \"#utility.yul\":14929:14947   */\n      add\n        /* \"#utility.yul\":14921:14947   */\n      swap1\n      pop\n        /* \"#utility.yul\":14993:15002   */\n      dup2\n        /* \"#utility.yul\":14987:14991   */\n      dup2\n        /* \"#utility.yul\":14983:15003   */\n      sub\n        /* \"#utility.yul\":14979:14980   */\n      0x00\n        /* \"#utility.yul\":14968:14977   */\n      dup4\n        /* \"#utility.yul\":14964:14981   */\n      add\n        /* \"#utility.yul\":14957:15004   */\n      mstore\n        /* \"#utility.yul\":15021:15152   */\n      tag_437\n        /* \"#utility.yul\":15147:15151   */\n      dup2\n        /* \"#utility.yul\":15021:15152   */\n      tag_292\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":15013:15152   */\n      swap1\n      pop\n        /* \"#utility.yul\":14740:15159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15165:15607   */\n    tag_205:\n        /* \"#utility.yul\":15314:15318   */\n      0x00\n        /* \"#utility.yul\":15352:15354   */\n      0x60\n        /* \"#utility.yul\":15341:15350   */\n      dup3\n        /* \"#utility.yul\":15337:15355   */\n      add\n        /* \"#utility.yul\":15329:15355   */\n      swap1\n      pop\n        /* \"#utility.yul\":15365:15436   */\n      tag_439\n        /* \"#utility.yul\":15433:15434   */\n      0x00\n        /* \"#utility.yul\":15422:15431   */\n      dup4\n        /* \"#utility.yul\":15418:15435   */\n      add\n        /* \"#utility.yul\":15409:15415   */\n      dup7\n        /* \"#utility.yul\":15365:15436   */\n      tag_267\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15446:15518   */\n      tag_440\n        /* \"#utility.yul\":15514:15516   */\n      0x20\n        /* \"#utility.yul\":15503:15512   */\n      dup4\n        /* \"#utility.yul\":15499:15517   */\n      add\n        /* \"#utility.yul\":15490:15496   */\n      dup6\n        /* \"#utility.yul\":15446:15518   */\n      tag_268\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15528:15600   */\n      tag_441\n        /* \"#utility.yul\":15596:15598   */\n      0x40\n        /* \"#utility.yul\":15585:15594   */\n      dup4\n        /* \"#utility.yul\":15581:15599   */\n      add\n        /* \"#utility.yul\":15572:15578   */\n      dup5\n        /* \"#utility.yul\":15528:15600   */\n      tag_268\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15165:15607   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15613:15793   */\n    tag_293:\n        /* \"#utility.yul\":15661:15738   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15658:15659   */\n      0x00\n        /* \"#utility.yul\":15651:15739   */\n      mstore\n        /* \"#utility.yul\":15758:15762   */\n      0x11\n        /* \"#utility.yul\":15755:15756   */\n      0x04\n        /* \"#utility.yul\":15748:15763   */\n      mstore\n        /* \"#utility.yul\":15782:15786   */\n      0x24\n        /* \"#utility.yul\":15779:15780   */\n      0x00\n        /* \"#utility.yul\":15772:15787   */\n      revert\n        /* \"#utility.yul\":15799:15990   */\n    tag_243:\n        /* \"#utility.yul\":15839:15842   */\n      0x00\n        /* \"#utility.yul\":15858:15878   */\n      tag_444\n        /* \"#utility.yul\":15876:15877   */\n      dup3\n        /* \"#utility.yul\":15858:15878   */\n      tag_262\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15853:15878   */\n      swap2\n      pop\n        /* \"#utility.yul\":15892:15912   */\n      tag_445\n        /* \"#utility.yul\":15910:15911   */\n      dup4\n        /* \"#utility.yul\":15892:15912   */\n      tag_262\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15887:15912   */\n      swap3\n      pop\n        /* \"#utility.yul\":15935:15936   */\n      dup3\n        /* \"#utility.yul\":15932:15933   */\n      dup3\n        /* \"#utility.yul\":15928:15937   */\n      add\n        /* \"#utility.yul\":15921:15937   */\n      swap1\n      pop\n        /* \"#utility.yul\":15956:15959   */\n      dup1\n        /* \"#utility.yul\":15953:15954   */\n      dup3\n        /* \"#utility.yul\":15950:15960   */\n      gt\n        /* \"#utility.yul\":15947:15983   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":15963:15981   */\n      tag_447\n      tag_293\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":15947:15983   */\n    tag_446:\n        /* \"#utility.yul\":15799:15990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122097e9d2a8afd09ce5671f5539aa4478ca37d36f71fffa25866f9ce4a46b722e6764736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 983,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1009,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 788,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Levels_$1534_fromMemory": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_ResourceAmount_$1539_memory_ptr_fromMemory": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptrt_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptrt_enum$_Levels_$1534_fromMemory": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3071,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Levels_$1534": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14822:10",
										"nodeType": "YulBlock",
										"src": "0:14822:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1672:184:10",
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nativeSrc": "1682:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:10",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:10",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:10",
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nativeSrc": "1772:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nativeSrc": "1791:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nativeSrc": "1785:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nativeSrc": "1765:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nativeSrc": "1765:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nativeSrc": "1709:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nativeSrc": "1701:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:10",
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nativeSrc": "1725:15:10",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:10",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nativeSrc": "1730:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:10",
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nativeSrc": "1830:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nativeSrc": "1823:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nativeSrc": "1823:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:10",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:10",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:10",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nativeSrc": "1957:339:10",
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nativeSrc": "1967:75:10",
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nativeSrc": "1992:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nativeSrc": "1976:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nativeSrc": "2051:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nativeSrc": "2051:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nativeSrc": "2081:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nativeSrc": "2092:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:10",
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nativeSrc": "2148:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nativeSrc": "2148:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nativeSrc": "2123:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nativeSrc": "2120:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nativeSrc": "2117:112:10",
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nativeSrc": "2238:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nativeSrc": "2238:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:10",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:10",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:10",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:10",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nativeSrc": "2389:282:10",
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:10",
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nativeSrc": "2440:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nativeSrc": "2440:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nativeSrc": "2413:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nativeSrc": "2409:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nativeSrc": "2402:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nativeSrc": "2399:122:10",
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nativeSrc": "2530:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nativeSrc": "2544:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:10",
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nativeSrc": "2634:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nativeSrc": "2575:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:10",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:10",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:10",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nativeSrc": "2722:81:10",
													"nodeType": "YulBlock",
													"src": "2722:81:10",
													"statements": [
														{
															"nativeSrc": "2732:65:10",
															"nodeType": "YulAssignment",
															"src": "2732:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2747:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2747:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2754:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2754:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2743:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2743:3:10"
																},
																"nativeSrc": "2743:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2743:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2677:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:10",
														"nodeType": "YulTypedName",
														"src": "2704:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:10",
														"nodeType": "YulTypedName",
														"src": "2714:7:10",
														"type": ""
													}
												],
												"src": "2677:126:10"
											},
											{
												"body": {
													"nativeSrc": "2854:51:10",
													"nodeType": "YulBlock",
													"src": "2854:51:10",
													"statements": [
														{
															"nativeSrc": "2864:35:10",
															"nodeType": "YulAssignment",
															"src": "2864:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2893:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2893:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2875:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2875:17:10"
																},
																"nativeSrc": "2875:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2875:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2864:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2864:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2809:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2836:5:10",
														"nodeType": "YulTypedName",
														"src": "2836:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2846:7:10",
														"nodeType": "YulTypedName",
														"src": "2846:7:10",
														"type": ""
													}
												],
												"src": "2809:96:10"
											},
											{
												"body": {
													"nativeSrc": "2954:79:10",
													"nodeType": "YulBlock",
													"src": "2954:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3011:16:10",
																"nodeType": "YulBlock",
																"src": "3011:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3020:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3020:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3013:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3013:6:10"
																			},
																			"nativeSrc": "3013:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3013:12:10"
																		},
																		"nativeSrc": "3013:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2977:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2977:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3002:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3002:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2984:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2984:17:10"
																				},
																				"nativeSrc": "2984:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2974:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2974:2:10"
																		},
																		"nativeSrc": "2974:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2974:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2967:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:10"
																},
																"nativeSrc": "2967:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2967:43:10"
															},
															"nativeSrc": "2964:63:10",
															"nodeType": "YulIf",
															"src": "2964:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2911:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2947:5:10",
														"nodeType": "YulTypedName",
														"src": "2947:5:10",
														"type": ""
													}
												],
												"src": "2911:122:10"
											},
											{
												"body": {
													"nativeSrc": "3102:80:10",
													"nodeType": "YulBlock",
													"src": "3102:80:10",
													"statements": [
														{
															"nativeSrc": "3112:22:10",
															"nodeType": "YulAssignment",
															"src": "3112:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3127:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3127:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3121:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3121:5:10"
																},
																"nativeSrc": "3121:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3121:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3112:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3112:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3170:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3170:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3143:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3143:26:10"
																},
																"nativeSrc": "3143:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3143:33:10"
															},
															"nativeSrc": "3143:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3143:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3039:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3080:6:10",
														"nodeType": "YulTypedName",
														"src": "3080:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3088:3:10",
														"nodeType": "YulTypedName",
														"src": "3088:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3096:5:10",
														"nodeType": "YulTypedName",
														"src": "3096:5:10",
														"type": ""
													}
												],
												"src": "3039:143:10"
											},
											{
												"body": {
													"nativeSrc": "3302:229:10",
													"nodeType": "YulBlock",
													"src": "3302:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3407:22:10",
																"nodeType": "YulBlock",
																"src": "3407:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3409:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3409:16:10"
																			},
																			"nativeSrc": "3409:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3409:18:10"
																		},
																		"nativeSrc": "3409:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3409:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3379:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3379:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3387:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3376:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3376:2:10"
																},
																"nativeSrc": "3376:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3376:30:10"
															},
															"nativeSrc": "3373:56:10",
															"nodeType": "YulIf",
															"src": "3373:56:10"
														},
														{
															"nativeSrc": "3439:25:10",
															"nodeType": "YulAssignment",
															"src": "3439:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3451:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3459:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3459:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3447:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:10"
																},
																"nativeSrc": "3447:17:10",
																"nodeType": "YulFunctionCall",
																"src": "3447:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3439:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3439:4:10"
																}
															]
														},
														{
															"nativeSrc": "3501:23:10",
															"nodeType": "YulAssignment",
															"src": "3501:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3513:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3513:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3519:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3519:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3509:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:10"
																},
																"nativeSrc": "3509:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3509:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3501:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3501:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3188:343:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3286:6:10",
														"nodeType": "YulTypedName",
														"src": "3286:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3297:4:10",
														"nodeType": "YulTypedName",
														"src": "3297:4:10",
														"type": ""
													}
												],
												"src": "3188:343:10"
											},
											{
												"body": {
													"nativeSrc": "3626:28:10",
													"nodeType": "YulBlock",
													"src": "3626:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3643:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3643:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3646:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3646:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3636:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:10"
																},
																"nativeSrc": "3636:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3636:12:10"
															},
															"nativeSrc": "3636:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3636:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3537:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3537:117:10"
											},
											{
												"body": {
													"nativeSrc": "3749:28:10",
													"nodeType": "YulBlock",
													"src": "3749:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3766:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3766:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3769:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3769:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3759:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:10"
																},
																"nativeSrc": "3759:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3759:12:10"
															},
															"nativeSrc": "3759:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3759:12:10"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "3660:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3660:117:10"
											},
											{
												"body": {
													"nativeSrc": "3872:28:10",
													"nodeType": "YulBlock",
													"src": "3872:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3889:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3889:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3892:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3892:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3882:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:10"
																},
																"nativeSrc": "3882:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3882:12:10"
															},
															"nativeSrc": "3882:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3882:12:10"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "3783:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3783:117:10"
											},
											{
												"body": {
													"nativeSrc": "3951:32:10",
													"nodeType": "YulBlock",
													"src": "3951:32:10",
													"statements": [
														{
															"nativeSrc": "3961:16:10",
															"nodeType": "YulAssignment",
															"src": "3961:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3972:5:10",
																"nodeType": "YulIdentifier",
																"src": "3972:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3961:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3961:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3906:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3933:5:10",
														"nodeType": "YulTypedName",
														"src": "3933:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3943:7:10",
														"nodeType": "YulTypedName",
														"src": "3943:7:10",
														"type": ""
													}
												],
												"src": "3906:77:10"
											},
											{
												"body": {
													"nativeSrc": "4032:79:10",
													"nodeType": "YulBlock",
													"src": "4032:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4089:16:10",
																"nodeType": "YulBlock",
																"src": "4089:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4098:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4098:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4101:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4101:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4091:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4091:6:10"
																			},
																			"nativeSrc": "4091:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4091:12:10"
																		},
																		"nativeSrc": "4091:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4091:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4055:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4055:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4080:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4080:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4062:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4062:17:10"
																				},
																				"nativeSrc": "4062:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4062:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4052:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4052:2:10"
																		},
																		"nativeSrc": "4052:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4052:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4045:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:10"
																},
																"nativeSrc": "4045:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4045:43:10"
															},
															"nativeSrc": "4042:63:10",
															"nodeType": "YulIf",
															"src": "4042:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3989:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4025:5:10",
														"nodeType": "YulTypedName",
														"src": "4025:5:10",
														"type": ""
													}
												],
												"src": "3989:122:10"
											},
											{
												"body": {
													"nativeSrc": "4180:80:10",
													"nodeType": "YulBlock",
													"src": "4180:80:10",
													"statements": [
														{
															"nativeSrc": "4190:22:10",
															"nodeType": "YulAssignment",
															"src": "4190:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4205:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4205:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4199:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4199:5:10"
																},
																"nativeSrc": "4199:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4199:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4190:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4190:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4248:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4248:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4221:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4221:26:10"
																},
																"nativeSrc": "4221:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4221:33:10"
															},
															"nativeSrc": "4221:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4221:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4117:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4158:6:10",
														"nodeType": "YulTypedName",
														"src": "4158:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4166:3:10",
														"nodeType": "YulTypedName",
														"src": "4166:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4174:5:10",
														"nodeType": "YulTypedName",
														"src": "4174:5:10",
														"type": ""
													}
												],
												"src": "4117:143:10"
											},
											{
												"body": {
													"nativeSrc": "4400:534:10",
													"nodeType": "YulBlock",
													"src": "4400:534:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4444:83:10",
																"nodeType": "YulBlock",
																"src": "4444:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "4446:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4446:77:10"
																			},
																			"nativeSrc": "4446:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4446:79:10"
																		},
																		"nativeSrc": "4446:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4446:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "4421:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4421:3:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4426:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4417:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:10"
																		},
																		"nativeSrc": "4417:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:19:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4438:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4438:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:10"
																},
																"nativeSrc": "4413:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4413:30:10"
															},
															"nativeSrc": "4410:117:10",
															"nodeType": "YulIf",
															"src": "4410:117:10"
														},
														{
															"nativeSrc": "4536:30:10",
															"nodeType": "YulAssignment",
															"src": "4536:30:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4561:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4561:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4545:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "4545:15:10"
																},
																"nativeSrc": "4545:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4545:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4536:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4536:5:10"
																}
															]
														},
														{
															"nativeSrc": "4576:177:10",
															"nodeType": "YulBlock",
															"src": "4576:177:10",
															"statements": [
																{
																	"nativeSrc": "4627:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4627:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4641:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4641:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4631:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4631:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4674:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4674:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4663:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:10"
																				},
																				"nativeSrc": "4663:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4663:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4717:9:10",
																								"nodeType": "YulIdentifier",
																								"src": "4717:9:10"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4728:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "4728:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4713:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4713:3:10"
																						},
																						"nativeSrc": "4713:22:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4713:22:10"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4737:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4737:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nativeSrc": "4681:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "4681:31:10"
																				},
																				"nativeSrc": "4681:60:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4681:60:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4656:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4656:6:10"
																		},
																		"nativeSrc": "4656:86:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4656:86:10"
																	},
																	"nativeSrc": "4656:86:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "4656:86:10"
																}
															]
														},
														{
															"nativeSrc": "4763:164:10",
															"nodeType": "YulBlock",
															"src": "4763:164:10",
															"statements": [
																{
																	"nativeSrc": "4800:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4800:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4814:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4804:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4804:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4841:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4841:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4848:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4848:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4837:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4837:3:10"
																				},
																				"nativeSrc": "4837:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4837:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4891:9:10",
																								"nodeType": "YulIdentifier",
																								"src": "4891:9:10"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4902:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "4902:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4887:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4887:3:10"
																						},
																						"nativeSrc": "4887:22:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4887:22:10"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4911:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4911:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "4855:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "4855:31:10"
																				},
																				"nativeSrc": "4855:60:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4855:60:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4830:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4830:6:10"
																		},
																		"nativeSrc": "4830:86:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4830:86:10"
																	},
																	"nativeSrc": "4830:86:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "4830:86:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_ResourceAmount_$1539_memory_ptr_fromMemory",
												"nativeSrc": "4302:632:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4375:9:10",
														"nodeType": "YulTypedName",
														"src": "4375:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4386:3:10",
														"nodeType": "YulTypedName",
														"src": "4386:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4394:5:10",
														"nodeType": "YulTypedName",
														"src": "4394:5:10",
														"type": ""
													}
												],
												"src": "4302:632:10"
											},
											{
												"body": {
													"nativeSrc": "5123:683:10",
													"nodeType": "YulBlock",
													"src": "5123:683:10",
													"statements": [
														{
															"nativeSrc": "5133:122:10",
															"nodeType": "YulAssignment",
															"src": "5133:122:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5247:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5247:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "5158:88:10",
																			"nodeType": "YulIdentifier",
																			"src": "5158:88:10"
																		},
																		"nativeSrc": "5158:96:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5158:96:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5142:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "5142:15:10"
																},
																"nativeSrc": "5142:113:10",
																"nodeType": "YulFunctionCall",
																"src": "5142:113:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5133:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5133:5:10"
																}
															]
														},
														{
															"nativeSrc": "5264:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5264:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "5275:5:10",
																"nodeType": "YulIdentifier",
																"src": "5275:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5268:3:10",
																	"nodeType": "YulTypedName",
																	"src": "5268:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5297:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5304:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5304:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5290:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5290:6:10"
																},
																"nativeSrc": "5290:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5290:21:10"
															},
															"nativeSrc": "5290:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5290:21:10"
														},
														{
															"nativeSrc": "5320:23:10",
															"nodeType": "YulAssignment",
															"src": "5320:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5331:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5331:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5338:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5327:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5327:3:10"
																},
																"nativeSrc": "5327:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5327:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5320:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:10"
																}
															]
														},
														{
															"nativeSrc": "5353:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5353:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5371:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5383:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5383:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5391:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5391:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5379:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5379:3:10"
																		},
																		"nativeSrc": "5379:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5379:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5367:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:10"
																},
																"nativeSrc": "5367:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5367:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5357:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5425:103:10",
																"nodeType": "YulBlock",
																"src": "5425:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5439:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5439:77:10"
																			},
																			"nativeSrc": "5439:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5439:79:10"
																		},
																		"nativeSrc": "5439:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5439:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5412:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5412:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5420:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5420:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5409:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5409:2:10"
																},
																"nativeSrc": "5409:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5409:15:10"
															},
															"nativeSrc": "5406:122:10",
															"nodeType": "YulIf",
															"src": "5406:122:10"
														},
														{
															"body": {
																"nativeSrc": "5613:187:10",
																"nodeType": "YulBlock",
																"src": "5613:187:10",
																"statements": [
																	{
																		"nativeSrc": "5628:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5628:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "5646:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5646:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "5632:10:10",
																				"nodeType": "YulTypedName",
																				"src": "5632:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5670:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5670:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "5739:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5739:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "5751:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5751:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_ResourceAmount_$1539_memory_ptr_fromMemory",
																						"nativeSrc": "5675:63:10",
																						"nodeType": "YulIdentifier",
																						"src": "5675:63:10"
																					},
																					"nativeSrc": "5675:80:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5675:80:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5663:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5663:6:10"
																			},
																			"nativeSrc": "5663:93:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5663:93:10"
																		},
																		"nativeSrc": "5663:93:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5663:93:10"
																	},
																	{
																		"nativeSrc": "5769:21:10",
																		"nodeType": "YulAssignment",
																		"src": "5769:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5780:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5780:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5785:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5785:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5776:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5776:3:10"
																			},
																			"nativeSrc": "5776:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5776:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5769:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5769:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5566:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5566:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5563:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5563:2:10"
																},
																"nativeSrc": "5563:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5563:15:10"
															},
															"nativeSrc": "5537:263:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5579:25:10",
																"nodeType": "YulBlock",
																"src": "5579:25:10",
																"statements": [
																	{
																		"nativeSrc": "5581:21:10",
																		"nodeType": "YulAssignment",
																		"src": "5581:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5592:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5592:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5597:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5597:4:10",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5588:3:10"
																			},
																			"nativeSrc": "5588:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5588:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5581:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5581:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5541:21:10",
																"nodeType": "YulBlock",
																"src": "5541:21:10",
																"statements": [
																	{
																		"nativeSrc": "5543:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5543:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "5554:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5554:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "5547:3:10",
																				"nodeType": "YulTypedName",
																				"src": "5547:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5537:263:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "4978:828:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5093:6:10",
														"nodeType": "YulTypedName",
														"src": "5093:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5101:6:10",
														"nodeType": "YulTypedName",
														"src": "5101:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5109:3:10",
														"nodeType": "YulTypedName",
														"src": "5109:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5117:5:10",
														"nodeType": "YulTypedName",
														"src": "5117:5:10",
														"type": ""
													}
												],
												"src": "4978:828:10"
											},
											{
												"body": {
													"nativeSrc": "5970:329:10",
													"nodeType": "YulBlock",
													"src": "5970:329:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6019:83:10",
																"nodeType": "YulBlock",
																"src": "6019:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6021:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6021:77:10"
																			},
																			"nativeSrc": "6021:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6021:79:10"
																		},
																		"nativeSrc": "6021:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6021:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5998:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5998:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6006:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6006:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5994:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5994:3:10"
																				},
																				"nativeSrc": "5994:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5994:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6013:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6013:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5990:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5990:3:10"
																		},
																		"nativeSrc": "5990:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5990:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5983:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:10"
																},
																"nativeSrc": "5983:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5983:35:10"
															},
															"nativeSrc": "5980:122:10",
															"nodeType": "YulIf",
															"src": "5980:122:10"
														},
														{
															"nativeSrc": "6111:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6111:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6131:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6131:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6125:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6125:5:10"
																},
																"nativeSrc": "6125:13:10",
																"nodeType": "YulFunctionCall",
																"src": "6125:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6115:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6115:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6147:146:10",
															"nodeType": "YulAssignment",
															"src": "6147:146:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6266:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6266:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6274:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6274:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6262:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6262:3:10"
																		},
																		"nativeSrc": "6262:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6281:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6289:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6289:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "6156:105:10",
																	"nodeType": "YulIdentifier",
																	"src": "6156:105:10"
																},
																"nativeSrc": "6156:137:10",
																"nodeType": "YulFunctionCall",
																"src": "6156:137:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6147:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6147:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "5850:449:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5948:6:10",
														"nodeType": "YulTypedName",
														"src": "5948:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5956:3:10",
														"nodeType": "YulTypedName",
														"src": "5956:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5964:5:10",
														"nodeType": "YulTypedName",
														"src": "5964:5:10",
														"type": ""
													}
												],
												"src": "5850:449:10"
											},
											{
												"body": {
													"nativeSrc": "6359:56:10",
													"nodeType": "YulBlock",
													"src": "6359:56:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6393:16:10",
																"nodeType": "YulBlock",
																"src": "6393:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6402:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6402:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6405:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6405:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6395:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6395:6:10"
																			},
																			"nativeSrc": "6395:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6395:12:10"
																		},
																		"nativeSrc": "6395:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6395:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6382:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6382:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6389:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6389:1:10",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6379:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6379:2:10"
																		},
																		"nativeSrc": "6379:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6379:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6372:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6372:6:10"
																},
																"nativeSrc": "6372:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6372:20:10"
															},
															"nativeSrc": "6369:40:10",
															"nodeType": "YulIf",
															"src": "6369:40:10"
														}
													]
												},
												"name": "validator_revert_t_enum$_Levels_$1534",
												"nativeSrc": "6305:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6352:5:10",
														"nodeType": "YulTypedName",
														"src": "6352:5:10",
														"type": ""
													}
												],
												"src": "6305:110:10"
											},
											{
												"body": {
													"nativeSrc": "6495:91:10",
													"nodeType": "YulBlock",
													"src": "6495:91:10",
													"statements": [
														{
															"nativeSrc": "6505:22:10",
															"nodeType": "YulAssignment",
															"src": "6505:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6520:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6520:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6514:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6514:5:10"
																},
																"nativeSrc": "6514:13:10",
																"nodeType": "YulFunctionCall",
																"src": "6514:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6505:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6505:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6574:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6574:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Levels_$1534",
																	"nativeSrc": "6536:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "6536:37:10"
																},
																"nativeSrc": "6536:44:10",
																"nodeType": "YulFunctionCall",
																"src": "6536:44:10"
															},
															"nativeSrc": "6536:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "6536:44:10"
														}
													]
												},
												"name": "abi_decode_t_enum$_Levels_$1534_fromMemory",
												"nativeSrc": "6421:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6473:6:10",
														"nodeType": "YulTypedName",
														"src": "6473:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6481:3:10",
														"nodeType": "YulTypedName",
														"src": "6481:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6489:5:10",
														"nodeType": "YulTypedName",
														"src": "6489:5:10",
														"type": ""
													}
												],
												"src": "6421:165:10"
											},
											{
												"body": {
													"nativeSrc": "6916:1869:10",
													"nodeType": "YulBlock",
													"src": "6916:1869:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6963:83:10",
																"nodeType": "YulBlock",
																"src": "6963:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6965:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6965:77:10"
																			},
																			"nativeSrc": "6965:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6965:79:10"
																		},
																		"nativeSrc": "6965:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6965:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6937:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6937:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6946:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6946:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6933:3:10"
																		},
																		"nativeSrc": "6933:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6933:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6958:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6958:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:10"
																},
																"nativeSrc": "6929:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6929:33:10"
															},
															"nativeSrc": "6926:120:10",
															"nodeType": "YulIf",
															"src": "6926:120:10"
														},
														{
															"nativeSrc": "7056:291:10",
															"nodeType": "YulBlock",
															"src": "7056:291:10",
															"statements": [
																{
																	"nativeSrc": "7071:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7071:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7095:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7095:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7106:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7106:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7091:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7091:3:10"
																				},
																				"nativeSrc": "7091:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7091:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7085:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7085:5:10"
																		},
																		"nativeSrc": "7085:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7085:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7075:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7075:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7156:83:10",
																		"nodeType": "YulBlock",
																		"src": "7156:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7158:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "7158:77:10"
																					},
																					"nativeSrc": "7158:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7158:79:10"
																				},
																				"nativeSrc": "7158:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "7158:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7128:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7128:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7136:18:10",
																				"nodeType": "YulLiteral",
																				"src": "7136:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7125:2:10"
																		},
																		"nativeSrc": "7125:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7125:30:10"
																	},
																	"nativeSrc": "7122:117:10",
																	"nodeType": "YulIf",
																	"src": "7122:117:10"
																},
																{
																	"nativeSrc": "7253:84:10",
																	"nodeType": "YulAssignment",
																	"src": "7253:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7309:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7309:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7320:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7320:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7305:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7305:3:10"
																				},
																				"nativeSrc": "7305:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7305:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7329:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7329:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "7263:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "7263:41:10"
																		},
																		"nativeSrc": "7263:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7263:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7253:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7253:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7357:292:10",
															"nodeType": "YulBlock",
															"src": "7357:292:10",
															"statements": [
																{
																	"nativeSrc": "7372:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7372:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7396:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7396:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7407:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7407:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7392:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7392:3:10"
																				},
																				"nativeSrc": "7392:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7392:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7386:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7386:5:10"
																		},
																		"nativeSrc": "7386:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7376:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7376:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7458:83:10",
																		"nodeType": "YulBlock",
																		"src": "7458:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7460:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "7460:77:10"
																					},
																					"nativeSrc": "7460:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7460:79:10"
																				},
																				"nativeSrc": "7460:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "7460:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7430:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7430:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7438:18:10",
																				"nodeType": "YulLiteral",
																				"src": "7438:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7427:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7427:2:10"
																		},
																		"nativeSrc": "7427:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7427:30:10"
																	},
																	"nativeSrc": "7424:117:10",
																	"nodeType": "YulIf",
																	"src": "7424:117:10"
																},
																{
																	"nativeSrc": "7555:84:10",
																	"nodeType": "YulAssignment",
																	"src": "7555:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7611:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7611:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7622:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7622:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7607:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7607:3:10"
																				},
																				"nativeSrc": "7607:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7607:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7631:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7631:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "7565:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "7565:41:10"
																		},
																		"nativeSrc": "7565:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7565:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7555:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7555:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7659:129:10",
															"nodeType": "YulBlock",
															"src": "7659:129:10",
															"statements": [
																{
																	"nativeSrc": "7674:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7674:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7688:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7688:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7678:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7678:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7704:74:10",
																	"nodeType": "YulAssignment",
																	"src": "7704:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7750:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7750:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7761:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7761:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7746:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7746:3:10"
																				},
																				"nativeSrc": "7746:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7746:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7770:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7770:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7714:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "7714:31:10"
																		},
																		"nativeSrc": "7714:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7714:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7704:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7704:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7798:129:10",
															"nodeType": "YulBlock",
															"src": "7798:129:10",
															"statements": [
																{
																	"nativeSrc": "7813:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7813:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7827:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7827:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7817:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7817:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7843:74:10",
																	"nodeType": "YulAssignment",
																	"src": "7843:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7889:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7889:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7900:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7900:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7885:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7885:3:10"
																				},
																				"nativeSrc": "7885:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7885:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7909:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7909:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7853:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "7853:31:10"
																		},
																		"nativeSrc": "7853:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7853:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7843:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7843:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7937:340:10",
															"nodeType": "YulBlock",
															"src": "7937:340:10",
															"statements": [
																{
																	"nativeSrc": "7952:40:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7952:40:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7976:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7976:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7987:3:10",
																						"nodeType": "YulLiteral",
																						"src": "7987:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7972:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7972:3:10"
																				},
																				"nativeSrc": "7972:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7972:19:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7966:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7966:5:10"
																		},
																		"nativeSrc": "7966:26:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7966:26:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7956:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7956:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8039:83:10",
																		"nodeType": "YulBlock",
																		"src": "8039:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8041:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "8041:77:10"
																					},
																					"nativeSrc": "8041:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8041:79:10"
																				},
																				"nativeSrc": "8041:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8041:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8011:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8011:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8019:18:10",
																				"nodeType": "YulLiteral",
																				"src": "8019:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8008:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8008:2:10"
																		},
																		"nativeSrc": "8008:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8008:30:10"
																	},
																	"nativeSrc": "8005:117:10",
																	"nodeType": "YulIf",
																	"src": "8005:117:10"
																},
																{
																	"nativeSrc": "8136:131:10",
																	"nodeType": "YulAssignment",
																	"src": "8136:131:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8239:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8239:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8250:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8250:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8235:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8235:3:10"
																				},
																				"nativeSrc": "8235:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8235:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8259:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8259:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "8146:88:10",
																			"nodeType": "YulIdentifier",
																			"src": "8146:88:10"
																		},
																		"nativeSrc": "8146:121:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8146:121:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8136:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8136:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8287:340:10",
															"nodeType": "YulBlock",
															"src": "8287:340:10",
															"statements": [
																{
																	"nativeSrc": "8302:40:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8302:40:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8326:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8326:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8337:3:10",
																						"nodeType": "YulLiteral",
																						"src": "8337:3:10",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8322:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8322:3:10"
																				},
																				"nativeSrc": "8322:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8322:19:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8316:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "8316:5:10"
																		},
																		"nativeSrc": "8316:26:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8316:26:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8306:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8306:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8389:83:10",
																		"nodeType": "YulBlock",
																		"src": "8389:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8391:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "8391:77:10"
																					},
																					"nativeSrc": "8391:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8391:79:10"
																				},
																				"nativeSrc": "8391:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8391:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8361:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8361:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8369:18:10",
																				"nodeType": "YulLiteral",
																				"src": "8369:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8358:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8358:2:10"
																		},
																		"nativeSrc": "8358:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8358:30:10"
																	},
																	"nativeSrc": "8355:117:10",
																	"nodeType": "YulIf",
																	"src": "8355:117:10"
																},
																{
																	"nativeSrc": "8486:131:10",
																	"nodeType": "YulAssignment",
																	"src": "8486:131:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8589:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8589:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8600:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8600:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8585:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8585:3:10"
																				},
																				"nativeSrc": "8585:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8585:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8609:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8609:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "8496:88:10",
																			"nodeType": "YulIdentifier",
																			"src": "8496:88:10"
																		},
																		"nativeSrc": "8496:121:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:121:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "8486:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8486:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8637:141:10",
															"nodeType": "YulBlock",
															"src": "8637:141:10",
															"statements": [
																{
																	"nativeSrc": "8652:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8652:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8666:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8666:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8656:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8656:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8683:85:10",
																	"nodeType": "YulAssignment",
																	"src": "8683:85:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8740:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8740:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8751:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8751:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8736:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8736:3:10"
																				},
																				"nativeSrc": "8736:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8736:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8760:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8760:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Levels_$1534_fromMemory",
																			"nativeSrc": "8693:42:10",
																			"nodeType": "YulIdentifier",
																			"src": "8693:42:10"
																		},
																		"nativeSrc": "8693:75:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8693:75:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "8683:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8683:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptrt_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptrt_enum$_Levels_$1534_fromMemory",
												"nativeSrc": "6592:2193:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6838:9:10",
														"nodeType": "YulTypedName",
														"src": "6838:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6849:7:10",
														"nodeType": "YulTypedName",
														"src": "6849:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6861:6:10",
														"nodeType": "YulTypedName",
														"src": "6861:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6869:6:10",
														"nodeType": "YulTypedName",
														"src": "6869:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6877:6:10",
														"nodeType": "YulTypedName",
														"src": "6877:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6885:6:10",
														"nodeType": "YulTypedName",
														"src": "6885:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6893:6:10",
														"nodeType": "YulTypedName",
														"src": "6893:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6901:6:10",
														"nodeType": "YulTypedName",
														"src": "6901:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6909:6:10",
														"nodeType": "YulTypedName",
														"src": "6909:6:10",
														"type": ""
													}
												],
												"src": "6592:2193:10"
											},
											{
												"body": {
													"nativeSrc": "8850:40:10",
													"nodeType": "YulBlock",
													"src": "8850:40:10",
													"statements": [
														{
															"nativeSrc": "8861:22:10",
															"nodeType": "YulAssignment",
															"src": "8861:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8877:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8877:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8871:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8871:5:10"
																},
																"nativeSrc": "8871:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8871:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8861:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "8791:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8833:5:10",
														"nodeType": "YulTypedName",
														"src": "8833:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8843:6:10",
														"nodeType": "YulTypedName",
														"src": "8843:6:10",
														"type": ""
													}
												],
												"src": "8791:99:10"
											},
											{
												"body": {
													"nativeSrc": "8924:152:10",
													"nodeType": "YulBlock",
													"src": "8924:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8941:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8941:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8944:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8944:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8934:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8934:6:10"
																},
																"nativeSrc": "8934:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8934:88:10"
															},
															"nativeSrc": "8934:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8934:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9038:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9038:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9041:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9041:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9031:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:10"
																},
																"nativeSrc": "9031:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9031:15:10"
															},
															"nativeSrc": "9031:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9031:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9062:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9062:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9065:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9065:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9055:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:10"
																},
																"nativeSrc": "9055:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9055:15:10"
															},
															"nativeSrc": "9055:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9055:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8896:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8896:180:10"
											},
											{
												"body": {
													"nativeSrc": "9133:269:10",
													"nodeType": "YulBlock",
													"src": "9133:269:10",
													"statements": [
														{
															"nativeSrc": "9143:22:10",
															"nodeType": "YulAssignment",
															"src": "9143:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9157:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9157:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9163:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9163:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9153:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:10"
																},
																"nativeSrc": "9153:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9153:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9143:6:10"
																}
															]
														},
														{
															"nativeSrc": "9174:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9174:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9204:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9204:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9210:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9200:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9200:3:10"
																},
																"nativeSrc": "9200:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9200:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9178:18:10",
																	"nodeType": "YulTypedName",
																	"src": "9178:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9251:51:10",
																"nodeType": "YulBlock",
																"src": "9251:51:10",
																"statements": [
																	{
																		"nativeSrc": "9265:27:10",
																		"nodeType": "YulAssignment",
																		"src": "9265:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9279:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9279:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9287:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9287:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9275:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9275:3:10"
																			},
																			"nativeSrc": "9275:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9275:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9265:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9265:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9231:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "9231:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9224:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:10"
																},
																"nativeSrc": "9224:26:10",
																"nodeType": "YulFunctionCall",
																"src": "9224:26:10"
															},
															"nativeSrc": "9221:81:10",
															"nodeType": "YulIf",
															"src": "9221:81:10"
														},
														{
															"body": {
																"nativeSrc": "9354:42:10",
																"nodeType": "YulBlock",
																"src": "9354:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9368:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9368:16:10"
																			},
																			"nativeSrc": "9368:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9368:18:10"
																		},
																		"nativeSrc": "9368:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9368:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9318:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "9318:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9341:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9341:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9349:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9349:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9338:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9338:2:10"
																		},
																		"nativeSrc": "9338:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9338:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9315:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9315:2:10"
																},
																"nativeSrc": "9315:38:10",
																"nodeType": "YulFunctionCall",
																"src": "9315:38:10"
															},
															"nativeSrc": "9312:84:10",
															"nodeType": "YulIf",
															"src": "9312:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9082:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9117:4:10",
														"nodeType": "YulTypedName",
														"src": "9117:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9126:6:10",
														"nodeType": "YulTypedName",
														"src": "9126:6:10",
														"type": ""
													}
												],
												"src": "9082:320:10"
											},
											{
												"body": {
													"nativeSrc": "9462:87:10",
													"nodeType": "YulBlock",
													"src": "9462:87:10",
													"statements": [
														{
															"nativeSrc": "9472:11:10",
															"nodeType": "YulAssignment",
															"src": "9472:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "9480:3:10",
																"nodeType": "YulIdentifier",
																"src": "9480:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9472:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9472:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9500:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9503:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9503:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:10"
																},
																"nativeSrc": "9493:14:10",
																"nodeType": "YulFunctionCall",
																"src": "9493:14:10"
															},
															"nativeSrc": "9493:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "9493:14:10"
														},
														{
															"nativeSrc": "9516:26:10",
															"nodeType": "YulAssignment",
															"src": "9516:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9534:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9534:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9537:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9524:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9524:9:10"
																},
																"nativeSrc": "9524:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9524:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9516:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9516:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "9408:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9449:3:10",
														"nodeType": "YulTypedName",
														"src": "9449:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9457:4:10",
														"nodeType": "YulTypedName",
														"src": "9457:4:10",
														"type": ""
													}
												],
												"src": "9408:141:10"
											},
											{
												"body": {
													"nativeSrc": "9599:49:10",
													"nodeType": "YulBlock",
													"src": "9599:49:10",
													"statements": [
														{
															"nativeSrc": "9609:33:10",
															"nodeType": "YulAssignment",
															"src": "9609:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9627:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9627:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9634:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9634:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9623:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9623:3:10"
																		},
																		"nativeSrc": "9623:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9623:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9639:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9639:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9619:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9619:3:10"
																},
																"nativeSrc": "9619:23:10",
																"nodeType": "YulFunctionCall",
																"src": "9619:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9609:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "9555:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9582:5:10",
														"nodeType": "YulTypedName",
														"src": "9582:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9592:6:10",
														"nodeType": "YulTypedName",
														"src": "9592:6:10",
														"type": ""
													}
												],
												"src": "9555:93:10"
											},
											{
												"body": {
													"nativeSrc": "9707:54:10",
													"nodeType": "YulBlock",
													"src": "9707:54:10",
													"statements": [
														{
															"nativeSrc": "9717:37:10",
															"nodeType": "YulAssignment",
															"src": "9717:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "9742:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9742:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9748:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9748:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "9738:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9738:3:10"
																},
																"nativeSrc": "9738:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9738:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9717:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "9717:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "9654:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "9682:4:10",
														"nodeType": "YulTypedName",
														"src": "9682:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "9688:5:10",
														"nodeType": "YulTypedName",
														"src": "9688:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9698:8:10",
														"nodeType": "YulTypedName",
														"src": "9698:8:10",
														"type": ""
													}
												],
												"src": "9654:107:10"
											},
											{
												"body": {
													"nativeSrc": "9843:317:10",
													"nodeType": "YulBlock",
													"src": "9843:317:10",
													"statements": [
														{
															"nativeSrc": "9853:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9853:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "9874:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "9874:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9886:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9886:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9870:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9870:3:10"
																},
																"nativeSrc": "9870:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9870:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "9857:9:10",
																	"nodeType": "YulTypedName",
																	"src": "9857:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9897:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9897:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "9928:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9928:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9939:66:10",
																		"nodeType": "YulLiteral",
																		"src": "9939:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "9909:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "9909:18:10"
																},
																"nativeSrc": "9909:97:10",
																"nodeType": "YulFunctionCall",
																"src": "9909:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "9901:4:10",
																	"nodeType": "YulTypedName",
																	"src": "9901:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10015:51:10",
															"nodeType": "YulAssignment",
															"src": "10015:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10046:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10046:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "10057:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "10057:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10027:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "10027:18:10"
																},
																"nativeSrc": "10027:39:10",
																"nodeType": "YulFunctionCall",
																"src": "10027:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "10015:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "10015:8:10"
																}
															]
														},
														{
															"nativeSrc": "10075:30:10",
															"nodeType": "YulAssignment",
															"src": "10075:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10088:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10088:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "10099:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10099:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10095:3:10"
																		},
																		"nativeSrc": "10095:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10095:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10084:3:10"
																},
																"nativeSrc": "10084:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10084:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10075:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10075:5:10"
																}
															]
														},
														{
															"nativeSrc": "10114:40:10",
															"nodeType": "YulAssignment",
															"src": "10114:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10127:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10127:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "10138:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "10138:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "10148:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10148:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10134:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:10"
																		},
																		"nativeSrc": "10134:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10134:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10124:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10124:2:10"
																},
																"nativeSrc": "10124:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10124:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10114:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10114:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "9767:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9804:5:10",
														"nodeType": "YulTypedName",
														"src": "9804:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "9811:10:10",
														"nodeType": "YulTypedName",
														"src": "9811:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "9823:8:10",
														"nodeType": "YulTypedName",
														"src": "9823:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9836:6:10",
														"nodeType": "YulTypedName",
														"src": "9836:6:10",
														"type": ""
													}
												],
												"src": "9767:393:10"
											},
											{
												"body": {
													"nativeSrc": "10198:28:10",
													"nodeType": "YulBlock",
													"src": "10198:28:10",
													"statements": [
														{
															"nativeSrc": "10208:12:10",
															"nodeType": "YulAssignment",
															"src": "10208:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "10215:5:10",
																"nodeType": "YulIdentifier",
																"src": "10215:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10208:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10208:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10166:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10184:5:10",
														"nodeType": "YulTypedName",
														"src": "10184:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10194:3:10",
														"nodeType": "YulTypedName",
														"src": "10194:3:10",
														"type": ""
													}
												],
												"src": "10166:60:10"
											},
											{
												"body": {
													"nativeSrc": "10292:82:10",
													"nodeType": "YulBlock",
													"src": "10292:82:10",
													"statements": [
														{
															"nativeSrc": "10302:66:10",
															"nodeType": "YulAssignment",
															"src": "10302:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10360:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10360:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10342:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "10342:17:10"
																				},
																				"nativeSrc": "10342:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10342:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10333:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "10333:8:10"
																		},
																		"nativeSrc": "10333:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10333:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10315:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10315:17:10"
																},
																"nativeSrc": "10315:53:10",
																"nodeType": "YulFunctionCall",
																"src": "10315:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10302:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "10302:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "10232:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10272:5:10",
														"nodeType": "YulTypedName",
														"src": "10272:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10282:9:10",
														"nodeType": "YulTypedName",
														"src": "10282:9:10",
														"type": ""
													}
												],
												"src": "10232:142:10"
											},
											{
												"body": {
													"nativeSrc": "10427:28:10",
													"nodeType": "YulBlock",
													"src": "10427:28:10",
													"statements": [
														{
															"nativeSrc": "10437:12:10",
															"nodeType": "YulAssignment",
															"src": "10437:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "10444:5:10",
																"nodeType": "YulIdentifier",
																"src": "10444:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10437:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10437:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "10380:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10413:5:10",
														"nodeType": "YulTypedName",
														"src": "10413:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10423:3:10",
														"nodeType": "YulTypedName",
														"src": "10423:3:10",
														"type": ""
													}
												],
												"src": "10380:75:10"
											},
											{
												"body": {
													"nativeSrc": "10537:193:10",
													"nodeType": "YulBlock",
													"src": "10537:193:10",
													"statements": [
														{
															"nativeSrc": "10547:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10547:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "10602:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "10602:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "10571:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "10571:30:10"
																},
																"nativeSrc": "10571:39:10",
																"nodeType": "YulFunctionCall",
																"src": "10571:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "10551:16:10",
																	"nodeType": "YulTypedName",
																	"src": "10551:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10626:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10626:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "10666:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "10666:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10660:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "10660:5:10"
																				},
																				"nativeSrc": "10660:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10660:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "10673:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10673:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "10705:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "10705:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "10681:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "10681:23:10"
																				},
																				"nativeSrc": "10681:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10681:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "10632:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "10632:27:10"
																		},
																		"nativeSrc": "10632:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10632:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10619:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10619:6:10"
																},
																"nativeSrc": "10619:105:10",
																"nodeType": "YulFunctionCall",
																"src": "10619:105:10"
															},
															"nativeSrc": "10619:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "10619:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "10461:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10514:4:10",
														"nodeType": "YulTypedName",
														"src": "10514:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10520:6:10",
														"nodeType": "YulTypedName",
														"src": "10520:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "10528:7:10",
														"nodeType": "YulTypedName",
														"src": "10528:7:10",
														"type": ""
													}
												],
												"src": "10461:269:10"
											},
											{
												"body": {
													"nativeSrc": "10785:24:10",
													"nodeType": "YulBlock",
													"src": "10785:24:10",
													"statements": [
														{
															"nativeSrc": "10795:8:10",
															"nodeType": "YulAssignment",
															"src": "10795:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "10802:1:10",
																"nodeType": "YulLiteral",
																"src": "10802:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10795:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10795:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "10736:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10781:3:10",
														"nodeType": "YulTypedName",
														"src": "10781:3:10",
														"type": ""
													}
												],
												"src": "10736:73:10"
											},
											{
												"body": {
													"nativeSrc": "10868:136:10",
													"nodeType": "YulBlock",
													"src": "10868:136:10",
													"statements": [
														{
															"nativeSrc": "10878:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10878:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "10892:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "10892:30:10"
																},
																"nativeSrc": "10892:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10892:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "10882:6:10",
																	"nodeType": "YulTypedName",
																	"src": "10882:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10977:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10977:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "10983:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10983:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "10991:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10991:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "10933:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10933:43:10"
																},
																"nativeSrc": "10933:65:10",
																"nodeType": "YulFunctionCall",
																"src": "10933:65:10"
															},
															"nativeSrc": "10933:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "10933:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "10815:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10854:4:10",
														"nodeType": "YulTypedName",
														"src": "10854:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10860:6:10",
														"nodeType": "YulTypedName",
														"src": "10860:6:10",
														"type": ""
													}
												],
												"src": "10815:189:10"
											},
											{
												"body": {
													"nativeSrc": "11060:136:10",
													"nodeType": "YulBlock",
													"src": "11060:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11127:63:10",
																"nodeType": "YulBlock",
																"src": "11127:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11171:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "11171:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11178:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "11141:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "11141:29:10"
																			},
																			"nativeSrc": "11141:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11141:39:10"
																		},
																		"nativeSrc": "11141:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11141:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "11080:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11087:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11087:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11077:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11077:2:10"
																},
																"nativeSrc": "11077:14:10",
																"nodeType": "YulFunctionCall",
																"src": "11077:14:10"
															},
															"nativeSrc": "11070:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11092:26:10",
																"nodeType": "YulBlock",
																"src": "11092:26:10",
																"statements": [
																	{
																		"nativeSrc": "11094:22:10",
																		"nodeType": "YulAssignment",
																		"src": "11094:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11107:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "11107:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11114:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11114:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11103:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11103:3:10"
																			},
																			"nativeSrc": "11103:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11103:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "11094:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11094:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11074:2:10",
																"nodeType": "YulBlock",
																"src": "11074:2:10",
																"statements": []
															},
															"src": "11070:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "11010:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11048:5:10",
														"nodeType": "YulTypedName",
														"src": "11048:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11055:3:10",
														"nodeType": "YulTypedName",
														"src": "11055:3:10",
														"type": ""
													}
												],
												"src": "11010:186:10"
											},
											{
												"body": {
													"nativeSrc": "11281:464:10",
													"nodeType": "YulBlock",
													"src": "11281:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11307:431:10",
																"nodeType": "YulBlock",
																"src": "11307:431:10",
																"statements": [
																	{
																		"nativeSrc": "11321:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11321:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "11369:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "11369:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "11337:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "11337:31:10"
																			},
																			"nativeSrc": "11337:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11337:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "11325:8:10",
																				"nodeType": "YulTypedName",
																				"src": "11325:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11388:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11388:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "11411:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "11411:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "11439:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "11439:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "11421:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "11421:17:10"
																					},
																					"nativeSrc": "11421:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11421:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11407:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11407:3:10"
																			},
																			"nativeSrc": "11407:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11407:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11392:11:10",
																				"nodeType": "YulTypedName",
																				"src": "11392:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11608:27:10",
																			"nodeType": "YulBlock",
																			"src": "11608:27:10",
																			"statements": [
																				{
																					"nativeSrc": "11610:23:10",
																					"nodeType": "YulAssignment",
																					"src": "11610:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "11625:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "11625:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11610:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "11610:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11592:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "11592:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11604:2:10",
																					"nodeType": "YulLiteral",
																					"src": "11604:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11589:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "11589:2:10"
																			},
																			"nativeSrc": "11589:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11589:18:10"
																		},
																		"nativeSrc": "11586:49:10",
																		"nodeType": "YulIf",
																		"src": "11586:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "11677:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "11677:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "11694:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "11694:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11722:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "11722:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "11704:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "11704:17:10"
																							},
																							"nativeSrc": "11704:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "11704:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11690:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "11690:3:10"
																					},
																					"nativeSrc": "11690:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11690:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "11648:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "11648:28:10"
																			},
																			"nativeSrc": "11648:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11648:80:10"
																		},
																		"nativeSrc": "11648:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11648:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11298:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11298:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11303:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11303:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11295:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11295:2:10"
																},
																"nativeSrc": "11295:11:10",
																"nodeType": "YulFunctionCall",
																"src": "11295:11:10"
															},
															"nativeSrc": "11292:446:10",
															"nodeType": "YulIf",
															"src": "11292:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "11202:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11257:5:10",
														"nodeType": "YulTypedName",
														"src": "11257:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11264:3:10",
														"nodeType": "YulTypedName",
														"src": "11264:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11269:10:10",
														"nodeType": "YulTypedName",
														"src": "11269:10:10",
														"type": ""
													}
												],
												"src": "11202:543:10"
											},
											{
												"body": {
													"nativeSrc": "11814:54:10",
													"nodeType": "YulBlock",
													"src": "11814:54:10",
													"statements": [
														{
															"nativeSrc": "11824:37:10",
															"nodeType": "YulAssignment",
															"src": "11824:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11849:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11849:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11855:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11855:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11845:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11845:3:10"
																},
																"nativeSrc": "11845:16:10",
																"nodeType": "YulFunctionCall",
																"src": "11845:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11824:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "11824:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "11751:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11789:4:10",
														"nodeType": "YulTypedName",
														"src": "11789:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11795:5:10",
														"nodeType": "YulTypedName",
														"src": "11795:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11805:8:10",
														"nodeType": "YulTypedName",
														"src": "11805:8:10",
														"type": ""
													}
												],
												"src": "11751:117:10"
											},
											{
												"body": {
													"nativeSrc": "11925:118:10",
													"nodeType": "YulBlock",
													"src": "11925:118:10",
													"statements": [
														{
															"nativeSrc": "11935:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11935:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11984:1:10",
																						"nodeType": "YulLiteral",
																						"src": "11984:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "11987:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "11987:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11980:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11980:3:10"
																				},
																				"nativeSrc": "11980:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11980:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11999:1:10",
																						"nodeType": "YulLiteral",
																						"src": "11999:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11995:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11995:3:10"
																				},
																				"nativeSrc": "11995:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11995:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "11951:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "11951:28:10"
																		},
																		"nativeSrc": "11951:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11951:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "11947:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11947:3:10"
																},
																"nativeSrc": "11947:56:10",
																"nodeType": "YulFunctionCall",
																"src": "11947:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11939:4:10",
																	"nodeType": "YulTypedName",
																	"src": "11939:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12012:25:10",
															"nodeType": "YulAssignment",
															"src": "12012:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12026:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12026:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "12032:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12032:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12022:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12022:3:10"
																},
																"nativeSrc": "12022:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12022:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12012:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "11874:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11902:4:10",
														"nodeType": "YulTypedName",
														"src": "11902:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "11908:5:10",
														"nodeType": "YulTypedName",
														"src": "11908:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11918:6:10",
														"nodeType": "YulTypedName",
														"src": "11918:6:10",
														"type": ""
													}
												],
												"src": "11874:169:10"
											},
											{
												"body": {
													"nativeSrc": "12129:214:10",
													"nodeType": "YulBlock",
													"src": "12129:214:10",
													"statements": [
														{
															"nativeSrc": "12262:37:10",
															"nodeType": "YulAssignment",
															"src": "12262:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12289:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12289:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "12295:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12295:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "12270:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "12270:18:10"
																},
																"nativeSrc": "12270:29:10",
																"nodeType": "YulFunctionCall",
																"src": "12270:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12262:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:10"
																}
															]
														},
														{
															"nativeSrc": "12308:29:10",
															"nodeType": "YulAssignment",
															"src": "12308:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12319:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12319:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12329:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12329:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12332:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12332:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12325:3:10"
																		},
																		"nativeSrc": "12325:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12325:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12316:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12316:2:10"
																},
																"nativeSrc": "12316:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12316:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12308:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12308:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12048:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12110:4:10",
														"nodeType": "YulTypedName",
														"src": "12110:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12116:3:10",
														"nodeType": "YulTypedName",
														"src": "12116:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12124:4:10",
														"nodeType": "YulTypedName",
														"src": "12124:4:10",
														"type": ""
													}
												],
												"src": "12048:295:10"
											},
											{
												"body": {
													"nativeSrc": "12440:1303:10",
													"nodeType": "YulBlock",
													"src": "12440:1303:10",
													"statements": [
														{
															"nativeSrc": "12451:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12451:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12498:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12498:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12465:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "12465:32:10"
																},
																"nativeSrc": "12465:37:10",
																"nodeType": "YulFunctionCall",
																"src": "12465:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12455:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12455:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12587:22:10",
																"nodeType": "YulBlock",
																"src": "12587:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12589:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12589:16:10"
																			},
																			"nativeSrc": "12589:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12589:18:10"
																		},
																		"nativeSrc": "12589:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12589:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12559:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12559:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12567:18:10",
																		"nodeType": "YulLiteral",
																		"src": "12567:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12556:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12556:2:10"
																},
																"nativeSrc": "12556:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12556:30:10"
															},
															"nativeSrc": "12553:56:10",
															"nodeType": "YulIf",
															"src": "12553:56:10"
														},
														{
															"nativeSrc": "12619:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12619:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "12665:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12665:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "12659:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12659:5:10"
																		},
																		"nativeSrc": "12659:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12659:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "12633:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "12633:25:10"
																},
																"nativeSrc": "12633:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12633:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "12623:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12623:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12764:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12764:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "12770:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12770:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12778:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12778:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "12718:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "12718:45:10"
																},
																"nativeSrc": "12718:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12718:67:10"
															},
															"nativeSrc": "12718:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "12718:67:10"
														},
														{
															"nativeSrc": "12795:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12795:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12812:1:10",
																"nodeType": "YulLiteral",
																"src": "12812:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12799:9:10",
																	"nodeType": "YulTypedName",
																	"src": "12799:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12823:17:10",
															"nodeType": "YulAssignment",
															"src": "12823:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12836:4:10",
																"nodeType": "YulLiteral",
																"src": "12836:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12823:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "12823:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12887:611:10",
																		"nodeType": "YulBlock",
																		"src": "12887:611:10",
																		"statements": [
																			{
																				"nativeSrc": "12901:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12901:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12920:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "12920:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12932:4:10",
																									"nodeType": "YulLiteral",
																									"src": "12932:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12928:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "12928:3:10"
																							},
																							"nativeSrc": "12928:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "12928:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12916:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12916:3:10"
																					},
																					"nativeSrc": "12916:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12916:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12905:7:10",
																						"nodeType": "YulTypedName",
																						"src": "12905:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12952:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12952:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12998:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "12998:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "12966:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "12966:31:10"
																					},
																					"nativeSrc": "12966:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12966:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12956:6:10",
																						"nodeType": "YulTypedName",
																						"src": "12956:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13016:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13016:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13025:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13025:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13020:1:10",
																						"nodeType": "YulTypedName",
																						"src": "13020:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13084:163:10",
																					"nodeType": "YulBlock",
																					"src": "13084:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13109:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "13109:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13127:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "13127:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13132:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "13132:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13123:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "13123:3:10"
																												},
																												"nativeSrc": "13123:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "13123:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13117:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "13117:5:10"
																										},
																										"nativeSrc": "13117:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13117:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13102:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13102:6:10"
																								},
																								"nativeSrc": "13102:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13102:42:10"
																							},
																							"nativeSrc": "13102:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "13102:42:10"
																						},
																						{
																							"nativeSrc": "13161:24:10",
																							"nodeType": "YulAssignment",
																							"src": "13161:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13175:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "13175:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13183:1:10",
																										"nodeType": "YulLiteral",
																										"src": "13183:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13171:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "13171:3:10"
																								},
																								"nativeSrc": "13171:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13171:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13161:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13161:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13202:31:10",
																							"nodeType": "YulAssignment",
																							"src": "13202:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13219:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "13219:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13230:2:10",
																										"nodeType": "YulLiteral",
																										"src": "13230:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13215:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "13215:3:10"
																								},
																								"nativeSrc": "13215:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13215:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13202:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "13202:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13050:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "13050:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13053:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "13053:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13047:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "13047:2:10"
																					},
																					"nativeSrc": "13047:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13047:14:10"
																				},
																				"nativeSrc": "13039:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13062:21:10",
																					"nodeType": "YulBlock",
																					"src": "13062:21:10",
																					"statements": [
																						{
																							"nativeSrc": "13064:17:10",
																							"nodeType": "YulAssignment",
																							"src": "13064:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13073:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "13073:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13076:4:10",
																										"nodeType": "YulLiteral",
																										"src": "13076:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13069:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "13069:3:10"
																								},
																								"nativeSrc": "13069:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13069:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13064:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "13064:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13043:3:10",
																					"nodeType": "YulBlock",
																					"src": "13043:3:10",
																					"statements": []
																				},
																				"src": "13039:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "13283:156:10",
																					"nodeType": "YulBlock",
																					"src": "13283:156:10",
																					"statements": [
																						{
																							"nativeSrc": "13301:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13301:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13328:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "13328:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13333:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "13333:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13324:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "13324:3:10"
																										},
																										"nativeSrc": "13324:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13324:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13318:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13318:5:10"
																								},
																								"nativeSrc": "13318:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13318:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13305:9:10",
																									"nodeType": "YulTypedName",
																									"src": "13305:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13368:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "13368:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13395:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "13395:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "13410:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "13410:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "13418:4:10",
																														"nodeType": "YulLiteral",
																														"src": "13418:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "13406:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "13406:3:10"
																												},
																												"nativeSrc": "13406:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "13406:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "13376:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "13376:18:10"
																										},
																										"nativeSrc": "13376:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13376:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13361:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13361:6:10"
																								},
																								"nativeSrc": "13361:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13361:64:10"
																							},
																							"nativeSrc": "13361:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "13361:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13266:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "13266:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13275:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "13275:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13263:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "13263:2:10"
																					},
																					"nativeSrc": "13263:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13263:19:10"
																				},
																				"nativeSrc": "13260:179:10",
																				"nodeType": "YulIf",
																				"src": "13260:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13459:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "13459:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "13473:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "13473:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "13481:1:10",
																											"nodeType": "YulLiteral",
																											"src": "13481:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "13469:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "13469:3:10"
																									},
																									"nativeSrc": "13469:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "13469:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13485:1:10",
																									"nodeType": "YulLiteral",
																									"src": "13485:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13465:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "13465:3:10"
																							},
																							"nativeSrc": "13465:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "13465:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13452:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13452:6:10"
																					},
																					"nativeSrc": "13452:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13452:36:10"
																				},
																				"nativeSrc": "13452:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13452:36:10"
																			}
																		]
																	},
																	"nativeSrc": "12880:618:10",
																	"nodeType": "YulCase",
																	"src": "12880:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12885:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12885:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13515:222:10",
																		"nodeType": "YulBlock",
																		"src": "13515:222:10",
																		"statements": [
																			{
																				"nativeSrc": "13529:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13529:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13542:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13542:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13533:5:10",
																						"nodeType": "YulTypedName",
																						"src": "13533:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13566:67:10",
																					"nodeType": "YulBlock",
																					"src": "13566:67:10",
																					"statements": [
																						{
																							"nativeSrc": "13584:35:10",
																							"nodeType": "YulAssignment",
																							"src": "13584:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13603:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "13603:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13608:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "13608:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13599:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "13599:3:10"
																										},
																										"nativeSrc": "13599:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "13599:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13593:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13593:5:10"
																								},
																								"nativeSrc": "13593:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "13593:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13584:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13584:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13559:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "13559:6:10"
																				},
																				"nativeSrc": "13556:77:10",
																				"nodeType": "YulIf",
																				"src": "13556:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13653:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "13653:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13712:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "13712:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13719:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "13719:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13659:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "13659:52:10"
																							},
																							"nativeSrc": "13659:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "13659:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13646:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13646:6:10"
																					},
																					"nativeSrc": "13646:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13646:81:10"
																				},
																				"nativeSrc": "13646:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13646:81:10"
																			}
																		]
																	},
																	"nativeSrc": "13507:230:10",
																	"nodeType": "YulCase",
																	"src": "13507:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12860:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12860:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12868:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12868:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12857:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12857:2:10"
																},
																"nativeSrc": "12857:14:10",
																"nodeType": "YulFunctionCall",
																"src": "12857:14:10"
															},
															"nativeSrc": "12850:887:10",
															"nodeType": "YulSwitch",
															"src": "12850:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12348:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12429:4:10",
														"nodeType": "YulTypedName",
														"src": "12429:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12435:3:10",
														"nodeType": "YulTypedName",
														"src": "12435:3:10",
														"type": ""
													}
												],
												"src": "12348:1395:10"
											},
											{
												"body": {
													"nativeSrc": "13814:53:10",
													"nodeType": "YulBlock",
													"src": "13814:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13831:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13831:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13854:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13854:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "13836:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "13836:17:10"
																		},
																		"nativeSrc": "13836:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13836:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13824:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13824:6:10"
																},
																"nativeSrc": "13824:37:10",
																"nodeType": "YulFunctionCall",
																"src": "13824:37:10"
															},
															"nativeSrc": "13824:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "13824:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13749:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13802:5:10",
														"nodeType": "YulTypedName",
														"src": "13802:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13809:3:10",
														"nodeType": "YulTypedName",
														"src": "13809:3:10",
														"type": ""
													}
												],
												"src": "13749:118:10"
											},
											{
												"body": {
													"nativeSrc": "13971:124:10",
													"nodeType": "YulBlock",
													"src": "13971:124:10",
													"statements": [
														{
															"nativeSrc": "13981:26:10",
															"nodeType": "YulAssignment",
															"src": "13981:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13993:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13993:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14004:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14004:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13989:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13989:3:10"
																},
																"nativeSrc": "13989:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13989:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13981:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13981:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14061:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14061:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14074:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14074:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14085:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14085:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14070:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14070:3:10"
																		},
																		"nativeSrc": "14070:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14070:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14017:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14017:43:10"
																},
																"nativeSrc": "14017:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14017:71:10"
															},
															"nativeSrc": "14017:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14017:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13873:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13943:9:10",
														"nodeType": "YulTypedName",
														"src": "13943:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13955:6:10",
														"nodeType": "YulTypedName",
														"src": "13955:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13966:4:10",
														"nodeType": "YulTypedName",
														"src": "13966:4:10",
														"type": ""
													}
												],
												"src": "13873:222:10"
											},
											{
												"body": {
													"nativeSrc": "14129:152:10",
													"nodeType": "YulBlock",
													"src": "14129:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14146:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14146:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14149:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14149:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14139:6:10"
																},
																"nativeSrc": "14139:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14139:88:10"
															},
															"nativeSrc": "14139:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14139:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14243:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14243:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14246:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14246:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14236:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14236:6:10"
																},
																"nativeSrc": "14236:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14236:15:10"
															},
															"nativeSrc": "14236:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14236:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14267:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14267:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14270:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14260:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14260:6:10"
																},
																"nativeSrc": "14260:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14260:15:10"
															},
															"nativeSrc": "14260:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14260:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "14101:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14101:180:10"
											},
											{
												"body": {
													"nativeSrc": "14315:152:10",
													"nodeType": "YulBlock",
													"src": "14315:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14332:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14332:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14335:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14335:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14325:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:10"
																},
																"nativeSrc": "14325:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14325:88:10"
															},
															"nativeSrc": "14325:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14325:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14429:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14432:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14432:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14422:6:10"
																},
																"nativeSrc": "14422:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14422:15:10"
															},
															"nativeSrc": "14422:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14422:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14453:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14453:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14456:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14456:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14446:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14446:6:10"
																},
																"nativeSrc": "14446:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14446:15:10"
															},
															"nativeSrc": "14446:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14446:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14287:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14287:180:10"
											},
											{
												"body": {
													"nativeSrc": "14538:53:10",
													"nodeType": "YulBlock",
													"src": "14538:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14555:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14555:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14578:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14578:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14560:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "14560:17:10"
																		},
																		"nativeSrc": "14560:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14560:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14548:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14548:6:10"
																},
																"nativeSrc": "14548:37:10",
																"nodeType": "YulFunctionCall",
																"src": "14548:37:10"
															},
															"nativeSrc": "14548:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "14548:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14473:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14526:5:10",
														"nodeType": "YulTypedName",
														"src": "14526:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14533:3:10",
														"nodeType": "YulTypedName",
														"src": "14533:3:10",
														"type": ""
													}
												],
												"src": "14473:118:10"
											},
											{
												"body": {
													"nativeSrc": "14695:124:10",
													"nodeType": "YulBlock",
													"src": "14695:124:10",
													"statements": [
														{
															"nativeSrc": "14705:26:10",
															"nodeType": "YulAssignment",
															"src": "14705:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14717:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14717:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14728:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14728:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14713:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14713:3:10"
																},
																"nativeSrc": "14713:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14713:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14705:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14705:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14785:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14785:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14798:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14798:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14809:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14809:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14794:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14794:3:10"
																		},
																		"nativeSrc": "14794:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14794:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14741:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14741:43:10"
																},
																"nativeSrc": "14741:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14741:71:10"
															},
															"nativeSrc": "14741:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14741:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14597:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14667:9:10",
														"nodeType": "YulTypedName",
														"src": "14667:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14679:6:10",
														"nodeType": "YulTypedName",
														"src": "14679:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14690:4:10",
														"nodeType": "YulTypedName",
														"src": "14690:4:10",
														"type": ""
													}
												],
												"src": "14597:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct Recipe.ResourceAmount\n    function abi_decode_t_struct$_ResourceAmount_$1539_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // resourceContractAddr\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct Recipe.ResourceAmount[]\n    function abi_decode_available_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x40))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_ResourceAmount_$1539_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct Recipe.ResourceAmount[]\n    function abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_enum$_Levels_$1534(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Levels_$1534_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_Levels_$1534(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptrt_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptrt_enum$_Levels_$1534_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_enum$_Levels_$1534_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200298f3803806200298f83398181016040528101906200003691906200093e565b83878781600390816200004a919062000c96565b5080600490816200005c919062000c96565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c9919062000d8b565b60405180910390fd5b620000e3816200031460201b60201c565b508460065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200017860065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620003d760201b60201c565b80600660146101000a81548160ff02191690836004811115620001a0576200019f62000da6565b5b02179055505f5b835181101562000255576007848281518110620001c957620001c862000dd3565b5b6020026020010151908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550508080600101915050620001a7565b505f5b8251811015620003065760088382815181106200027a576200027962000dd3565b5b6020026020010151908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050808060010191505062000258565b505050505050505062000e2c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620003ec8383836001620003f160201b60201c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160362000464575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016200045b919062000d8b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620004d7575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401620004ce919062000d8b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015620005c3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051620005ba919062000e11565b60405180910390a35b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200062a82620005e2565b810181811067ffffffffffffffff821117156200064c576200064b620005f2565b5b80604052505050565b5f62000660620005c9565b90506200066e82826200061f565b919050565b5f67ffffffffffffffff82111562000690576200068f620005f2565b5b6200069b82620005e2565b9050602081019050919050565b5f5b83811015620006c7578082015181840152602081019050620006aa565b5f8484015250505050565b5f620006e8620006e28462000673565b62000655565b905082815260208101848484011115620007075762000706620005de565b5b62000714848285620006a8565b509392505050565b5f82601f830112620007335762000732620005da565b5b815162000745848260208601620006d2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000779826200074e565b9050919050565b6200078b816200076d565b811462000796575f80fd5b50565b5f81519050620007a98162000780565b92915050565b5f67ffffffffffffffff821115620007cc57620007cb620005f2565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f819050919050565b620007f981620007e5565b811462000804575f80fd5b50565b5f815190506200081781620007ee565b92915050565b5f60408284031215620008355762000834620007e1565b5b62000841604062000655565b90505f620008528482850162000799565b5f830152506020620008678482850162000807565b60208301525092915050565b5f620008896200088384620007af565b62000655565b90508083825260208201905060408402830185811115620008af57620008ae620007dd565b5b835b81811015620008dc5780620008c788826200081d565b845260208401935050604081019050620008b1565b5050509392505050565b5f82601f830112620008fd57620008fc620005da565b5b81516200090f84826020860162000873565b91505092915050565b6005811062000925575f80fd5b50565b5f81519050620009388162000918565b92915050565b5f805f805f805f60e0888a0312156200095c576200095b620005d2565b5b5f88015167ffffffffffffffff8111156200097c576200097b620005d6565b5b6200098a8a828b016200071c565b975050602088015167ffffffffffffffff811115620009ae57620009ad620005d6565b5b620009bc8a828b016200071c565b9650506040620009cf8a828b0162000799565b9550506060620009e28a828b0162000799565b945050608088015167ffffffffffffffff81111562000a065762000a05620005d6565b5b62000a148a828b01620008e6565b93505060a088015167ffffffffffffffff81111562000a385762000a37620005d6565b5b62000a468a828b01620008e6565b92505060c062000a598a828b0162000928565b91505092959891949750929550565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168062000ab757607f821691505b60208210810362000acd5762000acc62000a72565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000b317fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000af4565b62000b3d868362000af4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f62000b7e62000b7862000b7284620007e5565b62000b55565b620007e5565b9050919050565b5f819050919050565b62000b998362000b5e565b62000bb162000ba88262000b85565b84845462000b00565b825550505050565b5f90565b62000bc762000bb9565b62000bd481848462000b8e565b505050565b5b8181101562000bfb5762000bef5f8262000bbd565b60018101905062000bda565b5050565b601f82111562000c4a5762000c148162000ad3565b62000c1f8462000ae5565b8101602085101562000c2f578190505b62000c4762000c3e8562000ae5565b83018262000bd9565b50505b505050565b5f82821c905092915050565b5f62000c6c5f198460080262000c4f565b1980831691505092915050565b5f62000c86838362000c5b565b9150826002028217905092915050565b62000ca18262000a68565b67ffffffffffffffff81111562000cbd5762000cbc620005f2565b5b62000cc9825462000a9f565b62000cd682828562000bff565b5f60209050601f83116001811462000d0c575f841562000cf7578287015190505b62000d03858262000c79565b86555062000d72565b601f19841662000d1c8662000ad3565b5f5b8281101562000d455784890151825560018201915060208501945060208101905062000d1e565b8683101562000d65578489015162000d61601f89168262000c5b565b8355505b6001600288020188555050505b505050505050565b62000d85816200076d565b82525050565b5f60208201905062000da05f83018462000d7a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b62000e0b81620007e5565b82525050565b5f60208201905062000e265f83018462000e00565b92915050565b611b558062000e3a5f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c80636fd5ae15116100b657806395d89b411161007a57806395d89b4114610368578063a9059cbb14610386578063bd5546be146103b6578063dd62ed3e146103d2578063f2fde38b14610402578063f9e05c6d1461041e57610140565b80636fd5ae15146102d457806370a08231146102f2578063715018a614610322578063737d6a6c1461032c5780638da5cb5b1461034a57610140565b8063313ce56711610108578063313ce5671461021157806340c10f191461022f57806342966c681461024b5780634836149014610267578063635a4cc51461028557806363a2b02b146102b657610140565b806306fdde0314610144578063095ea7b3146101625780630d9ce8041461019257806318160ddd146101c357806323b872dd146101e1575b5f80fd5b61014c61043c565b6040516101599190611457565b60405180910390f35b61017c60048036038101906101779190611508565b6104cc565b6040516101899190611560565b60405180910390f35b6101ac60048036038101906101a79190611579565b6104ee565b6040516101ba9291906115c2565b60405180910390f35b6101cb61053c565b6040516101d891906115e9565b60405180910390f35b6101fb60048036038101906101f69190611602565b610545565b6040516102089190611560565b60405180910390f35b610219610573565b604051610226919061166d565b60405180910390f35b61024960048036038101906102449190611508565b61057b565b005b61026560048036038101906102609190611579565b610618565b005b61026f6106b4565b60405161027c9190611779565b60405180910390f35b61029f600480360381019061029a9190611579565b61076e565b6040516102ad9291906115c2565b60405180910390f35b6102be6107bc565b6040516102cb9190611560565b60405180910390f35b6102dc6107f8565b6040516102e9919061180c565b60405180910390f35b61030c60048036038101906103079190611825565b61080b565b60405161031991906115e9565b60405180910390f35b61032a61081c565b005b61033461082f565b6040516103419190611779565b60405180910390f35b6103526108e9565b60405161035f9190611850565b60405180910390f35b610370610911565b60405161037d9190611457565b60405180910390f35b6103a0600480360381019061039b9190611508565b6109a1565b6040516103ad9190611560565b60405180910390f35b6103d060048036038101906103cb919061188c565b6109b4565b005b6103ec60048036038101906103e791906118b7565b610a70565b6040516103f991906115e9565b60405180910390f35b61041c60048036038101906104179190611825565b610af2565b005b610426610b76565b6040516104339190611850565b60405180910390f35b60606003805461044b90611922565b80601f016020809104026020016040519081016040528092919081815260200182805461047790611922565b80156104c25780601f10610499576101008083540402835291602001916104c2565b820191905f5260205f20905b8154815290600101906020018083116104a557829003601f168201915b5050505050905090565b5f806104d6610b9b565b90506104e3818585610ba2565b600191505092915050565b600781815481106104fd575f80fd5b905f5260205f2090600202015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f600254905090565b5f8061054f610b9b565b905061055c858285610bb4565b610567858585610c46565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106019061199c565b60405180910390fd5b6106148282610d36565b5050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90611a04565b60405180910390fd5b6106b13382610db5565b50565b60606007805480602002602001604051908101604052809291908181526020015f905b82821015610765578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200190600101906106d7565b50505050905090565b6008818154811061077d575f80fd5b905f5260205f2090600202015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f8060048111156107d0576107cf611799565b5b600660149054906101000a900460ff1660048111156107f2576107f1611799565b5b14905090565b600660149054906101000a900460ff1681565b5f61081582610e34565b9050919050565b610824610e79565b61082d5f610f00565b565b60606008805480602002602001604051908101604052809291908181526020015f905b828210156108e0578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610852565b50505050905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461092090611922565b80601f016020809104026020016040519081016040528092919081815260200182805461094c90611922565b80156109975780601f1061096e57610100808354040283529160200191610997565b820191905f5260205f20905b81548152906001019060200180831161097a57829003601f168201915b5050505050905090565b5f6109ac8383610fc3565b905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611a6c565b60405180910390fd5b80600660146101000a81548160ff02191690836004811115610a6857610a67611799565b5b021790555050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610afa610e79565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6a575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b619190611850565b60405180910390fd5b610b7381610f00565b50565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610baf8383836001610fe5565b505050565b5f610bbf8484610a70565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c405781811015610c31578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c2893929190611a8a565b60405180910390fd5b610c3f84848484035f610fe5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cb6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cad9190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d26575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d1d9190611850565b60405180910390fd5b610d318383836111b4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d9d9190611850565b60405180910390fd5b610db15f83836111b4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e25575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e1c9190611850565b60405180910390fd5b610e30825f836111b4565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610e81610b9b565b73ffffffffffffffffffffffffffffffffffffffff16610e9f6108e9565b73ffffffffffffffffffffffffffffffffffffffff1614610efe57610ec2610b9b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef59190611850565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80610fcd610b9b565b9050610fda818585610c46565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611055575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161104c9190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c5575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110bc9190611850565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111ae578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111a591906115e9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611204578060025f8282546111f89190611aec565b925050819055506112d2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561128d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128493929190611a8a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611319578060025f8282540392505081905550611363565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c091906115e9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156114045780820151818401526020810190506113e9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611429826113cd565b61143381856113d7565b93506114438185602086016113e7565b61144c8161140f565b840191505092915050565b5f6020820190508181035f83015261146f818461141f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114a48261147b565b9050919050565b6114b48161149a565b81146114be575f80fd5b50565b5f813590506114cf816114ab565b92915050565b5f819050919050565b6114e7816114d5565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f806040838503121561151e5761151d611477565b5b5f61152b858286016114c1565b925050602061153c858286016114f4565b9150509250929050565b5f8115159050919050565b61155a81611546565b82525050565b5f6020820190506115735f830184611551565b92915050565b5f6020828403121561158e5761158d611477565b5b5f61159b848285016114f4565b91505092915050565b6115ad8161149a565b82525050565b6115bc816114d5565b82525050565b5f6040820190506115d55f8301856115a4565b6115e260208301846115b3565b9392505050565b5f6020820190506115fc5f8301846115b3565b92915050565b5f805f6060848603121561161957611618611477565b5b5f611626868287016114c1565b9350506020611637868287016114c1565b9250506040611648868287016114f4565b9150509250925092565b5f60ff82169050919050565b61166781611652565b82525050565b5f6020820190506116805f83018461165e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116b88161149a565b82525050565b6116c7816114d5565b82525050565b604082015f8201516116e15f8501826116af565b5060208201516116f460208501826116be565b50505050565b5f61170583836116cd565b60408301905092915050565b5f602082019050919050565b5f61172782611686565b6117318185611690565b935061173c836116a0565b805f5b8381101561176c57815161175388826116fa565b975061175e83611711565b92505060018101905061173f565b5085935050505092915050565b5f6020820190508181035f830152611791818461171d565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106117d7576117d6611799565b5b50565b5f8190506117e7826117c6565b919050565b5f6117f6826117da565b9050919050565b611806816117ec565b82525050565b5f60208201905061181f5f8301846117fd565b92915050565b5f6020828403121561183a57611839611477565b5b5f611847848285016114c1565b91505092915050565b5f6020820190506118635f8301846115a4565b92915050565b60058110611875575f80fd5b50565b5f8135905061188681611869565b92915050565b5f602082840312156118a1576118a0611477565b5b5f6118ae84828501611878565b91505092915050565b5f80604083850312156118cd576118cc611477565b5b5f6118da858286016114c1565b92505060206118eb858286016114c1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061193957607f821691505b60208210810361194c5761194b6118f5565b5b50919050565b7f4e6f7420616c6c6f77656420746f206d696e74000000000000000000000000005f82015250565b5f6119866013836113d7565b915061199182611952565b602082019050919050565b5f6020820190508181035f8301526119b38161197a565b9050919050565b7f4e6f7420616c6c6f77656420746f206275726e000000000000000000000000005f82015250565b5f6119ee6013836113d7565b91506119f9826119ba565b602082019050919050565b5f6020820190508181035f830152611a1b816119e2565b9050919050565b7f4e6f7420616c6c6f77656420746f20736574206c6576656c00000000000000005f82015250565b5f611a566018836113d7565b9150611a6182611a22565b602082019050919050565b5f6020820190508181035f830152611a8381611a4a565b9050919050565b5f606082019050611a9d5f8301866115a4565b611aaa60208301856115b3565b611ab760408301846115b3565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611af6826114d5565b9150611b01836114d5565b9250828201905080821115611b1957611b18611abf565b5b9291505056fea264697066735822122097e9d2a8afd09ce5671f5539aa4478ca37d36f71fffa25866f9ce4a46b722e6764736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x298F CODESIZE SUB DUP1 PUSH3 0x298F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x93E JUMP JUMPDEST DUP4 DUP8 DUP8 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0xC96 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0xC96 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE3 DUP2 PUSH3 0x314 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x178 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH3 0x3D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0xDA6 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x255 JUMPI PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x1C9 JUMPI PUSH3 0x1C8 PUSH3 0xDD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH3 0x1A7 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x306 JUMPI PUSH1 0x8 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x27A JUMPI PUSH3 0x279 PUSH3 0xDD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH3 0x258 JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH3 0xE2C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x3F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x464 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x45B SWAP2 SWAP1 PUSH3 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4CE SWAP2 SWAP1 PUSH3 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH3 0x5C3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH3 0x5BA SWAP2 SWAP1 PUSH3 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x62A DUP3 PUSH3 0x5E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x64C JUMPI PUSH3 0x64B PUSH3 0x5F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x660 PUSH3 0x5C9 JUMP JUMPDEST SWAP1 POP PUSH3 0x66E DUP3 DUP3 PUSH3 0x61F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x690 JUMPI PUSH3 0x68F PUSH3 0x5F2 JUMP JUMPDEST JUMPDEST PUSH3 0x69B DUP3 PUSH3 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6AA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6E8 PUSH3 0x6E2 DUP5 PUSH3 0x673 JUMP JUMPDEST PUSH3 0x655 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x707 JUMPI PUSH3 0x706 PUSH3 0x5DE JUMP JUMPDEST JUMPDEST PUSH3 0x714 DUP5 DUP3 DUP6 PUSH3 0x6A8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x733 JUMPI PUSH3 0x732 PUSH3 0x5DA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x745 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x779 DUP3 PUSH3 0x74E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x78B DUP2 PUSH3 0x76D JUMP JUMPDEST DUP2 EQ PUSH3 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x7A9 DUP2 PUSH3 0x780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x7CC JUMPI PUSH3 0x7CB PUSH3 0x5F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7F9 DUP2 PUSH3 0x7E5 JUMP JUMPDEST DUP2 EQ PUSH3 0x804 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x817 DUP2 PUSH3 0x7EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x835 JUMPI PUSH3 0x834 PUSH3 0x7E1 JUMP JUMPDEST JUMPDEST PUSH3 0x841 PUSH1 0x40 PUSH3 0x655 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x852 DUP5 DUP3 DUP6 ADD PUSH3 0x799 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x867 DUP5 DUP3 DUP6 ADD PUSH3 0x807 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x889 PUSH3 0x883 DUP5 PUSH3 0x7AF JUMP JUMPDEST PUSH3 0x655 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x8AF JUMPI PUSH3 0x8AE PUSH3 0x7DD JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8DC JUMPI DUP1 PUSH3 0x8C7 DUP9 DUP3 PUSH3 0x81D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH3 0x8B1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8FD JUMPI PUSH3 0x8FC PUSH3 0x5DA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x90F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x873 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH3 0x925 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x938 DUP2 PUSH3 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x95C JUMPI PUSH3 0x95B PUSH3 0x5D2 JUMP JUMPDEST JUMPDEST PUSH0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x97C JUMPI PUSH3 0x97B PUSH3 0x5D6 JUMP JUMPDEST JUMPDEST PUSH3 0x98A DUP11 DUP3 DUP12 ADD PUSH3 0x71C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9AE JUMPI PUSH3 0x9AD PUSH3 0x5D6 JUMP JUMPDEST JUMPDEST PUSH3 0x9BC DUP11 DUP3 DUP12 ADD PUSH3 0x71C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x9CF DUP11 DUP3 DUP12 ADD PUSH3 0x799 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x9E2 DUP11 DUP3 DUP12 ADD PUSH3 0x799 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA06 JUMPI PUSH3 0xA05 PUSH3 0x5D6 JUMP JUMPDEST JUMPDEST PUSH3 0xA14 DUP11 DUP3 DUP12 ADD PUSH3 0x8E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA38 JUMPI PUSH3 0xA37 PUSH3 0x5D6 JUMP JUMPDEST JUMPDEST PUSH3 0xA46 DUP11 DUP3 DUP12 ADD PUSH3 0x8E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0xA59 DUP11 DUP3 DUP12 ADD PUSH3 0x928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xAB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xACD JUMPI PUSH3 0xACC PUSH3 0xA72 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xB31 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xAF4 JUMP JUMPDEST PUSH3 0xB3D DUP7 DUP4 PUSH3 0xAF4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB7E PUSH3 0xB78 PUSH3 0xB72 DUP5 PUSH3 0x7E5 JUMP JUMPDEST PUSH3 0xB55 JUMP JUMPDEST PUSH3 0x7E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB99 DUP4 PUSH3 0xB5E JUMP JUMPDEST PUSH3 0xBB1 PUSH3 0xBA8 DUP3 PUSH3 0xB85 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xB00 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xBC7 PUSH3 0xBB9 JUMP JUMPDEST PUSH3 0xBD4 DUP2 DUP5 DUP5 PUSH3 0xB8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xBFB JUMPI PUSH3 0xBEF PUSH0 DUP3 PUSH3 0xBBD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xBDA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xC4A JUMPI PUSH3 0xC14 DUP2 PUSH3 0xAD3 JUMP JUMPDEST PUSH3 0xC1F DUP5 PUSH3 0xAE5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xC2F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xC47 PUSH3 0xC3E DUP6 PUSH3 0xAE5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xBD9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC6C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xC4F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC86 DUP4 DUP4 PUSH3 0xC5B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xCA1 DUP3 PUSH3 0xA68 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xCBD JUMPI PUSH3 0xCBC PUSH3 0x5F2 JUMP JUMPDEST JUMPDEST PUSH3 0xCC9 DUP3 SLOAD PUSH3 0xA9F JUMP JUMPDEST PUSH3 0xCD6 DUP3 DUP3 DUP6 PUSH3 0xBFF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xD0C JUMPI PUSH0 DUP5 ISZERO PUSH3 0xCF7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xD03 DUP6 DUP3 PUSH3 0xC79 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xD72 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xD1C DUP7 PUSH3 0xAD3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xD45 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD1E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xD65 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xD61 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xC5B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xD85 DUP2 PUSH3 0x76D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xDA0 PUSH0 DUP4 ADD DUP5 PUSH3 0xD7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xE0B DUP2 PUSH3 0x7E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE26 PUSH0 DUP4 ADD DUP5 PUSH3 0xE00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B55 DUP1 PUSH3 0xE3A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FD5AE15 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xBD5546BE EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xF9E05C6D EQ PUSH2 0x41E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FD5AE15 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x737D6A6C EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x48361490 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x635A4CC5 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x63A2B02B EQ PUSH2 0x2B6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xD9CE804 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x44B SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x477 SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x499 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D6 PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH2 0x4E3 DUP2 DUP6 DUP6 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x54F PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH2 0x55C DUP6 DUP3 DUP6 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x567 DUP6 DUP6 DUP6 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP3 DUP3 PUSH2 0xD36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 CALLER DUP3 PUSH2 0xDB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x765 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x77D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D0 JUMPI PUSH2 0x7CF PUSH2 0x1799 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x815 DUP3 PUSH2 0xE34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x824 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x82D PUSH0 PUSH2 0xF00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8E0 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x852 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x920 SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94C SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x997 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x96E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x997 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9AC DUP4 DUP4 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3A SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA PUSH2 0xE79 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB73 DUP2 PUSH2 0xF00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBAF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBF DUP5 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC40 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFE5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD31 DUP4 DUP4 DUP4 PUSH2 0x11B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB1 PUSH0 DUP4 DUP4 PUSH2 0x11B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE25 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1C SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE30 DUP3 PUSH0 DUP4 PUSH2 0x11B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE81 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9F PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFE JUMPI PUSH2 0xEC2 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFCD PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH2 0xFDA DUP2 DUP6 DUP6 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1055 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11AE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1204 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12D2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x128D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1284 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1319 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1363 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1404 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13E9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1429 DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x1433 DUP2 DUP6 PUSH2 0x13D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1443 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x140F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x146F DUP2 DUP5 PUSH2 0x141F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14A4 DUP3 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149A JUMP JUMPDEST DUP2 EQ PUSH2 0x14BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CF DUP2 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151E JUMPI PUSH2 0x151D PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152B DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153C DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155A DUP2 PUSH2 0x1546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1573 PUSH0 DUP4 ADD DUP5 PUSH2 0x1551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159B DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15AD DUP2 PUSH2 0x149A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15BC DUP2 PUSH2 0x14D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15D5 PUSH0 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FC PUSH0 DUP4 ADD DUP5 PUSH2 0x15B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1626 DUP7 DUP3 DUP8 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1637 DUP7 DUP3 DUP8 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1648 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1667 DUP2 PUSH2 0x1652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1680 PUSH0 DUP4 ADD DUP5 PUSH2 0x165E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x149A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C7 DUP2 PUSH2 0x14D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16E1 PUSH0 DUP6 ADD DUP3 PUSH2 0x16AF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16F4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1705 DUP4 DUP4 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1727 DUP3 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x1731 DUP2 DUP6 PUSH2 0x1690 JUMP JUMPDEST SWAP4 POP PUSH2 0x173C DUP4 PUSH2 0x16A0 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176C JUMPI DUP2 MLOAD PUSH2 0x1753 DUP9 DUP3 PUSH2 0x16FA JUMP JUMPDEST SWAP8 POP PUSH2 0x175E DUP4 PUSH2 0x1711 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x173F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1791 DUP2 DUP5 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x17E7 DUP3 PUSH2 0x17C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F6 DUP3 PUSH2 0x17DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1806 DUP2 PUSH2 0x17EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181F PUSH0 DUP4 ADD DUP5 PUSH2 0x17FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1847 DUP5 DUP3 DUP6 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1863 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1875 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1886 DUP2 PUSH2 0x1869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A1 JUMPI PUSH2 0x18A0 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18AE DUP5 DUP3 DUP6 ADD PUSH2 0x1878 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18DA DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18EB DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1939 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x18F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F206D696E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1986 PUSH1 0x13 DUP4 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1991 DUP3 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B3 DUP2 PUSH2 0x197A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F206275726E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19EE PUSH1 0x13 DUP4 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F9 DUP3 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1B DUP2 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F20736574206C6576656C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A56 PUSH1 0x18 DUP4 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A61 DUP3 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A83 DUP2 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A9D PUSH0 DUP4 ADD DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1AAA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x1AB7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF6 DUP3 PUSH2 0x14D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B01 DUP4 PUSH2 0x14D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xE9 0xD2 0xA8 0xAF 0xD0 SWAP13 0xE5 PUSH8 0x1F5539AA4478CA37 0xD3 PUSH16 0x71FFFA25866F9CE4A46B722E6764736F PUSH13 0x63430008170033000000000000 ",
							"sourceMap": "233:2758:9:-:0;;;686:860;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;986:12;964:4;970:6;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1099:26:9::2;1071:25;;:54;;;;;;;;;;;;;;;;;;1135:68;1144:25;;;;;;;;;;;1171:12;1185:17;1135:8;;;:68;;:::i;:::-;1221:6;1213:5;;:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1299:9;1294:117;1318:15;:22;1314:1;:26;1294:117;;;1361:14;1381:15;1397:1;1381:18;;;;;;;;:::i;:::-;;;;;;;;1361:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:3;;;;;;;1294:117;;;;1425:9;1420:120;1444:16;:23;1440:1;:27;1420:120;;;1488:15;1509:16;1526:1;1509:19;;;;;;;;:::i;:::-;;;;;;;;1488:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:3;;;;;;;1420:120;;;;686:860:::0;;;;;;;233:2758;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;;;:37;;:::i;:::-;8989:128;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:122::-;2984:24;3002:5;2984:24;:::i;:::-;2977:5;2974:35;2964:63;;3023:1;3020;3013:12;2964:63;2911:122;:::o;3039:143::-;3096:5;3127:6;3121:13;3112:22;;3143:33;3170:5;3143:33;:::i;:::-;3039:143;;;;:::o;3188:343::-;3297:4;3387:18;3379:6;3376:30;3373:56;;;3409:18;;:::i;:::-;3373:56;3459:4;3451:6;3447:17;3439:25;;3519:4;3513;3509:15;3501:23;;3188:343;;;:::o;3537:117::-;3646:1;3643;3636:12;3660:117;3769:1;3766;3759:12;3906:77;3943:7;3972:5;3961:16;;3906:77;;;:::o;3989:122::-;4062:24;4080:5;4062:24;:::i;:::-;4055:5;4052:35;4042:63;;4101:1;4098;4091:12;4042:63;3989:122;:::o;4117:143::-;4174:5;4205:6;4199:13;4190:22;;4221:33;4248:5;4221:33;:::i;:::-;4117:143;;;;:::o;4302:632::-;4394:5;4438:4;4426:9;4421:3;4417:19;4413:30;4410:117;;;4446:79;;:::i;:::-;4410:117;4545:21;4561:4;4545:21;:::i;:::-;4536:30;;4641:1;4681:60;4737:3;4728:6;4717:9;4713:22;4681:60;:::i;:::-;4674:4;4667:5;4663:16;4656:86;4576:177;4814:2;4855:60;4911:3;4902:6;4891:9;4887:22;4855:60;:::i;:::-;4848:4;4841:5;4837:16;4830:86;4763:164;4302:632;;;;:::o;4978:828::-;5117:5;5142:113;5158:96;5247:6;5158:96;:::i;:::-;5142:113;:::i;:::-;5133:122;;5275:5;5304:6;5297:5;5290:21;5338:4;5331:5;5327:16;5320:23;;5391:4;5383:6;5379:17;5371:6;5367:30;5420:3;5412:6;5409:15;5406:122;;;5439:79;;:::i;:::-;5406:122;5554:6;5537:263;5571:6;5566:3;5563:15;5537:263;;;5646:3;5675:80;5751:3;5739:10;5675:80;:::i;:::-;5670:3;5663:93;5785:4;5780:3;5776:14;5769:21;;5613:187;5597:4;5592:3;5588:14;5581:21;;5537:263;;;5541:21;5123:683;;4978:828;;;;;:::o;5850:449::-;5964:5;6013:3;6006:4;5998:6;5994:17;5990:27;5980:122;;6021:79;;:::i;:::-;5980:122;6131:6;6125:13;6156:137;6289:3;6281:6;6274:4;6266:6;6262:17;6156:137;:::i;:::-;6147:146;;5970:329;5850:449;;;;:::o;6305:110::-;6389:1;6382:5;6379:12;6369:40;;6405:1;6402;6395:12;6369:40;6305:110;:::o;6421:165::-;6489:5;6520:6;6514:13;6505:22;;6536:44;6574:5;6536:44;:::i;:::-;6421:165;;;;:::o;6592:2193::-;6861:6;6869;6877;6885;6893;6901;6909;6958:3;6946:9;6937:7;6933:23;6929:33;6926:120;;;6965:79;;:::i;:::-;6926:120;7106:1;7095:9;7091:17;7085:24;7136:18;7128:6;7125:30;7122:117;;;7158:79;;:::i;:::-;7122:117;7263:74;7329:7;7320:6;7309:9;7305:22;7263:74;:::i;:::-;7253:84;;7056:291;7407:2;7396:9;7392:18;7386:25;7438:18;7430:6;7427:30;7424:117;;;7460:79;;:::i;:::-;7424:117;7565:74;7631:7;7622:6;7611:9;7607:22;7565:74;:::i;:::-;7555:84;;7357:292;7688:2;7714:64;7770:7;7761:6;7750:9;7746:22;7714:64;:::i;:::-;7704:74;;7659:129;7827:2;7853:64;7909:7;7900:6;7889:9;7885:22;7853:64;:::i;:::-;7843:74;;7798:129;7987:3;7976:9;7972:19;7966:26;8019:18;8011:6;8008:30;8005:117;;;8041:79;;:::i;:::-;8005:117;8146:121;8259:7;8250:6;8239:9;8235:22;8146:121;:::i;:::-;8136:131;;7937:340;8337:3;8326:9;8322:19;8316:26;8369:18;8361:6;8358:30;8355:117;;;8391:79;;:::i;:::-;8355:117;8496:121;8609:7;8600:6;8589:9;8585:22;8496:121;:::i;:::-;8486:131;;8287:340;8666:3;8693:75;8760:7;8751:6;8740:9;8736:22;8693:75;:::i;:::-;8683:85;;8637:141;6592:2193;;;;;;;;;;:::o;8791:99::-;8843:6;8877:5;8871:12;8861:22;;8791:99;;;:::o;8896:180::-;8944:77;8941:1;8934:88;9041:4;9038:1;9031:15;9065:4;9062:1;9055:15;9082:320;9126:6;9163:1;9157:4;9153:12;9143:22;;9210:1;9204:4;9200:12;9231:18;9221:81;;9287:4;9279:6;9275:17;9265:27;;9221:81;9349:2;9341:6;9338:14;9318:18;9315:38;9312:84;;9368:18;;:::i;:::-;9312:84;9133:269;9082:320;;;:::o;9408:141::-;9457:4;9480:3;9472:11;;9503:3;9500:1;9493:14;9537:4;9534:1;9524:18;9516:26;;9408:141;;;:::o;9555:93::-;9592:6;9639:2;9634;9627:5;9623:14;9619:23;9609:33;;9555:93;;;:::o;9654:107::-;9698:8;9748:5;9742:4;9738:16;9717:37;;9654:107;;;;:::o;9767:393::-;9836:6;9886:1;9874:10;9870:18;9909:97;9939:66;9928:9;9909:97;:::i;:::-;10027:39;10057:8;10046:9;10027:39;:::i;:::-;10015:51;;10099:4;10095:9;10088:5;10084:21;10075:30;;10148:4;10138:8;10134:19;10127:5;10124:30;10114:40;;9843:317;;9767:393;;;;;:::o;10166:60::-;10194:3;10215:5;10208:12;;10166:60;;;:::o;10232:142::-;10282:9;10315:53;10333:34;10342:24;10360:5;10342:24;:::i;:::-;10333:34;:::i;:::-;10315:53;:::i;:::-;10302:66;;10232:142;;;:::o;10380:75::-;10423:3;10444:5;10437:12;;10380:75;;;:::o;10461:269::-;10571:39;10602:7;10571:39;:::i;:::-;10632:91;10681:41;10705:16;10681:41;:::i;:::-;10673:6;10666:4;10660:11;10632:91;:::i;:::-;10626:4;10619:105;10537:193;10461:269;;;:::o;10736:73::-;10781:3;10736:73;:::o;10815:189::-;10892:32;;:::i;:::-;10933:65;10991:6;10983;10977:4;10933:65;:::i;:::-;10868:136;10815:189;;:::o;11010:186::-;11070:120;11087:3;11080:5;11077:14;11070:120;;;11141:39;11178:1;11171:5;11141:39;:::i;:::-;11114:1;11107:5;11103:13;11094:22;;11070:120;;;11010:186;;:::o;11202:543::-;11303:2;11298:3;11295:11;11292:446;;;11337:38;11369:5;11337:38;:::i;:::-;11421:29;11439:10;11421:29;:::i;:::-;11411:8;11407:44;11604:2;11592:10;11589:18;11586:49;;;11625:8;11610:23;;11586:49;11648:80;11704:22;11722:3;11704:22;:::i;:::-;11694:8;11690:37;11677:11;11648:80;:::i;:::-;11307:431;;11292:446;11202:543;;;:::o;11751:117::-;11805:8;11855:5;11849:4;11845:16;11824:37;;11751:117;;;;:::o;11874:169::-;11918:6;11951:51;11999:1;11995:6;11987:5;11984:1;11980:13;11951:51;:::i;:::-;11947:56;12032:4;12026;12022:15;12012:25;;11925:118;11874:169;;;;:::o;12048:295::-;12124:4;12270:29;12295:3;12289:4;12270:29;:::i;:::-;12262:37;;12332:3;12329:1;12325:11;12319:4;12316:21;12308:29;;12048:295;;;;:::o;12348:1395::-;12465:37;12498:3;12465:37;:::i;:::-;12567:18;12559:6;12556:30;12553:56;;;12589:18;;:::i;:::-;12553:56;12633:38;12665:4;12659:11;12633:38;:::i;:::-;12718:67;12778:6;12770;12764:4;12718:67;:::i;:::-;12812:1;12836:4;12823:17;;12868:2;12860:6;12857:14;12885:1;12880:618;;;;13542:1;13559:6;13556:77;;;13608:9;13603:3;13599:19;13593:26;13584:35;;13556:77;13659:67;13719:6;13712:5;13659:67;:::i;:::-;13653:4;13646:81;13515:222;12850:887;;12880:618;12932:4;12928:9;12920:6;12916:22;12966:37;12998:4;12966:37;:::i;:::-;13025:1;13039:208;13053:7;13050:1;13047:14;13039:208;;;13132:9;13127:3;13123:19;13117:26;13109:6;13102:42;13183:1;13175:6;13171:14;13161:24;;13230:2;13219:9;13215:18;13202:31;;13076:4;13073:1;13069:12;13064:17;;13039:208;;;13275:6;13266:7;13263:19;13260:179;;;13333:9;13328:3;13324:19;13318:26;13376:48;13418:4;13410:6;13406:17;13395:9;13376:48;:::i;:::-;13368:6;13361:64;13283:156;13260:179;13485:1;13481;13473:6;13469:14;13465:22;13459:4;13452:36;12887:611;;;12850:887;;12440:1303;;;12348:1395;;:::o;13749:118::-;13836:24;13854:5;13836:24;:::i;:::-;13831:3;13824:37;13749:118;;:::o;13873:222::-;13966:4;14004:2;13993:9;13989:18;13981:26;;14017:71;14085:1;14074:9;14070:17;14061:6;14017:71;:::i;:::-;13873:222;;;;:::o;14101:180::-;14149:77;14146:1;14139:88;14246:4;14243:1;14236:15;14270:4;14267:1;14260:15;14287:180;14335:77;14332:1;14325:88;14432:4;14429:1;14422:15;14456:4;14453:1;14446:15;14473:118;14560:24;14578:5;14560:24;:::i;:::-;14555:3;14548:37;14473:118;;:::o;14597:222::-;14690:4;14728:2;14717:9;14713:18;14705:26;;14741:71;14809:1;14798:9;14794:17;14785:6;14741:71;:::i;:::-;14597:222;;;;:::o;233:2758:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2978,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4069,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3509,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3705,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3382,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1494": {
									"entryPoint": 2971,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2996,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3840,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3142,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4532,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2672,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1228,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1748": {
									"entryPoint": 2059,
									"id": 1748,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 3636,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1717": {
									"entryPoint": 1560,
									"id": 1717,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1395,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInputResources_1758": {
									"entryPoint": 1716,
									"id": 1758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOutputResources_1768": {
									"entryPoint": 2095,
									"id": 1768,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@inputResources_1552": {
									"entryPoint": 1262,
									"id": 1552,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFirstLevel_1657": {
									"entryPoint": 1980,
									"id": 1657,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@level_1548": {
									"entryPoint": 2040,
									"id": 1548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1697": {
									"entryPoint": 1403,
									"id": 1697,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1084,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@outputResources_1556": {
									"entryPoint": 1902,
									"id": 1556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2281,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2076,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLevel_1676": {
									"entryPoint": 2484,
									"id": 1676,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2321,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1340,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1349,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2802,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1734": {
									"entryPoint": 2465,
									"id": 1734,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 4035,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlimitedAllowanceAddress_1545": {
									"entryPoint": 2934,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Levels_$1534": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_enum$_Levels_$1534": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Levels_$1534_to_t_uint8_fromStack": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Levels_$1534__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Levels_$1534": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Levels_$1534_to_t_uint8": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Levels_$1534": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Levels_$1534": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15993:10",
										"nodeType": "YulBlock",
										"src": "0:15993:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:184:10",
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nativeSrc": "359:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:10",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:10",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:10",
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nativeSrc": "449:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nativeSrc": "468:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nativeSrc": "462:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nativeSrc": "442:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nativeSrc": "442:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nativeSrc": "386:13:10",
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nativeSrc": "378:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:10",
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nativeSrc": "402:15:10",
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:10",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nativeSrc": "407:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:10",
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nativeSrc": "507:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:10",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nativeSrc": "500:27:10",
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nativeSrc": "500:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nativeSrc": "587:54:10",
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nativeSrc": "597:38:10",
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:10",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nativeSrc": "611:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:10",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nativeSrc": "627:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nativeSrc": "607:28:10",
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:10",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:10",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nativeSrc": "739:285:10",
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nativeSrc": "749:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nativeSrc": "763:39:10",
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:10",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:10",
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nativeSrc": "818:71:10",
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:10",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nativeSrc": "933:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nativeSrc": "898:65:10",
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nativeSrc": "898:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nativeSrc": "972:46:10",
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nativeSrc": "988:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nativeSrc": "979:39:10",
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:10",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:10",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:10",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nativeSrc": "1148:195:10",
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nativeSrc": "1158:26:10",
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nativeSrc": "1166:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nativeSrc": "1201:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nativeSrc": "1220:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nativeSrc": "1194:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nativeSrc": "1194:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nativeSrc": "1250:86:10",
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nativeSrc": "1258:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:10",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:10",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:10",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nativeSrc": "1389:35:10",
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nativeSrc": "1399:19:10",
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nativeSrc": "1409:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:10",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nativeSrc": "1519:28:10",
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nativeSrc": "1529:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nativeSrc": "1529:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nativeSrc": "1642:28:10",
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nativeSrc": "1652:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nativeSrc": "1652:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nativeSrc": "1721:81:10",
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nativeSrc": "1731:65:10",
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nativeSrc": "1742:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:10",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:10",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nativeSrc": "1853:51:10",
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nativeSrc": "1863:35:10",
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nativeSrc": "1874:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:10",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:10",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nativeSrc": "1953:79:10",
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:10",
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nativeSrc": "2012:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nativeSrc": "2012:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nativeSrc": "1983:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nativeSrc": "1973:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nativeSrc": "1966:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nativeSrc": "1963:63:10",
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:10",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nativeSrc": "2090:87:10",
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nativeSrc": "2100:29:10",
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nativeSrc": "2109:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nativeSrc": "2138:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nativeSrc": "2138:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:10",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:10",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:10",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nativeSrc": "2228:32:10",
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nativeSrc": "2238:16:10",
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:10",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:10",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:10",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nativeSrc": "2309:79:10",
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:10",
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nativeSrc": "2368:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nativeSrc": "2368:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nativeSrc": "2339:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nativeSrc": "2329:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nativeSrc": "2322:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nativeSrc": "2319:63:10",
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:10",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nativeSrc": "2446:87:10",
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nativeSrc": "2456:29:10",
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nativeSrc": "2465:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nativeSrc": "2494:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nativeSrc": "2494:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:10",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:10",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:10",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nativeSrc": "2622:391:10",
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:10",
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nativeSrc": "2670:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nativeSrc": "2670:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nativeSrc": "2639:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nativeSrc": "2635:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nativeSrc": "2632:119:10",
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nativeSrc": "2761:117:10",
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nativeSrc": "2776:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nativeSrc": "2836:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nativeSrc": "2815:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:10",
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nativeSrc": "2903:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nativeSrc": "2964:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nativeSrc": "2943:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:10",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:10",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:10",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:10",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nativeSrc": "3061:48:10",
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nativeSrc": "3071:32:10",
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nativeSrc": "3089:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nativeSrc": "3082:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:10",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:10",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nativeSrc": "3174:50:10",
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nativeSrc": "3196:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nativeSrc": "3184:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nativeSrc": "3184:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:10",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:10",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nativeSrc": "3322:118:10",
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nativeSrc": "3332:26:10",
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nativeSrc": "3340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nativeSrc": "3415:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nativeSrc": "3368:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nativeSrc": "3368:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:10",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:10",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:10",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nativeSrc": "3512:263:10",
													"nodeType": "YulBlock",
													"src": "3512:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3558:83:10",
																"nodeType": "YulBlock",
																"src": "3558:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3560:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3560:77:10"
																			},
																			"nativeSrc": "3560:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3560:79:10"
																		},
																		"nativeSrc": "3560:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3533:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3533:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3542:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:10"
																		},
																		"nativeSrc": "3529:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3529:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3554:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:10"
																},
																"nativeSrc": "3525:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3525:32:10"
															},
															"nativeSrc": "3522:119:10",
															"nodeType": "YulIf",
															"src": "3522:119:10"
														},
														{
															"nativeSrc": "3651:117:10",
															"nodeType": "YulBlock",
															"src": "3651:117:10",
															"statements": [
																{
																	"nativeSrc": "3666:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3666:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3680:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3680:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3670:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3670:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3695:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3695:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3730:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3730:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3741:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3741:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3726:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:10"
																				},
																				"nativeSrc": "3726:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3726:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3750:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3750:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3705:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3705:20:10"
																		},
																		"nativeSrc": "3705:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3695:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3695:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3446:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3482:9:10",
														"nodeType": "YulTypedName",
														"src": "3482:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3493:7:10",
														"nodeType": "YulTypedName",
														"src": "3493:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3505:6:10",
														"nodeType": "YulTypedName",
														"src": "3505:6:10",
														"type": ""
													}
												],
												"src": "3446:329:10"
											},
											{
												"body": {
													"nativeSrc": "3846:53:10",
													"nodeType": "YulBlock",
													"src": "3846:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3863:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3863:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3886:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3886:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3868:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3868:17:10"
																		},
																		"nativeSrc": "3868:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3868:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3856:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:10"
																},
																"nativeSrc": "3856:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3856:37:10"
															},
															"nativeSrc": "3856:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3856:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3781:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3834:5:10",
														"nodeType": "YulTypedName",
														"src": "3834:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3841:3:10",
														"nodeType": "YulTypedName",
														"src": "3841:3:10",
														"type": ""
													}
												],
												"src": "3781:118:10"
											},
											{
												"body": {
													"nativeSrc": "3970:53:10",
													"nodeType": "YulBlock",
													"src": "3970:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3987:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3987:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4010:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4010:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3992:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3992:17:10"
																		},
																		"nativeSrc": "3992:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3980:6:10"
																},
																"nativeSrc": "3980:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3980:37:10"
															},
															"nativeSrc": "3980:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3980:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3905:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3958:5:10",
														"nodeType": "YulTypedName",
														"src": "3958:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3965:3:10",
														"nodeType": "YulTypedName",
														"src": "3965:3:10",
														"type": ""
													}
												],
												"src": "3905:118:10"
											},
											{
												"body": {
													"nativeSrc": "4155:206:10",
													"nodeType": "YulBlock",
													"src": "4155:206:10",
													"statements": [
														{
															"nativeSrc": "4165:26:10",
															"nodeType": "YulAssignment",
															"src": "4165:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4177:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4177:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4188:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4188:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4173:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:10"
																},
																"nativeSrc": "4173:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4173:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4165:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4165:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4245:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4245:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4269:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4269:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4254:3:10"
																		},
																		"nativeSrc": "4254:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4254:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4201:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4201:43:10"
																},
																"nativeSrc": "4201:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4201:71:10"
															},
															"nativeSrc": "4201:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4201:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4326:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4326:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4339:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4339:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4350:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4350:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4335:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4335:3:10"
																		},
																		"nativeSrc": "4335:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4335:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4282:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4282:43:10"
																},
																"nativeSrc": "4282:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4282:72:10"
															},
															"nativeSrc": "4282:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4282:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4029:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4119:9:10",
														"nodeType": "YulTypedName",
														"src": "4119:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4131:6:10",
														"nodeType": "YulTypedName",
														"src": "4131:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4139:6:10",
														"nodeType": "YulTypedName",
														"src": "4139:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4150:4:10",
														"nodeType": "YulTypedName",
														"src": "4150:4:10",
														"type": ""
													}
												],
												"src": "4029:332:10"
											},
											{
												"body": {
													"nativeSrc": "4465:124:10",
													"nodeType": "YulBlock",
													"src": "4465:124:10",
													"statements": [
														{
															"nativeSrc": "4475:26:10",
															"nodeType": "YulAssignment",
															"src": "4475:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4487:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4487:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4498:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:10"
																},
																"nativeSrc": "4483:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4483:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4475:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4475:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4555:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4568:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4568:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4579:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4579:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4564:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4564:3:10"
																		},
																		"nativeSrc": "4564:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4564:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4511:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4511:43:10"
																},
																"nativeSrc": "4511:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4511:71:10"
															},
															"nativeSrc": "4511:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4511:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4367:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4437:9:10",
														"nodeType": "YulTypedName",
														"src": "4437:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4449:6:10",
														"nodeType": "YulTypedName",
														"src": "4449:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4460:4:10",
														"nodeType": "YulTypedName",
														"src": "4460:4:10",
														"type": ""
													}
												],
												"src": "4367:222:10"
											},
											{
												"body": {
													"nativeSrc": "4695:519:10",
													"nodeType": "YulBlock",
													"src": "4695:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4741:83:10",
																"nodeType": "YulBlock",
																"src": "4741:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4743:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4743:77:10"
																			},
																			"nativeSrc": "4743:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4743:79:10"
																		},
																		"nativeSrc": "4743:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4743:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4716:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4725:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4725:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4712:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:10"
																		},
																		"nativeSrc": "4712:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4712:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4737:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4737:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:10"
																},
																"nativeSrc": "4708:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4708:32:10"
															},
															"nativeSrc": "4705:119:10",
															"nodeType": "YulIf",
															"src": "4705:119:10"
														},
														{
															"nativeSrc": "4834:117:10",
															"nodeType": "YulBlock",
															"src": "4834:117:10",
															"statements": [
																{
																	"nativeSrc": "4849:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4849:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4863:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4863:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4853:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4853:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4878:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4878:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4913:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4913:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4924:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4924:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4909:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4909:3:10"
																				},
																				"nativeSrc": "4909:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4933:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4933:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4888:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4888:20:10"
																		},
																		"nativeSrc": "4888:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4888:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4878:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4878:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4961:118:10",
															"nodeType": "YulBlock",
															"src": "4961:118:10",
															"statements": [
																{
																	"nativeSrc": "4976:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4976:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4990:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4980:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4980:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5006:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5006:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5041:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5041:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5052:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5052:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5037:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5037:3:10"
																				},
																				"nativeSrc": "5037:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5037:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5061:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5061:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5016:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5016:20:10"
																		},
																		"nativeSrc": "5016:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5016:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5006:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5006:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5089:118:10",
															"nodeType": "YulBlock",
															"src": "5089:118:10",
															"statements": [
																{
																	"nativeSrc": "5104:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5104:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5118:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5108:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5134:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5134:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5169:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5169:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5180:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5180:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5165:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5165:3:10"
																				},
																				"nativeSrc": "5165:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5165:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5189:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5189:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5144:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5144:20:10"
																		},
																		"nativeSrc": "5144:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5144:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5134:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5134:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4595:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4649:9:10",
														"nodeType": "YulTypedName",
														"src": "4649:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4660:7:10",
														"nodeType": "YulTypedName",
														"src": "4660:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4672:6:10",
														"nodeType": "YulTypedName",
														"src": "4672:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4680:6:10",
														"nodeType": "YulTypedName",
														"src": "4680:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4688:6:10",
														"nodeType": "YulTypedName",
														"src": "4688:6:10",
														"type": ""
													}
												],
												"src": "4595:619:10"
											},
											{
												"body": {
													"nativeSrc": "5263:43:10",
													"nodeType": "YulBlock",
													"src": "5263:43:10",
													"statements": [
														{
															"nativeSrc": "5273:27:10",
															"nodeType": "YulAssignment",
															"src": "5273:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5288:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5288:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5295:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5295:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:10"
																},
																"nativeSrc": "5284:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5284:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5273:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5273:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5220:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5245:5:10",
														"nodeType": "YulTypedName",
														"src": "5245:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5255:7:10",
														"nodeType": "YulTypedName",
														"src": "5255:7:10",
														"type": ""
													}
												],
												"src": "5220:86:10"
											},
											{
												"body": {
													"nativeSrc": "5373:51:10",
													"nodeType": "YulBlock",
													"src": "5373:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5390:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5390:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5411:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5411:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5395:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "5395:15:10"
																		},
																		"nativeSrc": "5395:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5383:6:10"
																},
																"nativeSrc": "5383:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5383:35:10"
															},
															"nativeSrc": "5383:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5383:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5312:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5361:5:10",
														"nodeType": "YulTypedName",
														"src": "5361:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5368:3:10",
														"nodeType": "YulTypedName",
														"src": "5368:3:10",
														"type": ""
													}
												],
												"src": "5312:112:10"
											},
											{
												"body": {
													"nativeSrc": "5524:120:10",
													"nodeType": "YulBlock",
													"src": "5524:120:10",
													"statements": [
														{
															"nativeSrc": "5534:26:10",
															"nodeType": "YulAssignment",
															"src": "5534:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5546:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5546:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5542:3:10"
																},
																"nativeSrc": "5542:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5542:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5534:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5534:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5610:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5610:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5623:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5623:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5634:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5634:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5619:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:10"
																		},
																		"nativeSrc": "5619:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5570:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5570:39:10"
																},
																"nativeSrc": "5570:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5570:67:10"
															},
															"nativeSrc": "5570:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5570:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5430:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5496:9:10",
														"nodeType": "YulTypedName",
														"src": "5496:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5508:6:10",
														"nodeType": "YulTypedName",
														"src": "5508:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5519:4:10",
														"nodeType": "YulTypedName",
														"src": "5519:4:10",
														"type": ""
													}
												],
												"src": "5430:214:10"
											},
											{
												"body": {
													"nativeSrc": "5756:40:10",
													"nodeType": "YulBlock",
													"src": "5756:40:10",
													"statements": [
														{
															"nativeSrc": "5767:22:10",
															"nodeType": "YulAssignment",
															"src": "5767:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5783:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5783:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5777:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5777:5:10"
																},
																"nativeSrc": "5777:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5777:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5767:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5650:146:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5739:5:10",
														"nodeType": "YulTypedName",
														"src": "5739:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5749:6:10",
														"nodeType": "YulTypedName",
														"src": "5749:6:10",
														"type": ""
													}
												],
												"src": "5650:146:10"
											},
											{
												"body": {
													"nativeSrc": "5945:73:10",
													"nodeType": "YulBlock",
													"src": "5945:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5962:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5962:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5967:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5967:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:10"
																},
																"nativeSrc": "5955:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5955:19:10"
															},
															"nativeSrc": "5955:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "5955:19:10"
														},
														{
															"nativeSrc": "5983:29:10",
															"nodeType": "YulAssignment",
															"src": "5983:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6002:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6002:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6007:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6007:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5998:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5998:3:10"
																},
																"nativeSrc": "5998:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5998:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5983:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "5983:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5802:216:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5917:3:10",
														"nodeType": "YulTypedName",
														"src": "5917:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5922:6:10",
														"nodeType": "YulTypedName",
														"src": "5922:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5933:11:10",
														"nodeType": "YulTypedName",
														"src": "5933:11:10",
														"type": ""
													}
												],
												"src": "5802:216:10"
											},
											{
												"body": {
													"nativeSrc": "6128:60:10",
													"nodeType": "YulBlock",
													"src": "6128:60:10",
													"statements": [
														{
															"nativeSrc": "6138:11:10",
															"nodeType": "YulAssignment",
															"src": "6138:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "6146:3:10",
																"nodeType": "YulIdentifier",
																"src": "6146:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6138:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6138:4:10"
																}
															]
														},
														{
															"nativeSrc": "6159:22:10",
															"nodeType": "YulAssignment",
															"src": "6159:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6171:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6176:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6176:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6167:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6167:3:10"
																},
																"nativeSrc": "6167:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6167:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6159:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6159:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6024:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6115:3:10",
														"nodeType": "YulTypedName",
														"src": "6115:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6123:4:10",
														"nodeType": "YulTypedName",
														"src": "6123:4:10",
														"type": ""
													}
												],
												"src": "6024:164:10"
											},
											{
												"body": {
													"nativeSrc": "6249:53:10",
													"nodeType": "YulBlock",
													"src": "6249:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6266:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6266:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6289:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6289:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6271:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6271:17:10"
																		},
																		"nativeSrc": "6271:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6271:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6259:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:10"
																},
																"nativeSrc": "6259:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6259:37:10"
															},
															"nativeSrc": "6259:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6259:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6194:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6237:5:10",
														"nodeType": "YulTypedName",
														"src": "6237:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6244:3:10",
														"nodeType": "YulTypedName",
														"src": "6244:3:10",
														"type": ""
													}
												],
												"src": "6194:108:10"
											},
											{
												"body": {
													"nativeSrc": "6363:53:10",
													"nodeType": "YulBlock",
													"src": "6363:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6380:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6380:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6403:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6403:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6385:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6385:17:10"
																		},
																		"nativeSrc": "6385:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6385:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6373:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:10"
																},
																"nativeSrc": "6373:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6373:37:10"
															},
															"nativeSrc": "6373:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6373:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6308:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6351:5:10",
														"nodeType": "YulTypedName",
														"src": "6351:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6358:3:10",
														"nodeType": "YulTypedName",
														"src": "6358:3:10",
														"type": ""
													}
												],
												"src": "6308:108:10"
											},
											{
												"body": {
													"nativeSrc": "6610:409:10",
													"nodeType": "YulBlock",
													"src": "6610:409:10",
													"statements": [
														{
															"nativeSrc": "6620:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6620:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6636:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6636:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6641:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6641:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6632:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6632:3:10"
																},
																"nativeSrc": "6632:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6632:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6624:4:10",
																	"nodeType": "YulTypedName",
																	"src": "6624:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6656:180:10",
															"nodeType": "YulBlock",
															"src": "6656:180:10",
															"statements": [
																{
																	"nativeSrc": "6707:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6707:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6737:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6737:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6744:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6744:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6733:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6733:3:10"
																				},
																				"nativeSrc": "6733:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6733:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6727:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6727:5:10"
																		},
																		"nativeSrc": "6727:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6711:12:10",
																			"nodeType": "YulTypedName",
																			"src": "6711:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6797:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "6797:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6815:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6815:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6820:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6820:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6811:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6811:3:10"
																				},
																				"nativeSrc": "6811:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6811:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6763:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "6763:33:10"
																		},
																		"nativeSrc": "6763:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:63:10"
																	},
																	"nativeSrc": "6763:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "6763:63:10"
																}
															]
														},
														{
															"nativeSrc": "6846:166:10",
															"nodeType": "YulBlock",
															"src": "6846:166:10",
															"statements": [
																{
																	"nativeSrc": "6883:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6883:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6913:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6913:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6920:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6920:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6909:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6909:3:10"
																				},
																				"nativeSrc": "6909:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6909:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6903:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6903:5:10"
																		},
																		"nativeSrc": "6903:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6903:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6887:12:10",
																			"nodeType": "YulTypedName",
																			"src": "6887:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6973:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "6973:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6991:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6991:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6996:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6996:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6987:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6987:3:10"
																				},
																				"nativeSrc": "6987:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6987:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6939:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "6939:33:10"
																		},
																		"nativeSrc": "6939:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6939:63:10"
																	},
																	"nativeSrc": "6939:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "6939:63:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr",
												"nativeSrc": "6490:529:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6597:5:10",
														"nodeType": "YulTypedName",
														"src": "6597:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6604:3:10",
														"nodeType": "YulTypedName",
														"src": "6604:3:10",
														"type": ""
													}
												],
												"src": "6490:529:10"
											},
											{
												"body": {
													"nativeSrc": "7169:163:10",
													"nodeType": "YulBlock",
													"src": "7169:163:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7277:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7285:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7285:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr",
																	"nativeSrc": "7179:97:10",
																	"nodeType": "YulIdentifier",
																	"src": "7179:97:10"
																},
																"nativeSrc": "7179:110:10",
																"nodeType": "YulFunctionCall",
																"src": "7179:110:10"
															},
															"nativeSrc": "7179:110:10",
															"nodeType": "YulExpressionStatement",
															"src": "7179:110:10"
														},
														{
															"nativeSrc": "7298:28:10",
															"nodeType": "YulAssignment",
															"src": "7298:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7316:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7316:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7321:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7321:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7312:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7312:3:10"
																},
																"nativeSrc": "7312:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7312:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7298:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "7298:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr",
												"nativeSrc": "7025:307:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7142:6:10",
														"nodeType": "YulTypedName",
														"src": "7142:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7150:3:10",
														"nodeType": "YulTypedName",
														"src": "7150:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7158:10:10",
														"nodeType": "YulTypedName",
														"src": "7158:10:10",
														"type": ""
													}
												],
												"src": "7025:307:10"
											},
											{
												"body": {
													"nativeSrc": "7445:38:10",
													"nodeType": "YulBlock",
													"src": "7445:38:10",
													"statements": [
														{
															"nativeSrc": "7455:22:10",
															"nodeType": "YulAssignment",
															"src": "7455:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7467:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7467:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7472:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7472:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7463:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:10"
																},
																"nativeSrc": "7463:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7463:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7455:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7455:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7338:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7432:3:10",
														"nodeType": "YulTypedName",
														"src": "7432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7440:4:10",
														"nodeType": "YulTypedName",
														"src": "7440:4:10",
														"type": ""
													}
												],
												"src": "7338:145:10"
											},
											{
												"body": {
													"nativeSrc": "7749:800:10",
													"nodeType": "YulBlock",
													"src": "7749:800:10",
													"statements": [
														{
															"nativeSrc": "7759:100:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7759:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7853:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7853:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7773:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "7773:79:10"
																},
																"nativeSrc": "7773:86:10",
																"nodeType": "YulFunctionCall",
																"src": "7773:86:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7763:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7763:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7868:125:10",
															"nodeType": "YulAssignment",
															"src": "7868:125:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7981:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7981:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7986:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7986:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7875:105:10",
																	"nodeType": "YulIdentifier",
																	"src": "7875:105:10"
																},
																"nativeSrc": "7875:118:10",
																"nodeType": "YulFunctionCall",
																"src": "7875:118:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7868:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:10"
																}
															]
														},
														{
															"nativeSrc": "8002:103:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8002:103:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8099:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8099:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8017:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "8017:81:10"
																},
																"nativeSrc": "8017:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8017:88:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8006:7:10",
																	"nodeType": "YulTypedName",
																	"src": "8006:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8114:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8114:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8128:7:10",
																"nodeType": "YulIdentifier",
																"src": "8128:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8118:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8118:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8204:320:10",
																"nodeType": "YulBlock",
																"src": "8204:320:10",
																"statements": [
																	{
																		"nativeSrc": "8218:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8218:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8245:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8245:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8239:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8239:5:10"
																			},
																			"nativeSrc": "8239:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8239:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8222:13:10",
																				"nodeType": "YulTypedName",
																				"src": "8222:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8265:134:10",
																		"nodeType": "YulAssignment",
																		"src": "8265:134:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8380:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "8380:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8395:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8395:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr",
																				"nativeSrc": "8272:107:10",
																				"nodeType": "YulIdentifier",
																				"src": "8272:107:10"
																			},
																			"nativeSrc": "8272:127:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8272:127:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8265:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8265:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8412:102:10",
																		"nodeType": "YulAssignment",
																		"src": "8412:102:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8507:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8507:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "8422:84:10",
																				"nodeType": "YulIdentifier",
																				"src": "8422:84:10"
																			},
																			"nativeSrc": "8422:92:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8422:92:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8412:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8412:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8166:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8166:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8169:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8169:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8163:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8163:2:10"
																},
																"nativeSrc": "8163:13:10",
																"nodeType": "YulFunctionCall",
																"src": "8163:13:10"
															},
															"nativeSrc": "8144:380:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8177:18:10",
																"nodeType": "YulBlock",
																"src": "8177:18:10",
																"statements": [
																	{
																		"nativeSrc": "8179:14:10",
																		"nodeType": "YulAssignment",
																		"src": "8179:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8188:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "8188:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8191:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8191:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8184:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8184:3:10"
																			},
																			"nativeSrc": "8184:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8184:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8179:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8179:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8148:14:10",
																"nodeType": "YulBlock",
																"src": "8148:14:10",
																"statements": [
																	{
																		"nativeSrc": "8150:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8150:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8159:1:10",
																			"nodeType": "YulLiteral",
																			"src": "8159:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8154:1:10",
																				"nodeType": "YulTypedName",
																				"src": "8154:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8144:380:10"
														},
														{
															"nativeSrc": "8533:10:10",
															"nodeType": "YulAssignment",
															"src": "8533:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "8540:3:10",
																"nodeType": "YulIdentifier",
																"src": "8540:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8533:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7561:988:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7728:5:10",
														"nodeType": "YulTypedName",
														"src": "7728:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7735:3:10",
														"nodeType": "YulTypedName",
														"src": "7735:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7744:3:10",
														"nodeType": "YulTypedName",
														"src": "7744:3:10",
														"type": ""
													}
												],
												"src": "7561:988:10"
											},
											{
												"body": {
													"nativeSrc": "8767:289:10",
													"nodeType": "YulBlock",
													"src": "8767:289:10",
													"statements": [
														{
															"nativeSrc": "8777:26:10",
															"nodeType": "YulAssignment",
															"src": "8777:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8789:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8789:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8800:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8785:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:10"
																},
																"nativeSrc": "8785:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8785:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8824:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8824:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8835:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8835:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8820:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8820:3:10"
																		},
																		"nativeSrc": "8820:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8820:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8843:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8843:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8849:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8849:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8839:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8839:3:10"
																		},
																		"nativeSrc": "8839:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8839:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8813:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8813:6:10"
																},
																"nativeSrc": "8813:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8813:47:10"
															},
															"nativeSrc": "8813:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8813:47:10"
														},
														{
															"nativeSrc": "8869:180:10",
															"nodeType": "YulAssignment",
															"src": "8869:180:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9035:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9035:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9044:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9044:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8877:157:10",
																	"nodeType": "YulIdentifier",
																	"src": "8877:157:10"
																},
																"nativeSrc": "8877:172:10",
																"nodeType": "YulFunctionCall",
																"src": "8877:172:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8869:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8869:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8555:501:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8739:9:10",
														"nodeType": "YulTypedName",
														"src": "8739:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8751:6:10",
														"nodeType": "YulTypedName",
														"src": "8751:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8762:4:10",
														"nodeType": "YulTypedName",
														"src": "8762:4:10",
														"type": ""
													}
												],
												"src": "8555:501:10"
											},
											{
												"body": {
													"nativeSrc": "9090:152:10",
													"nodeType": "YulBlock",
													"src": "9090:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9107:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9110:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9110:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:10"
																},
																"nativeSrc": "9100:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9100:88:10"
															},
															"nativeSrc": "9100:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9100:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9204:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9204:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9207:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9197:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:10"
																},
																"nativeSrc": "9197:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9197:15:10"
															},
															"nativeSrc": "9197:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9197:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9228:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9231:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9231:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9221:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:10"
																},
																"nativeSrc": "9221:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9221:15:10"
															},
															"nativeSrc": "9221:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9221:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "9062:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9062:180:10"
											},
											{
												"body": {
													"nativeSrc": "9302:62:10",
													"nodeType": "YulBlock",
													"src": "9302:62:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9336:22:10",
																"nodeType": "YulBlock",
																"src": "9336:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "9338:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9338:16:10"
																			},
																			"nativeSrc": "9338:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9338:18:10"
																		},
																		"nativeSrc": "9338:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9338:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9325:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9325:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9332:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9332:1:10",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9322:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9322:2:10"
																		},
																		"nativeSrc": "9322:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:10"
																},
																"nativeSrc": "9315:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9315:20:10"
															},
															"nativeSrc": "9312:46:10",
															"nodeType": "YulIf",
															"src": "9312:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_Levels_$1534",
												"nativeSrc": "9248:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9295:5:10",
														"nodeType": "YulTypedName",
														"src": "9295:5:10",
														"type": ""
													}
												],
												"src": "9248:116:10"
											},
											{
												"body": {
													"nativeSrc": "9426:77:10",
													"nodeType": "YulBlock",
													"src": "9426:77:10",
													"statements": [
														{
															"nativeSrc": "9436:16:10",
															"nodeType": "YulAssignment",
															"src": "9436:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "9447:5:10",
																"nodeType": "YulIdentifier",
																"src": "9447:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9436:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9436:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9491:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9491:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Levels_$1534",
																	"nativeSrc": "9453:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "9453:37:10"
																},
																"nativeSrc": "9453:44:10",
																"nodeType": "YulFunctionCall",
																"src": "9453:44:10"
															},
															"nativeSrc": "9453:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "9453:44:10"
														}
													]
												},
												"name": "cleanup_t_enum$_Levels_$1534",
												"nativeSrc": "9370:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9408:5:10",
														"nodeType": "YulTypedName",
														"src": "9408:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9418:7:10",
														"nodeType": "YulTypedName",
														"src": "9418:7:10",
														"type": ""
													}
												],
												"src": "9370:133:10"
											},
											{
												"body": {
													"nativeSrc": "9578:64:10",
													"nodeType": "YulBlock",
													"src": "9578:64:10",
													"statements": [
														{
															"nativeSrc": "9588:48:10",
															"nodeType": "YulAssignment",
															"src": "9588:48:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9630:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9630:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Levels_$1534",
																	"nativeSrc": "9601:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "9601:28:10"
																},
																"nativeSrc": "9601:35:10",
																"nodeType": "YulFunctionCall",
																"src": "9601:35:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9588:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9588:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Levels_$1534_to_t_uint8",
												"nativeSrc": "9509:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9558:5:10",
														"nodeType": "YulTypedName",
														"src": "9558:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9568:9:10",
														"nodeType": "YulTypedName",
														"src": "9568:9:10",
														"type": ""
													}
												],
												"src": "9509:133:10"
											},
											{
												"body": {
													"nativeSrc": "9722:75:10",
													"nodeType": "YulBlock",
													"src": "9722:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9739:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9739:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9784:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9784:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Levels_$1534_to_t_uint8",
																			"nativeSrc": "9744:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "9744:39:10"
																		},
																		"nativeSrc": "9744:46:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9744:46:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9732:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9732:6:10"
																},
																"nativeSrc": "9732:59:10",
																"nodeType": "YulFunctionCall",
																"src": "9732:59:10"
															},
															"nativeSrc": "9732:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "9732:59:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_Levels_$1534_to_t_uint8_fromStack",
												"nativeSrc": "9648:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9710:5:10",
														"nodeType": "YulTypedName",
														"src": "9710:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9717:3:10",
														"nodeType": "YulTypedName",
														"src": "9717:3:10",
														"type": ""
													}
												],
												"src": "9648:149:10"
											},
											{
												"body": {
													"nativeSrc": "9910:133:10",
													"nodeType": "YulBlock",
													"src": "9910:133:10",
													"statements": [
														{
															"nativeSrc": "9920:26:10",
															"nodeType": "YulAssignment",
															"src": "9920:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9932:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9932:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9943:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9943:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9928:3:10"
																},
																"nativeSrc": "9928:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9928:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9920:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9920:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10009:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10009:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10022:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10022:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10033:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10033:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10018:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10018:3:10"
																		},
																		"nativeSrc": "10018:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10018:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Levels_$1534_to_t_uint8_fromStack",
																	"nativeSrc": "9956:52:10",
																	"nodeType": "YulIdentifier",
																	"src": "9956:52:10"
																},
																"nativeSrc": "9956:80:10",
																"nodeType": "YulFunctionCall",
																"src": "9956:80:10"
															},
															"nativeSrc": "9956:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "9956:80:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Levels_$1534__to_t_uint8__fromStack_reversed",
												"nativeSrc": "9803:240:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9882:9:10",
														"nodeType": "YulTypedName",
														"src": "9882:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9894:6:10",
														"nodeType": "YulTypedName",
														"src": "9894:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9905:4:10",
														"nodeType": "YulTypedName",
														"src": "9905:4:10",
														"type": ""
													}
												],
												"src": "9803:240:10"
											},
											{
												"body": {
													"nativeSrc": "10115:263:10",
													"nodeType": "YulBlock",
													"src": "10115:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10161:83:10",
																"nodeType": "YulBlock",
																"src": "10161:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10163:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10163:77:10"
																			},
																			"nativeSrc": "10163:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10163:79:10"
																		},
																		"nativeSrc": "10163:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10163:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10136:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10136:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10145:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10132:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10132:3:10"
																		},
																		"nativeSrc": "10132:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10128:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10128:3:10"
																},
																"nativeSrc": "10128:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10128:32:10"
															},
															"nativeSrc": "10125:119:10",
															"nodeType": "YulIf",
															"src": "10125:119:10"
														},
														{
															"nativeSrc": "10254:117:10",
															"nodeType": "YulBlock",
															"src": "10254:117:10",
															"statements": [
																{
																	"nativeSrc": "10269:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10269:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10283:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10283:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10273:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10273:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10298:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10298:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10333:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10333:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10344:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10344:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10329:3:10"
																				},
																				"nativeSrc": "10329:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10329:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10353:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10353:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10308:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10308:20:10"
																		},
																		"nativeSrc": "10308:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10308:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10298:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10298:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "10049:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10085:9:10",
														"nodeType": "YulTypedName",
														"src": "10085:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10096:7:10",
														"nodeType": "YulTypedName",
														"src": "10096:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10108:6:10",
														"nodeType": "YulTypedName",
														"src": "10108:6:10",
														"type": ""
													}
												],
												"src": "10049:329:10"
											},
											{
												"body": {
													"nativeSrc": "10482:124:10",
													"nodeType": "YulBlock",
													"src": "10482:124:10",
													"statements": [
														{
															"nativeSrc": "10492:26:10",
															"nodeType": "YulAssignment",
															"src": "10492:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10504:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10504:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10515:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10515:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10500:3:10"
																},
																"nativeSrc": "10500:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10500:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10492:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10492:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10572:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10572:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10585:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10585:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10596:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10596:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10581:3:10"
																		},
																		"nativeSrc": "10581:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10581:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10528:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10528:43:10"
																},
																"nativeSrc": "10528:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10528:71:10"
															},
															"nativeSrc": "10528:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10528:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10384:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10454:9:10",
														"nodeType": "YulTypedName",
														"src": "10454:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10466:6:10",
														"nodeType": "YulTypedName",
														"src": "10466:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10477:4:10",
														"nodeType": "YulTypedName",
														"src": "10477:4:10",
														"type": ""
													}
												],
												"src": "10384:222:10"
											},
											{
												"body": {
													"nativeSrc": "10666:56:10",
													"nodeType": "YulBlock",
													"src": "10666:56:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10700:16:10",
																"nodeType": "YulBlock",
																"src": "10700:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10709:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10709:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10712:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10712:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10702:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10702:6:10"
																			},
																			"nativeSrc": "10702:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10702:12:10"
																		},
																		"nativeSrc": "10702:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10702:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10689:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10689:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10696:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10696:1:10",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10686:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10686:2:10"
																		},
																		"nativeSrc": "10686:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10686:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10679:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10679:6:10"
																},
																"nativeSrc": "10679:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10679:20:10"
															},
															"nativeSrc": "10676:40:10",
															"nodeType": "YulIf",
															"src": "10676:40:10"
														}
													]
												},
												"name": "validator_revert_t_enum$_Levels_$1534",
												"nativeSrc": "10612:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10659:5:10",
														"nodeType": "YulTypedName",
														"src": "10659:5:10",
														"type": ""
													}
												],
												"src": "10612:110:10"
											},
											{
												"body": {
													"nativeSrc": "10791:98:10",
													"nodeType": "YulBlock",
													"src": "10791:98:10",
													"statements": [
														{
															"nativeSrc": "10801:29:10",
															"nodeType": "YulAssignment",
															"src": "10801:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10823:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10823:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10810:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "10810:12:10"
																},
																"nativeSrc": "10810:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10810:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10801:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10877:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10877:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Levels_$1534",
																	"nativeSrc": "10839:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "10839:37:10"
																},
																"nativeSrc": "10839:44:10",
																"nodeType": "YulFunctionCall",
																"src": "10839:44:10"
															},
															"nativeSrc": "10839:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "10839:44:10"
														}
													]
												},
												"name": "abi_decode_t_enum$_Levels_$1534",
												"nativeSrc": "10728:161:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10769:6:10",
														"nodeType": "YulTypedName",
														"src": "10769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10777:3:10",
														"nodeType": "YulTypedName",
														"src": "10777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10785:5:10",
														"nodeType": "YulTypedName",
														"src": "10785:5:10",
														"type": ""
													}
												],
												"src": "10728:161:10"
											},
											{
												"body": {
													"nativeSrc": "10972:274:10",
													"nodeType": "YulBlock",
													"src": "10972:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11018:83:10",
																"nodeType": "YulBlock",
																"src": "11018:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11020:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11020:77:10"
																			},
																			"nativeSrc": "11020:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11020:79:10"
																		},
																		"nativeSrc": "11020:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11020:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10993:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10993:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11002:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11002:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10989:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:10"
																		},
																		"nativeSrc": "10989:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10989:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11014:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10985:3:10"
																},
																"nativeSrc": "10985:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10985:32:10"
															},
															"nativeSrc": "10982:119:10",
															"nodeType": "YulIf",
															"src": "10982:119:10"
														},
														{
															"nativeSrc": "11111:128:10",
															"nodeType": "YulBlock",
															"src": "11111:128:10",
															"statements": [
																{
																	"nativeSrc": "11126:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11126:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11140:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11140:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11130:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11130:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11155:74:10",
																	"nodeType": "YulAssignment",
																	"src": "11155:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11201:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11201:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11212:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11212:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11197:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11197:3:10"
																				},
																				"nativeSrc": "11197:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11197:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11221:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11221:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Levels_$1534",
																			"nativeSrc": "11165:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "11165:31:10"
																		},
																		"nativeSrc": "11165:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11165:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11155:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11155:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Levels_$1534",
												"nativeSrc": "10895:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10942:9:10",
														"nodeType": "YulTypedName",
														"src": "10942:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10953:7:10",
														"nodeType": "YulTypedName",
														"src": "10953:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10965:6:10",
														"nodeType": "YulTypedName",
														"src": "10965:6:10",
														"type": ""
													}
												],
												"src": "10895:351:10"
											},
											{
												"body": {
													"nativeSrc": "11335:391:10",
													"nodeType": "YulBlock",
													"src": "11335:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11381:83:10",
																"nodeType": "YulBlock",
																"src": "11381:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11383:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11383:77:10"
																			},
																			"nativeSrc": "11383:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11383:79:10"
																		},
																		"nativeSrc": "11383:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11383:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11356:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11356:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11365:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11365:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11352:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11352:3:10"
																		},
																		"nativeSrc": "11352:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11352:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11377:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11377:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11348:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11348:3:10"
																},
																"nativeSrc": "11348:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11348:32:10"
															},
															"nativeSrc": "11345:119:10",
															"nodeType": "YulIf",
															"src": "11345:119:10"
														},
														{
															"nativeSrc": "11474:117:10",
															"nodeType": "YulBlock",
															"src": "11474:117:10",
															"statements": [
																{
																	"nativeSrc": "11489:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11489:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11503:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11503:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11493:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11493:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11518:63:10",
																	"nodeType": "YulAssignment",
																	"src": "11518:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11553:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11553:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11564:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11564:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11549:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11549:3:10"
																				},
																				"nativeSrc": "11549:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11549:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11573:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11573:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11528:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "11528:20:10"
																		},
																		"nativeSrc": "11528:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11528:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11518:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11518:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11601:118:10",
															"nodeType": "YulBlock",
															"src": "11601:118:10",
															"statements": [
																{
																	"nativeSrc": "11616:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11616:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11630:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11630:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11620:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11620:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11646:63:10",
																	"nodeType": "YulAssignment",
																	"src": "11646:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11681:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11681:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11692:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11692:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11677:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11677:3:10"
																				},
																				"nativeSrc": "11677:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11677:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11701:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11701:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11656:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "11656:20:10"
																		},
																		"nativeSrc": "11656:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11656:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11646:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11646:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11252:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11297:9:10",
														"nodeType": "YulTypedName",
														"src": "11297:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11308:7:10",
														"nodeType": "YulTypedName",
														"src": "11308:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11320:6:10",
														"nodeType": "YulTypedName",
														"src": "11320:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11328:6:10",
														"nodeType": "YulTypedName",
														"src": "11328:6:10",
														"type": ""
													}
												],
												"src": "11252:474:10"
											},
											{
												"body": {
													"nativeSrc": "11760:152:10",
													"nodeType": "YulBlock",
													"src": "11760:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11777:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11777:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11780:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11780:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11770:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11770:6:10"
																},
																"nativeSrc": "11770:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11770:88:10"
															},
															"nativeSrc": "11770:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11770:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11874:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11874:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11877:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11877:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11867:6:10"
																},
																"nativeSrc": "11867:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11867:15:10"
															},
															"nativeSrc": "11867:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11867:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11898:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11898:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11901:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11901:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11891:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11891:6:10"
																},
																"nativeSrc": "11891:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11891:15:10"
															},
															"nativeSrc": "11891:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11891:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11732:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11732:180:10"
											},
											{
												"body": {
													"nativeSrc": "11969:269:10",
													"nodeType": "YulBlock",
													"src": "11969:269:10",
													"statements": [
														{
															"nativeSrc": "11979:22:10",
															"nodeType": "YulAssignment",
															"src": "11979:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11993:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11993:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11999:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11999:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11989:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11989:3:10"
																},
																"nativeSrc": "11989:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11989:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11979:6:10"
																}
															]
														},
														{
															"nativeSrc": "12010:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12010:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12040:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12040:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12046:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12046:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12036:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12036:3:10"
																},
																"nativeSrc": "12036:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12036:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12014:18:10",
																	"nodeType": "YulTypedName",
																	"src": "12014:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12087:51:10",
																"nodeType": "YulBlock",
																"src": "12087:51:10",
																"statements": [
																	{
																		"nativeSrc": "12101:27:10",
																		"nodeType": "YulAssignment",
																		"src": "12101:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12115:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "12115:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12123:4:10",
																					"nodeType": "YulLiteral",
																					"src": "12123:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12111:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12111:3:10"
																			},
																			"nativeSrc": "12111:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12111:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12101:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12101:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12067:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "12067:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12060:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12060:6:10"
																},
																"nativeSrc": "12060:26:10",
																"nodeType": "YulFunctionCall",
																"src": "12060:26:10"
															},
															"nativeSrc": "12057:81:10",
															"nodeType": "YulIf",
															"src": "12057:81:10"
														},
														{
															"body": {
																"nativeSrc": "12190:42:10",
																"nodeType": "YulBlock",
																"src": "12190:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12204:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12204:16:10"
																			},
																			"nativeSrc": "12204:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12204:18:10"
																		},
																		"nativeSrc": "12204:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12204:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12154:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "12154:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12177:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12177:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12185:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12185:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12174:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "12174:2:10"
																		},
																		"nativeSrc": "12174:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12151:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12151:2:10"
																},
																"nativeSrc": "12151:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12151:38:10"
															},
															"nativeSrc": "12148:84:10",
															"nodeType": "YulIf",
															"src": "12148:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11918:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11953:4:10",
														"nodeType": "YulTypedName",
														"src": "11953:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11962:6:10",
														"nodeType": "YulTypedName",
														"src": "11962:6:10",
														"type": ""
													}
												],
												"src": "11918:320:10"
											},
											{
												"body": {
													"nativeSrc": "12350:63:10",
													"nodeType": "YulBlock",
													"src": "12350:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12372:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12372:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12380:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12380:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12368:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12368:3:10"
																		},
																		"nativeSrc": "12368:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12368:14:10"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f77656420746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "12384:21:10",
																		"nodeType": "YulLiteral",
																		"src": "12384:21:10",
																		"type": "",
																		"value": "Not allowed to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12361:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12361:6:10"
																},
																"nativeSrc": "12361:45:10",
																"nodeType": "YulFunctionCall",
																"src": "12361:45:10"
															},
															"nativeSrc": "12361:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "12361:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c",
												"nativeSrc": "12244:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12342:6:10",
														"nodeType": "YulTypedName",
														"src": "12342:6:10",
														"type": ""
													}
												],
												"src": "12244:169:10"
											},
											{
												"body": {
													"nativeSrc": "12565:220:10",
													"nodeType": "YulBlock",
													"src": "12565:220:10",
													"statements": [
														{
															"nativeSrc": "12575:74:10",
															"nodeType": "YulAssignment",
															"src": "12575:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12641:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12641:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12646:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12646:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12582:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12582:58:10"
																},
																"nativeSrc": "12582:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12582:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12575:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12575:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12747:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12747:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c",
																	"nativeSrc": "12658:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12658:88:10"
																},
																"nativeSrc": "12658:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12658:93:10"
															},
															"nativeSrc": "12658:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12658:93:10"
														},
														{
															"nativeSrc": "12760:19:10",
															"nodeType": "YulAssignment",
															"src": "12760:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12771:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12771:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12776:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12776:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12767:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12767:3:10"
																},
																"nativeSrc": "12767:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12767:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12760:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12760:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12419:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12553:3:10",
														"nodeType": "YulTypedName",
														"src": "12553:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12561:3:10",
														"nodeType": "YulTypedName",
														"src": "12561:3:10",
														"type": ""
													}
												],
												"src": "12419:366:10"
											},
											{
												"body": {
													"nativeSrc": "12962:248:10",
													"nodeType": "YulBlock",
													"src": "12962:248:10",
													"statements": [
														{
															"nativeSrc": "12972:26:10",
															"nodeType": "YulAssignment",
															"src": "12972:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12984:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12984:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12995:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12995:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12980:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12980:3:10"
																},
																"nativeSrc": "12980:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12980:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12972:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12972:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13019:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13030:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13030:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13015:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:10"
																		},
																		"nativeSrc": "13015:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13015:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13038:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13038:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13044:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13044:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13034:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13034:3:10"
																		},
																		"nativeSrc": "13034:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13034:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13008:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:10"
																},
																"nativeSrc": "13008:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13008:47:10"
															},
															"nativeSrc": "13008:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13008:47:10"
														},
														{
															"nativeSrc": "13064:139:10",
															"nodeType": "YulAssignment",
															"src": "13064:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13198:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13198:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13072:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13072:124:10"
																},
																"nativeSrc": "13072:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13072:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13064:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13064:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12791:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12942:9:10",
														"nodeType": "YulTypedName",
														"src": "12942:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12957:4:10",
														"nodeType": "YulTypedName",
														"src": "12957:4:10",
														"type": ""
													}
												],
												"src": "12791:419:10"
											},
											{
												"body": {
													"nativeSrc": "13322:63:10",
													"nodeType": "YulBlock",
													"src": "13322:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13344:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13344:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13352:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13340:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13340:3:10"
																		},
																		"nativeSrc": "13340:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13340:14:10"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f77656420746f206275726e",
																		"kind": "string",
																		"nativeSrc": "13356:21:10",
																		"nodeType": "YulLiteral",
																		"src": "13356:21:10",
																		"type": "",
																		"value": "Not allowed to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13333:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13333:6:10"
																},
																"nativeSrc": "13333:45:10",
																"nodeType": "YulFunctionCall",
																"src": "13333:45:10"
															},
															"nativeSrc": "13333:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "13333:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9",
												"nativeSrc": "13216:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13314:6:10",
														"nodeType": "YulTypedName",
														"src": "13314:6:10",
														"type": ""
													}
												],
												"src": "13216:169:10"
											},
											{
												"body": {
													"nativeSrc": "13537:220:10",
													"nodeType": "YulBlock",
													"src": "13537:220:10",
													"statements": [
														{
															"nativeSrc": "13547:74:10",
															"nodeType": "YulAssignment",
															"src": "13547:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13613:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13613:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13618:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13618:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13554:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13554:58:10"
																},
																"nativeSrc": "13554:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13554:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13547:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13547:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13719:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13719:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9",
																	"nativeSrc": "13630:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13630:88:10"
																},
																"nativeSrc": "13630:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13630:93:10"
															},
															"nativeSrc": "13630:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13630:93:10"
														},
														{
															"nativeSrc": "13732:19:10",
															"nodeType": "YulAssignment",
															"src": "13732:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13743:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13743:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13748:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13748:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13739:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13739:3:10"
																},
																"nativeSrc": "13739:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13739:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13732:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13732:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13391:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13525:3:10",
														"nodeType": "YulTypedName",
														"src": "13525:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13533:3:10",
														"nodeType": "YulTypedName",
														"src": "13533:3:10",
														"type": ""
													}
												],
												"src": "13391:366:10"
											},
											{
												"body": {
													"nativeSrc": "13934:248:10",
													"nodeType": "YulBlock",
													"src": "13934:248:10",
													"statements": [
														{
															"nativeSrc": "13944:26:10",
															"nodeType": "YulAssignment",
															"src": "13944:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13956:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13956:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13967:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13967:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13952:3:10"
																},
																"nativeSrc": "13952:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13952:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13944:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13944:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13991:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13991:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14002:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14002:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13987:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13987:3:10"
																		},
																		"nativeSrc": "13987:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13987:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14010:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14010:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14016:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14016:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14006:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14006:3:10"
																		},
																		"nativeSrc": "14006:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14006:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13980:6:10"
																},
																"nativeSrc": "13980:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13980:47:10"
															},
															"nativeSrc": "13980:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13980:47:10"
														},
														{
															"nativeSrc": "14036:139:10",
															"nodeType": "YulAssignment",
															"src": "14036:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14170:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14170:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14044:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14044:124:10"
																},
																"nativeSrc": "14044:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14044:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14036:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14036:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13763:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13914:9:10",
														"nodeType": "YulTypedName",
														"src": "13914:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13929:4:10",
														"nodeType": "YulTypedName",
														"src": "13929:4:10",
														"type": ""
													}
												],
												"src": "13763:419:10"
											},
											{
												"body": {
													"nativeSrc": "14294:68:10",
													"nodeType": "YulBlock",
													"src": "14294:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14316:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14316:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14324:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14324:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14312:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14312:3:10"
																		},
																		"nativeSrc": "14312:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14312:14:10"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f77656420746f20736574206c6576656c",
																		"kind": "string",
																		"nativeSrc": "14328:26:10",
																		"nodeType": "YulLiteral",
																		"src": "14328:26:10",
																		"type": "",
																		"value": "Not allowed to set level"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14305:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14305:6:10"
																},
																"nativeSrc": "14305:50:10",
																"nodeType": "YulFunctionCall",
																"src": "14305:50:10"
															},
															"nativeSrc": "14305:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "14305:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86",
												"nativeSrc": "14188:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14286:6:10",
														"nodeType": "YulTypedName",
														"src": "14286:6:10",
														"type": ""
													}
												],
												"src": "14188:174:10"
											},
											{
												"body": {
													"nativeSrc": "14514:220:10",
													"nodeType": "YulBlock",
													"src": "14514:220:10",
													"statements": [
														{
															"nativeSrc": "14524:74:10",
															"nodeType": "YulAssignment",
															"src": "14524:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14590:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14590:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14595:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14595:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14531:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14531:58:10"
																},
																"nativeSrc": "14531:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14531:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14524:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14524:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14696:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14696:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86",
																	"nativeSrc": "14607:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14607:88:10"
																},
																"nativeSrc": "14607:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14607:93:10"
															},
															"nativeSrc": "14607:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14607:93:10"
														},
														{
															"nativeSrc": "14709:19:10",
															"nodeType": "YulAssignment",
															"src": "14709:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14720:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14720:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14725:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14725:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14716:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14716:3:10"
																},
																"nativeSrc": "14716:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14716:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14709:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14709:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14368:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14502:3:10",
														"nodeType": "YulTypedName",
														"src": "14502:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14510:3:10",
														"nodeType": "YulTypedName",
														"src": "14510:3:10",
														"type": ""
													}
												],
												"src": "14368:366:10"
											},
											{
												"body": {
													"nativeSrc": "14911:248:10",
													"nodeType": "YulBlock",
													"src": "14911:248:10",
													"statements": [
														{
															"nativeSrc": "14921:26:10",
															"nodeType": "YulAssignment",
															"src": "14921:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14933:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14933:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14944:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14944:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14929:3:10"
																},
																"nativeSrc": "14929:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14929:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14921:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14921:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14968:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14968:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14979:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14979:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14964:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14964:3:10"
																		},
																		"nativeSrc": "14964:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14964:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14987:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14987:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14993:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14993:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:10"
																		},
																		"nativeSrc": "14983:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14983:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14957:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14957:6:10"
																},
																"nativeSrc": "14957:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14957:47:10"
															},
															"nativeSrc": "14957:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14957:47:10"
														},
														{
															"nativeSrc": "15013:139:10",
															"nodeType": "YulAssignment",
															"src": "15013:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15147:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15147:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15021:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15021:124:10"
																},
																"nativeSrc": "15021:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15021:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15013:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15013:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14740:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14891:9:10",
														"nodeType": "YulTypedName",
														"src": "14891:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14906:4:10",
														"nodeType": "YulTypedName",
														"src": "14906:4:10",
														"type": ""
													}
												],
												"src": "14740:419:10"
											},
											{
												"body": {
													"nativeSrc": "15319:288:10",
													"nodeType": "YulBlock",
													"src": "15319:288:10",
													"statements": [
														{
															"nativeSrc": "15329:26:10",
															"nodeType": "YulAssignment",
															"src": "15329:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15341:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15341:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15352:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15352:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15337:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15337:3:10"
																},
																"nativeSrc": "15337:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15337:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15329:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15329:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15409:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15409:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15422:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15422:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15433:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15433:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15418:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15418:3:10"
																		},
																		"nativeSrc": "15418:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15418:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15365:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15365:43:10"
																},
																"nativeSrc": "15365:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15365:71:10"
															},
															"nativeSrc": "15365:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15365:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15490:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15490:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15503:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15503:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15514:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15514:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15499:3:10"
																		},
																		"nativeSrc": "15499:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15499:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15446:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15446:43:10"
																},
																"nativeSrc": "15446:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15446:72:10"
															},
															"nativeSrc": "15446:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15446:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15572:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15572:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15585:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15585:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15596:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15596:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15581:3:10"
																		},
																		"nativeSrc": "15581:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15581:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15528:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15528:43:10"
																},
																"nativeSrc": "15528:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15528:72:10"
															},
															"nativeSrc": "15528:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15528:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15165:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15275:9:10",
														"nodeType": "YulTypedName",
														"src": "15275:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15287:6:10",
														"nodeType": "YulTypedName",
														"src": "15287:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15295:6:10",
														"nodeType": "YulTypedName",
														"src": "15295:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15303:6:10",
														"nodeType": "YulTypedName",
														"src": "15303:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15314:4:10",
														"nodeType": "YulTypedName",
														"src": "15314:4:10",
														"type": ""
													}
												],
												"src": "15165:442:10"
											},
											{
												"body": {
													"nativeSrc": "15641:152:10",
													"nodeType": "YulBlock",
													"src": "15641:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15658:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15658:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15661:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15661:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15651:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15651:6:10"
																},
																"nativeSrc": "15651:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15651:88:10"
															},
															"nativeSrc": "15651:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15651:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15755:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15758:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15758:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15748:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15748:6:10"
																},
																"nativeSrc": "15748:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15748:15:10"
															},
															"nativeSrc": "15748:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15748:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15779:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15779:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15782:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15782:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15772:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15772:6:10"
																},
																"nativeSrc": "15772:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15772:15:10"
															},
															"nativeSrc": "15772:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15772:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15613:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15613:180:10"
											},
											{
												"body": {
													"nativeSrc": "15843:147:10",
													"nodeType": "YulBlock",
													"src": "15843:147:10",
													"statements": [
														{
															"nativeSrc": "15853:25:10",
															"nodeType": "YulAssignment",
															"src": "15853:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15876:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15876:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15858:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15858:17:10"
																},
																"nativeSrc": "15858:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15858:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15853:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15853:1:10"
																}
															]
														},
														{
															"nativeSrc": "15887:25:10",
															"nodeType": "YulAssignment",
															"src": "15887:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15910:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15910:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15892:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15892:17:10"
																},
																"nativeSrc": "15892:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15892:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15887:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15887:1:10"
																}
															]
														},
														{
															"nativeSrc": "15921:16:10",
															"nodeType": "YulAssignment",
															"src": "15921:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15932:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15932:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15935:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15935:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15928:3:10"
																},
																"nativeSrc": "15928:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15928:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15921:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15961:22:10",
																"nodeType": "YulBlock",
																"src": "15961:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15963:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15963:16:10"
																			},
																			"nativeSrc": "15963:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15963:18:10"
																		},
																		"nativeSrc": "15963:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15963:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15953:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15953:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15956:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15950:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15950:2:10"
																},
																"nativeSrc": "15950:10:10",
																"nodeType": "YulFunctionCall",
																"src": "15950:10:10"
															},
															"nativeSrc": "15947:36:10",
															"nodeType": "YulIf",
															"src": "15947:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15799:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15830:1:10",
														"nodeType": "YulTypedName",
														"src": "15830:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15833:1:10",
														"nodeType": "YulTypedName",
														"src": "15833:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15839:3:10",
														"nodeType": "YulTypedName",
														"src": "15839:3:10",
														"type": ""
													}
												],
												"src": "15799:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Recipe.ResourceAmount -> struct Recipe.ResourceAmount\n    function abi_encode_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // resourceContractAddr\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Recipe.ResourceAmount[] -> struct Recipe.ResourceAmount[]\n    function abi_encode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_ResourceAmount_$1539_memory_ptr_to_t_struct$_ResourceAmount_$1539_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Levels_$1534(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Levels_$1534(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Levels_$1534(value)\n    }\n\n    function convert_t_enum$_Levels_$1534_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Levels_$1534(value)\n    }\n\n    function abi_encode_t_enum$_Levels_$1534_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Levels_$1534_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Levels_$1534__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Levels_$1534_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_Levels_$1534(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Levels_$1534(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Levels_$1534(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Levels_$1534(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Levels_$1534(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed to set level\")\n\n    }\n\n    function abi_encode_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610140575f3560e01c80636fd5ae15116100b657806395d89b411161007a57806395d89b4114610368578063a9059cbb14610386578063bd5546be146103b6578063dd62ed3e146103d2578063f2fde38b14610402578063f9e05c6d1461041e57610140565b80636fd5ae15146102d457806370a08231146102f2578063715018a614610322578063737d6a6c1461032c5780638da5cb5b1461034a57610140565b8063313ce56711610108578063313ce5671461021157806340c10f191461022f57806342966c681461024b5780634836149014610267578063635a4cc51461028557806363a2b02b146102b657610140565b806306fdde0314610144578063095ea7b3146101625780630d9ce8041461019257806318160ddd146101c357806323b872dd146101e1575b5f80fd5b61014c61043c565b6040516101599190611457565b60405180910390f35b61017c60048036038101906101779190611508565b6104cc565b6040516101899190611560565b60405180910390f35b6101ac60048036038101906101a79190611579565b6104ee565b6040516101ba9291906115c2565b60405180910390f35b6101cb61053c565b6040516101d891906115e9565b60405180910390f35b6101fb60048036038101906101f69190611602565b610545565b6040516102089190611560565b60405180910390f35b610219610573565b604051610226919061166d565b60405180910390f35b61024960048036038101906102449190611508565b61057b565b005b61026560048036038101906102609190611579565b610618565b005b61026f6106b4565b60405161027c9190611779565b60405180910390f35b61029f600480360381019061029a9190611579565b61076e565b6040516102ad9291906115c2565b60405180910390f35b6102be6107bc565b6040516102cb9190611560565b60405180910390f35b6102dc6107f8565b6040516102e9919061180c565b60405180910390f35b61030c60048036038101906103079190611825565b61080b565b60405161031991906115e9565b60405180910390f35b61032a61081c565b005b61033461082f565b6040516103419190611779565b60405180910390f35b6103526108e9565b60405161035f9190611850565b60405180910390f35b610370610911565b60405161037d9190611457565b60405180910390f35b6103a0600480360381019061039b9190611508565b6109a1565b6040516103ad9190611560565b60405180910390f35b6103d060048036038101906103cb919061188c565b6109b4565b005b6103ec60048036038101906103e791906118b7565b610a70565b6040516103f991906115e9565b60405180910390f35b61041c60048036038101906104179190611825565b610af2565b005b610426610b76565b6040516104339190611850565b60405180910390f35b60606003805461044b90611922565b80601f016020809104026020016040519081016040528092919081815260200182805461047790611922565b80156104c25780601f10610499576101008083540402835291602001916104c2565b820191905f5260205f20905b8154815290600101906020018083116104a557829003601f168201915b5050505050905090565b5f806104d6610b9b565b90506104e3818585610ba2565b600191505092915050565b600781815481106104fd575f80fd5b905f5260205f2090600202015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f600254905090565b5f8061054f610b9b565b905061055c858285610bb4565b610567858585610c46565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106019061199c565b60405180910390fd5b6106148282610d36565b5050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90611a04565b60405180910390fd5b6106b13382610db5565b50565b60606007805480602002602001604051908101604052809291908181526020015f905b82821015610765578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200190600101906106d7565b50505050905090565b6008818154811061077d575f80fd5b905f5260205f2090600202015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f8060048111156107d0576107cf611799565b5b600660149054906101000a900460ff1660048111156107f2576107f1611799565b5b14905090565b600660149054906101000a900460ff1681565b5f61081582610e34565b9050919050565b610824610e79565b61082d5f610f00565b565b60606008805480602002602001604051908101604052809291908181526020015f905b828210156108e0578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610852565b50505050905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461092090611922565b80601f016020809104026020016040519081016040528092919081815260200182805461094c90611922565b80156109975780601f1061096e57610100808354040283529160200191610997565b820191905f5260205f20905b81548152906001019060200180831161097a57829003601f168201915b5050505050905090565b5f6109ac8383610fc3565b905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611a6c565b60405180910390fd5b80600660146101000a81548160ff02191690836004811115610a6857610a67611799565b5b021790555050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610afa610e79565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6a575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b619190611850565b60405180910390fd5b610b7381610f00565b50565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610baf8383836001610fe5565b505050565b5f610bbf8484610a70565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c405781811015610c31578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c2893929190611a8a565b60405180910390fd5b610c3f84848484035f610fe5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cb6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cad9190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d26575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d1d9190611850565b60405180910390fd5b610d318383836111b4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d9d9190611850565b60405180910390fd5b610db15f83836111b4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e25575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e1c9190611850565b60405180910390fd5b610e30825f836111b4565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610e81610b9b565b73ffffffffffffffffffffffffffffffffffffffff16610e9f6108e9565b73ffffffffffffffffffffffffffffffffffffffff1614610efe57610ec2610b9b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef59190611850565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80610fcd610b9b565b9050610fda818585610c46565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611055575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161104c9190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c5575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110bc9190611850565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111ae578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111a591906115e9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611204578060025f8282546111f89190611aec565b925050819055506112d2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561128d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128493929190611a8a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611319578060025f8282540392505081905550611363565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c091906115e9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156114045780820151818401526020810190506113e9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611429826113cd565b61143381856113d7565b93506114438185602086016113e7565b61144c8161140f565b840191505092915050565b5f6020820190508181035f83015261146f818461141f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114a48261147b565b9050919050565b6114b48161149a565b81146114be575f80fd5b50565b5f813590506114cf816114ab565b92915050565b5f819050919050565b6114e7816114d5565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f806040838503121561151e5761151d611477565b5b5f61152b858286016114c1565b925050602061153c858286016114f4565b9150509250929050565b5f8115159050919050565b61155a81611546565b82525050565b5f6020820190506115735f830184611551565b92915050565b5f6020828403121561158e5761158d611477565b5b5f61159b848285016114f4565b91505092915050565b6115ad8161149a565b82525050565b6115bc816114d5565b82525050565b5f6040820190506115d55f8301856115a4565b6115e260208301846115b3565b9392505050565b5f6020820190506115fc5f8301846115b3565b92915050565b5f805f6060848603121561161957611618611477565b5b5f611626868287016114c1565b9350506020611637868287016114c1565b9250506040611648868287016114f4565b9150509250925092565b5f60ff82169050919050565b61166781611652565b82525050565b5f6020820190506116805f83018461165e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116b88161149a565b82525050565b6116c7816114d5565b82525050565b604082015f8201516116e15f8501826116af565b5060208201516116f460208501826116be565b50505050565b5f61170583836116cd565b60408301905092915050565b5f602082019050919050565b5f61172782611686565b6117318185611690565b935061173c836116a0565b805f5b8381101561176c57815161175388826116fa565b975061175e83611711565b92505060018101905061173f565b5085935050505092915050565b5f6020820190508181035f830152611791818461171d565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106117d7576117d6611799565b5b50565b5f8190506117e7826117c6565b919050565b5f6117f6826117da565b9050919050565b611806816117ec565b82525050565b5f60208201905061181f5f8301846117fd565b92915050565b5f6020828403121561183a57611839611477565b5b5f611847848285016114c1565b91505092915050565b5f6020820190506118635f8301846115a4565b92915050565b60058110611875575f80fd5b50565b5f8135905061188681611869565b92915050565b5f602082840312156118a1576118a0611477565b5b5f6118ae84828501611878565b91505092915050565b5f80604083850312156118cd576118cc611477565b5b5f6118da858286016114c1565b92505060206118eb858286016114c1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061193957607f821691505b60208210810361194c5761194b6118f5565b5b50919050565b7f4e6f7420616c6c6f77656420746f206d696e74000000000000000000000000005f82015250565b5f6119866013836113d7565b915061199182611952565b602082019050919050565b5f6020820190508181035f8301526119b38161197a565b9050919050565b7f4e6f7420616c6c6f77656420746f206275726e000000000000000000000000005f82015250565b5f6119ee6013836113d7565b91506119f9826119ba565b602082019050919050565b5f6020820190508181035f830152611a1b816119e2565b9050919050565b7f4e6f7420616c6c6f77656420746f20736574206c6576656c00000000000000005f82015250565b5f611a566018836113d7565b9150611a6182611a22565b602082019050919050565b5f6020820190508181035f830152611a8381611a4a565b9050919050565b5f606082019050611a9d5f8301866115a4565b611aaa60208301856115b3565b611ab760408301846115b3565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611af6826114d5565b9150611b01836114d5565b9250828201905080821115611b1957611b18611abf565b5b9291505056fea264697066735822122097e9d2a8afd09ce5671f5539aa4478ca37d36f71fffa25866f9ce4a46b722e6764736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FD5AE15 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xBD5546BE EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xF9E05C6D EQ PUSH2 0x41E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FD5AE15 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x737D6A6C EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x48361490 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x635A4CC5 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x63A2B02B EQ PUSH2 0x2B6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xD9CE804 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x44B SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x477 SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x499 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D6 PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH2 0x4E3 DUP2 DUP6 DUP6 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x54F PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH2 0x55C DUP6 DUP3 DUP6 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x567 DUP6 DUP6 DUP6 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP3 DUP3 PUSH2 0xD36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 CALLER DUP3 PUSH2 0xDB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x765 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x77D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D0 JUMPI PUSH2 0x7CF PUSH2 0x1799 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x815 DUP3 PUSH2 0xE34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x824 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x82D PUSH0 PUSH2 0xF00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8E0 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x852 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x920 SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94C SWAP1 PUSH2 0x1922 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x997 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x96E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x997 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9AC DUP4 DUP4 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3A SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA PUSH2 0xE79 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB73 DUP2 PUSH2 0xF00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBAF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBF DUP5 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC40 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFE5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD31 DUP4 DUP4 DUP4 PUSH2 0x11B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB1 PUSH0 DUP4 DUP4 PUSH2 0x11B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE25 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1C SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE30 DUP3 PUSH0 DUP4 PUSH2 0x11B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE81 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9F PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFE JUMPI PUSH2 0xEC2 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFCD PUSH2 0xB9B JUMP JUMPDEST SWAP1 POP PUSH2 0xFDA DUP2 DUP6 DUP6 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1055 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11AE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1204 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12D2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x128D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1284 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1319 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1363 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1404 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13E9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1429 DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x1433 DUP2 DUP6 PUSH2 0x13D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1443 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x140F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x146F DUP2 DUP5 PUSH2 0x141F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14A4 DUP3 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149A JUMP JUMPDEST DUP2 EQ PUSH2 0x14BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CF DUP2 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151E JUMPI PUSH2 0x151D PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152B DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153C DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155A DUP2 PUSH2 0x1546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1573 PUSH0 DUP4 ADD DUP5 PUSH2 0x1551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159B DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15AD DUP2 PUSH2 0x149A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15BC DUP2 PUSH2 0x14D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15D5 PUSH0 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FC PUSH0 DUP4 ADD DUP5 PUSH2 0x15B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1626 DUP7 DUP3 DUP8 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1637 DUP7 DUP3 DUP8 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1648 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1667 DUP2 PUSH2 0x1652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1680 PUSH0 DUP4 ADD DUP5 PUSH2 0x165E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x149A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C7 DUP2 PUSH2 0x14D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16E1 PUSH0 DUP6 ADD DUP3 PUSH2 0x16AF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16F4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1705 DUP4 DUP4 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1727 DUP3 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x1731 DUP2 DUP6 PUSH2 0x1690 JUMP JUMPDEST SWAP4 POP PUSH2 0x173C DUP4 PUSH2 0x16A0 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176C JUMPI DUP2 MLOAD PUSH2 0x1753 DUP9 DUP3 PUSH2 0x16FA JUMP JUMPDEST SWAP8 POP PUSH2 0x175E DUP4 PUSH2 0x1711 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x173F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1791 DUP2 DUP5 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x17E7 DUP3 PUSH2 0x17C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F6 DUP3 PUSH2 0x17DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1806 DUP2 PUSH2 0x17EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181F PUSH0 DUP4 ADD DUP5 PUSH2 0x17FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1847 DUP5 DUP3 DUP6 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1863 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1875 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1886 DUP2 PUSH2 0x1869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A1 JUMPI PUSH2 0x18A0 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18AE DUP5 DUP3 DUP6 ADD PUSH2 0x1878 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x1477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18DA DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18EB DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1939 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x18F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F206D696E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1986 PUSH1 0x13 DUP4 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1991 DUP3 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B3 DUP2 PUSH2 0x197A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F206275726E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19EE PUSH1 0x13 DUP4 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F9 DUP3 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1B DUP2 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F20736574206C6576656C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A56 PUSH1 0x18 DUP4 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A61 DUP3 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A83 DUP2 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A9D PUSH0 DUP4 ADD DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1AAA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x1AB7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF6 DUP3 PUSH2 0x14D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B01 DUP4 PUSH2 0x14D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xE9 0xD2 0xA8 0xAF 0xD0 SWAP13 0xE5 PUSH8 0x1F5539AA4478CA37 0xD3 PUSH16 0x71FFFA25866F9CE4A46B722E6764736F PUSH13 0x63430008170033000000000000 ",
							"sourceMap": "233:2758:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;596:38:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1886:164:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2121:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2720:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1552:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2557:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2874:115:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2356:127:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1655:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;525:40:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;596:38:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;1886:164:9:-;1967:25;;;;;;;;;;;1953:39;;:10;:39;;;1945:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:17;2032:2;2036:6;2026:5;:17::i;:::-;1886:164;;:::o;2121:160::-;2190:25;;;;;;;;;;;2176:39;;:10;:39;;;2168:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2249:25;2255:10;2267:6;2249:5;:25::i;:::-;2121:160;:::o;2720:113::-;2770:23;2812:14;2805:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:113;:::o;640:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1552:97::-;1597:4;1629:13;1620:22;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;1612:30;;1552:97;:::o;571:19::-;;;;;;;;;;;;;:::o;2557:123::-;2623:7;2649:24;2665:7;2649:15;:24::i;:::-;2642:31;;2557:123;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2874:115:9:-;2925:23;2967:15;2960:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2874:115;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2356:127:9:-;2427:4;2450:26;2465:2;2469:6;2450:14;:26::i;:::-;2443:33;;2356:127;;;;:::o;1655:156::-;1726:25;;;;;;;;;;;1712:39;;:10;:39;;;1704:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1798:6;1790:5;;:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1655:156;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;525:40:9:-;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:329::-;3505:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:119;;;3560:79;;:::i;:::-;3522:119;3680:1;3705:53;3750:7;3741:6;3730:9;3726:22;3705:53;:::i;:::-;3695:63;;3651:117;3446:329;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:::-;3992:24;4010:5;3992:24;:::i;:::-;3987:3;3980:37;3905:118;;:::o;4029:332::-;4150:4;4188:2;4177:9;4173:18;4165:26;;4201:71;4269:1;4258:9;4254:17;4245:6;4201:71;:::i;:::-;4282:72;4350:2;4339:9;4335:18;4326:6;4282:72;:::i;:::-;4029:332;;;;;:::o;4367:222::-;4460:4;4498:2;4487:9;4483:18;4475:26;;4511:71;4579:1;4568:9;4564:17;4555:6;4511:71;:::i;:::-;4367:222;;;;:::o;4595:619::-;4672:6;4680;4688;4737:2;4725:9;4716:7;4712:23;4708:32;4705:119;;;4743:79;;:::i;:::-;4705:119;4863:1;4888:53;4933:7;4924:6;4913:9;4909:22;4888:53;:::i;:::-;4878:63;;4834:117;4990:2;5016:53;5061:7;5052:6;5041:9;5037:22;5016:53;:::i;:::-;5006:63;;4961:118;5118:2;5144:53;5189:7;5180:6;5169:9;5165:22;5144:53;:::i;:::-;5134:63;;5089:118;4595:619;;;;;:::o;5220:86::-;5255:7;5295:4;5288:5;5284:16;5273:27;;5220:86;;;:::o;5312:112::-;5395:22;5411:5;5395:22;:::i;:::-;5390:3;5383:35;5312:112;;:::o;5430:214::-;5519:4;5557:2;5546:9;5542:18;5534:26;;5570:67;5634:1;5623:9;5619:17;5610:6;5570:67;:::i;:::-;5430:214;;;;:::o;5650:146::-;5749:6;5783:5;5777:12;5767:22;;5650:146;;;:::o;5802:216::-;5933:11;5967:6;5962:3;5955:19;6007:4;6002:3;5998:14;5983:29;;5802:216;;;;:::o;6024:164::-;6123:4;6146:3;6138:11;;6176:4;6171:3;6167:14;6159:22;;6024:164;;;:::o;6194:108::-;6271:24;6289:5;6271:24;:::i;:::-;6266:3;6259:37;6194:108;;:::o;6308:::-;6385:24;6403:5;6385:24;:::i;:::-;6380:3;6373:37;6308:108;;:::o;6490:529::-;6641:4;6636:3;6632:14;6744:4;6737:5;6733:16;6727:23;6763:63;6820:4;6815:3;6811:14;6797:12;6763:63;:::i;:::-;6656:180;6920:4;6913:5;6909:16;6903:23;6939:63;6996:4;6991:3;6987:14;6973:12;6939:63;:::i;:::-;6846:166;6610:409;6490:529;;:::o;7025:307::-;7158:10;7179:110;7285:3;7277:6;7179:110;:::i;:::-;7321:4;7316:3;7312:14;7298:28;;7025:307;;;;:::o;7338:145::-;7440:4;7472;7467:3;7463:14;7455:22;;7338:145;;;:::o;7561:988::-;7744:3;7773:86;7853:5;7773:86;:::i;:::-;7875:118;7986:6;7981:3;7875:118;:::i;:::-;7868:125;;8017:88;8099:5;8017:88;:::i;:::-;8128:7;8159:1;8144:380;8169:6;8166:1;8163:13;8144:380;;;8245:6;8239:13;8272:127;8395:3;8380:13;8272:127;:::i;:::-;8265:134;;8422:92;8507:6;8422:92;:::i;:::-;8412:102;;8204:320;8191:1;8188;8184:9;8179:14;;8144:380;;;8148:14;8540:3;8533:10;;7749:800;;;7561:988;;;;:::o;8555:501::-;8762:4;8800:2;8789:9;8785:18;8777:26;;8849:9;8843:4;8839:20;8835:1;8824:9;8820:17;8813:47;8877:172;9044:4;9035:6;8877:172;:::i;:::-;8869:180;;8555:501;;;;:::o;9062:180::-;9110:77;9107:1;9100:88;9207:4;9204:1;9197:15;9231:4;9228:1;9221:15;9248:116;9332:1;9325:5;9322:12;9312:46;;9338:18;;:::i;:::-;9312:46;9248:116;:::o;9370:133::-;9418:7;9447:5;9436:16;;9453:44;9491:5;9453:44;:::i;:::-;9370:133;;;:::o;9509:::-;9568:9;9601:35;9630:5;9601:35;:::i;:::-;9588:48;;9509:133;;;:::o;9648:149::-;9744:46;9784:5;9744:46;:::i;:::-;9739:3;9732:59;9648:149;;:::o;9803:240::-;9905:4;9943:2;9932:9;9928:18;9920:26;;9956:80;10033:1;10022:9;10018:17;10009:6;9956:80;:::i;:::-;9803:240;;;;:::o;10049:329::-;10108:6;10157:2;10145:9;10136:7;10132:23;10128:32;10125:119;;;10163:79;;:::i;:::-;10125:119;10283:1;10308:53;10353:7;10344:6;10333:9;10329:22;10308:53;:::i;:::-;10298:63;;10254:117;10049:329;;;;:::o;10384:222::-;10477:4;10515:2;10504:9;10500:18;10492:26;;10528:71;10596:1;10585:9;10581:17;10572:6;10528:71;:::i;:::-;10384:222;;;;:::o;10612:110::-;10696:1;10689:5;10686:12;10676:40;;10712:1;10709;10702:12;10676:40;10612:110;:::o;10728:161::-;10785:5;10823:6;10810:20;10801:29;;10839:44;10877:5;10839:44;:::i;:::-;10728:161;;;;:::o;10895:351::-;10965:6;11014:2;11002:9;10993:7;10989:23;10985:32;10982:119;;;11020:79;;:::i;:::-;10982:119;11140:1;11165:64;11221:7;11212:6;11201:9;11197:22;11165:64;:::i;:::-;11155:74;;11111:128;10895:351;;;;:::o;11252:474::-;11320:6;11328;11377:2;11365:9;11356:7;11352:23;11348:32;11345:119;;;11383:79;;:::i;:::-;11345:119;11503:1;11528:53;11573:7;11564:6;11553:9;11549:22;11528:53;:::i;:::-;11518:63;;11474:117;11630:2;11656:53;11701:7;11692:6;11681:9;11677:22;11656:53;:::i;:::-;11646:63;;11601:118;11252:474;;;;;:::o;11732:180::-;11780:77;11777:1;11770:88;11877:4;11874:1;11867:15;11901:4;11898:1;11891:15;11918:320;11962:6;11999:1;11993:4;11989:12;11979:22;;12046:1;12040:4;12036:12;12067:18;12057:81;;12123:4;12115:6;12111:17;12101:27;;12057:81;12185:2;12177:6;12174:14;12154:18;12151:38;12148:84;;12204:18;;:::i;:::-;12148:84;11969:269;11918:320;;;:::o;12244:169::-;12384:21;12380:1;12372:6;12368:14;12361:45;12244:169;:::o;12419:366::-;12561:3;12582:67;12646:2;12641:3;12582:67;:::i;:::-;12575:74;;12658:93;12747:3;12658:93;:::i;:::-;12776:2;12771:3;12767:12;12760:19;;12419:366;;;:::o;12791:419::-;12957:4;12995:2;12984:9;12980:18;12972:26;;13044:9;13038:4;13034:20;13030:1;13019:9;13015:17;13008:47;13072:131;13198:4;13072:131;:::i;:::-;13064:139;;12791:419;;;:::o;13216:169::-;13356:21;13352:1;13344:6;13340:14;13333:45;13216:169;:::o;13391:366::-;13533:3;13554:67;13618:2;13613:3;13554:67;:::i;:::-;13547:74;;13630:93;13719:3;13630:93;:::i;:::-;13748:2;13743:3;13739:12;13732:19;;13391:366;;;:::o;13763:419::-;13929:4;13967:2;13956:9;13952:18;13944:26;;14016:9;14010:4;14006:20;14002:1;13991:9;13987:17;13980:47;14044:131;14170:4;14044:131;:::i;:::-;14036:139;;13763:419;;;:::o;14188:174::-;14328:26;14324:1;14316:6;14312:14;14305:50;14188:174;:::o;14368:366::-;14510:3;14531:67;14595:2;14590:3;14531:67;:::i;:::-;14524:74;;14607:93;14696:3;14607:93;:::i;:::-;14725:2;14720:3;14716:12;14709:19;;14368:366;;;:::o;14740:419::-;14906:4;14944:2;14933:9;14929:18;14921:26;;14993:9;14987:4;14983:20;14979:1;14968:9;14964:17;14957:47;15021:131;15147:4;15021:131;:::i;:::-;15013:139;;14740:419;;;:::o;15165:442::-;15314:4;15352:2;15341:9;15337:18;15329:26;;15365:71;15433:1;15422:9;15418:17;15409:6;15365:71;:::i;:::-;15446:72;15514:2;15503:9;15499:18;15490:6;15446:72;:::i;:::-;15528;15596:2;15585:9;15581:18;15572:6;15528:72;:::i;:::-;15165:442;;;;;;:::o;15613:180::-;15661:77;15658:1;15651:88;15758:4;15755:1;15748:15;15782:4;15779:1;15772:15;15799:191;15839:3;15858:20;15876:1;15858:20;:::i;:::-;15853:25;;15892:20;15910:1;15892:20;:::i;:::-;15887:25;;15935:1;15932;15928:9;15921:16;;15956:3;15953:1;15950:10;15947:36;;;15963:18;;:::i;:::-;15947:36;15799:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1399400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2916",
								"burn(uint256)": "infinite",
								"decimals()": "361",
								"getInputResources()": "infinite",
								"getOutputResources()": "infinite",
								"inputResources(uint256)": "infinite",
								"isFirstLevel()": "2715",
								"level()": "2628",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"outputResources(uint256)": "infinite",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"setLevel(uint8)": "26931",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlimitedAllowanceAddress()": "2640"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 686,
									"end": 1546,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 986,
									"end": 998,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 964,
									"end": 968,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 970,
									"end": 976,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1125,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1096,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1071,
									"end": 1096,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1135,
									"end": 1203,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1144,
									"end": 1169,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1183,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1185,
									"end": 1202,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1135,
									"end": 1143,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1135,
									"end": 1143,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1135,
									"end": 1143,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1135,
									"end": 1203,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1135,
									"end": 1203,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1135,
									"end": 1203,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1135,
									"end": 1203,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1135,
									"end": 1203,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1221,
									"end": 1227,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1218,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1213,
									"end": 1218,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1213,
									"end": 1227,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1227,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1308,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1333,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1340,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1315,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1340,
									"modifierDepth": 2,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1375,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1381,
									"end": 1396,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1398,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1381,
									"end": 1399,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1399,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1400,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1345,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1411,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1425,
									"end": 1434,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1444,
									"end": 1460,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1444,
									"end": 1467,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1441,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1467,
									"modifierDepth": 2,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1503,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1509,
									"end": 1525,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1527,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1509,
									"end": 1528,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1528,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1529,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1472,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1540,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 1546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 9082,
									"end": 9087,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9089,
									"end": 9096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9098,
									"end": 9103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 9073,
									"end": 9081,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9073,
									"end": 9081,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9073,
									"end": 9081,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 9073,
									"end": 9110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10078,
									"end": 10079,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10061,
									"end": 10066,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10132,
									"end": 10133,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH",
									"source": 2,
									"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 10103,
									"end": 10135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10178,
									"end": 10179,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10159,
									"end": 10166,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10231,
									"end": 10232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH",
									"source": 2,
									"value": "94280D6200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 10203,
									"end": 10234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10284,
									"end": 10289,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10265,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10266,
									"end": 10271,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10273,
									"end": 10280,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10303,
									"end": 10312,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10349,
									"end": 10356,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10342,
									"end": 10347,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 10358,
									"end": 10363,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 10333,
									"end": 10364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2754,
									"end": 2796,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2747,
									"end": 2752,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2797,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2875,
									"end": 2899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2809,
									"end": 2905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 3002,
									"end": 3007,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2984,
									"end": 3008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2977,
									"end": 2982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 3009,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3023,
									"end": 3024,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3021,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3013,
									"end": 3025,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2911,
									"end": 3033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3096,
									"end": 3101,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3127,
									"end": 3133,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3121,
									"end": 3134,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3112,
									"end": 3134,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3112,
									"end": 3134,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3170,
									"end": 3175,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3143,
									"end": 3176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3531,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3188,
									"end": 3531,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3301,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3387,
									"end": 3405,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3376,
									"end": 3406,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3429,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3373,
									"end": 3429,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3409,
									"end": 3427,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 3409,
									"end": 3427,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3409,
									"end": 3427,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3409,
									"end": 3427,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 3409,
									"end": 3427,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3429,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3373,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3459,
									"end": 3463,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3451,
									"end": 3457,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3447,
									"end": 3464,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3464,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3464,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3519,
									"end": 3523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3513,
									"end": 3517,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3509,
									"end": 3524,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3501,
									"end": 3524,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3501,
									"end": 3524,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3531,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3531,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3531,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3531,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3537,
									"end": 3654,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3537,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3646,
									"end": 3647,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3643,
									"end": 3644,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3636,
									"end": 3648,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3660,
									"end": 3777,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3660,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3766,
									"end": 3767,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3759,
									"end": 3771,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3983,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3906,
									"end": 3983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 3950,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3972,
									"end": 3977,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3961,
									"end": 3977,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3961,
									"end": 3977,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3983,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3983,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3989,
									"end": 4111,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3989,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4062,
									"end": 4086,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 4080,
									"end": 4085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4062,
									"end": 4086,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 4062,
									"end": 4086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4062,
									"end": 4086,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 4062,
									"end": 4086,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4055,
									"end": 4060,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4087,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4042,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4042,
									"end": 4105,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4102,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4098,
									"end": 4099,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4103,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4042,
									"end": 4105,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4042,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3989,
									"end": 4111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3989,
									"end": 4111,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4117,
									"end": 4260,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 4117,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4174,
									"end": 4179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4205,
									"end": 4211,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4199,
									"end": 4212,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4212,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4212,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4221,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 4248,
									"end": 4253,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4221,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 4221,
									"end": 4254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4221,
									"end": 4254,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 4221,
									"end": 4254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4117,
									"end": 4260,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4117,
									"end": 4260,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4117,
									"end": 4260,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4117,
									"end": 4260,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4117,
									"end": 4260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4934,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 4302,
									"end": 4934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4394,
									"end": 4399,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4438,
									"end": 4442,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4426,
									"end": 4435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 4424,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4436,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4413,
									"end": 4443,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 4410,
									"end": 4527,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4410,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 4410,
									"end": 4527,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4525,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 4446,
									"end": 4525,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 4446,
									"end": 4525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4525,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 4446,
									"end": 4525,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4410,
									"end": 4527,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 4410,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4545,
									"end": 4566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4545,
									"end": 4566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 4545,
									"end": 4566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4545,
									"end": 4566,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 4545,
									"end": 4566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4641,
									"end": 4642,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4681,
									"end": 4741,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 4737,
									"end": 4740,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 4734,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4717,
									"end": 4726,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4735,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4681,
									"end": 4741,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4681,
									"end": 4741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4681,
									"end": 4741,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 4681,
									"end": 4741,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4674,
									"end": 4678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4663,
									"end": 4679,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4576,
									"end": 4753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4816,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4855,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 4911,
									"end": 4914,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4902,
									"end": 4908,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4900,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4887,
									"end": 4909,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4855,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 4855,
									"end": 4915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4855,
									"end": 4915,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 4855,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4852,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4841,
									"end": 4846,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4837,
									"end": 4853,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4830,
									"end": 4916,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4763,
									"end": 4927,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4934,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4934,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5117,
									"end": 5122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5142,
									"end": 5255,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 5158,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 5247,
									"end": 5253,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5158,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 5158,
									"end": 5254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5158,
									"end": 5254,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 5158,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5142,
									"end": 5255,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 5142,
									"end": 5255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5142,
									"end": 5255,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 5142,
									"end": 5255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5133,
									"end": 5255,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5133,
									"end": 5255,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5275,
									"end": 5280,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5304,
									"end": 5310,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5297,
									"end": 5302,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5290,
									"end": 5311,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5338,
									"end": 5342,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5331,
									"end": 5336,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5327,
									"end": 5343,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5343,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5343,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5391,
									"end": 5395,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5383,
									"end": 5389,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5379,
									"end": 5396,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5371,
									"end": 5377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5367,
									"end": 5397,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5423,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5418,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5409,
									"end": 5424,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5406,
									"end": 5528,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5406,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 5406,
									"end": 5528,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 5439,
									"end": 5518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 5439,
									"end": 5518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5518,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 5439,
									"end": 5518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5406,
									"end": 5528,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 5406,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5560,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5571,
									"end": 5577,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5566,
									"end": 5569,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5563,
									"end": 5578,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5646,
									"end": 5649,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5675,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 5751,
									"end": 5754,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 5739,
									"end": 5749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5675,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 5675,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5675,
									"end": 5755,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 5675,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5670,
									"end": 5673,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5663,
									"end": 5756,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5785,
									"end": 5789,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5780,
									"end": 5783,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5776,
									"end": 5790,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5769,
									"end": 5790,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5769,
									"end": 5790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5613,
									"end": 5800,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5597,
									"end": 5601,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5592,
									"end": 5595,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5588,
									"end": 5602,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5581,
									"end": 5602,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5581,
									"end": 5602,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 5537,
									"end": 5800,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5541,
									"end": 5562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5123,
									"end": 5806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5123,
									"end": 5806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5850,
									"end": 6299,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 5850,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5964,
									"end": 5969,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6013,
									"end": 6016,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6010,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5998,
									"end": 6004,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6011,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5990,
									"end": 6017,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 5980,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 5980,
									"end": 6102,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 6021,
									"end": 6100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 6021,
									"end": 6100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6100,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 6021,
									"end": 6100,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5980,
									"end": 6102,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 5980,
									"end": 6102,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6131,
									"end": 6137,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6125,
									"end": 6138,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6156,
									"end": 6293,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 6289,
									"end": 6292,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6281,
									"end": 6287,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6274,
									"end": 6278,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6266,
									"end": 6272,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6262,
									"end": 6279,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6156,
									"end": 6293,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 6156,
									"end": 6293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6156,
									"end": 6293,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 6156,
									"end": 6293,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6293,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6293,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5970,
									"end": 6299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5850,
									"end": 6299,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5850,
									"end": 6299,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5850,
									"end": 6299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5850,
									"end": 6299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5850,
									"end": 6299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6415,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 6305,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6390,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 6382,
									"end": 6387,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6379,
									"end": 6391,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6369,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6369,
									"end": 6409,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6405,
									"end": 6406,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6402,
									"end": 6403,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6395,
									"end": 6407,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6369,
									"end": 6409,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6369,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6415,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6415,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6421,
									"end": 6586,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 6421,
									"end": 6586,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6489,
									"end": 6494,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6520,
									"end": 6526,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6514,
									"end": 6527,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6505,
									"end": 6527,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6505,
									"end": 6527,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6536,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 6574,
									"end": 6579,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6536,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 6536,
									"end": 6580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6536,
									"end": 6580,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 6536,
									"end": 6580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6421,
									"end": 6586,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6421,
									"end": 6586,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6421,
									"end": 6586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6421,
									"end": 6586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6421,
									"end": 6586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6861,
									"end": 6867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6869,
									"end": 6875,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6877,
									"end": 6883,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6885,
									"end": 6891,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6893,
									"end": 6899,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6901,
									"end": 6907,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6909,
									"end": 6915,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6958,
									"end": 6961,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 6946,
									"end": 6955,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6937,
									"end": 6944,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 6933,
									"end": 6956,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6929,
									"end": 6962,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 6926,
									"end": 7046,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6926,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6926,
									"end": 7046,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6965,
									"end": 7044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 6965,
									"end": 7044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 6965,
									"end": 7044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6965,
									"end": 7044,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 6965,
									"end": 7044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6926,
									"end": 7046,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6926,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7106,
									"end": 7107,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7095,
									"end": 7104,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7091,
									"end": 7108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7085,
									"end": 7109,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7154,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7128,
									"end": 7134,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7125,
									"end": 7155,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7122,
									"end": 7239,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7122,
									"end": 7239,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 7122,
									"end": 7239,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7158,
									"end": 7237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 7158,
									"end": 7237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 7158,
									"end": 7237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7158,
									"end": 7237,
									"name": "tag",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 7158,
									"end": 7237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7122,
									"end": 7239,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 7122,
									"end": 7239,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7263,
									"end": 7337,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 7329,
									"end": 7336,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7309,
									"end": 7318,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 7305,
									"end": 7327,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7263,
									"end": 7337,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 7263,
									"end": 7337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7263,
									"end": 7337,
									"name": "tag",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 7263,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7253,
									"end": 7337,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 7253,
									"end": 7337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7056,
									"end": 7347,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7407,
									"end": 7409,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7396,
									"end": 7405,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7392,
									"end": 7410,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7411,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7438,
									"end": 7456,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7430,
									"end": 7436,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7427,
									"end": 7457,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7424,
									"end": 7541,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7424,
									"end": 7541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 7424,
									"end": 7541,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7460,
									"end": 7539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 7460,
									"end": 7539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 7460,
									"end": 7539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7460,
									"end": 7539,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 7460,
									"end": 7539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7424,
									"end": 7541,
									"name": "tag",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 7424,
									"end": 7541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7565,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 7631,
									"end": 7638,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 7622,
									"end": 7628,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7611,
									"end": 7620,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 7607,
									"end": 7629,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7565,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 7565,
									"end": 7639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7565,
									"end": 7639,
									"name": "tag",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 7565,
									"end": 7639,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7639,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7357,
									"end": 7649,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7688,
									"end": 7690,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7714,
									"end": 7778,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 7770,
									"end": 7777,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 7761,
									"end": 7767,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7750,
									"end": 7759,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 7746,
									"end": 7768,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7714,
									"end": 7778,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 7714,
									"end": 7778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7714,
									"end": 7778,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 7714,
									"end": 7778,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7704,
									"end": 7778,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 7704,
									"end": 7778,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7659,
									"end": 7788,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7827,
									"end": 7829,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 7853,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 7909,
									"end": 7916,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 7900,
									"end": 7906,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7889,
									"end": 7898,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 7885,
									"end": 7907,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 7853,
									"end": 7917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7917,
									"name": "tag",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 7853,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7843,
									"end": 7917,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7843,
									"end": 7917,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7798,
									"end": 7927,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7987,
									"end": 7990,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 7976,
									"end": 7985,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7972,
									"end": 7991,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7966,
									"end": 7992,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8019,
									"end": 8037,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8011,
									"end": 8017,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8008,
									"end": 8038,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8005,
									"end": 8122,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8005,
									"end": 8122,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 8005,
									"end": 8122,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8041,
									"end": 8120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 8041,
									"end": 8120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 8041,
									"end": 8120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8041,
									"end": 8120,
									"name": "tag",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 8041,
									"end": 8120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8005,
									"end": 8122,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 8005,
									"end": 8122,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8146,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 8259,
									"end": 8266,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 8250,
									"end": 8256,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8239,
									"end": 8248,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 8235,
									"end": 8257,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8146,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 8146,
									"end": 8267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8146,
									"end": 8267,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 8146,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8136,
									"end": 8267,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 8136,
									"end": 8267,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 8277,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8337,
									"end": 8340,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 8326,
									"end": 8335,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8322,
									"end": 8341,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8316,
									"end": 8342,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8369,
									"end": 8387,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8361,
									"end": 8367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8358,
									"end": 8388,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8355,
									"end": 8472,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8355,
									"end": 8472,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 8355,
									"end": 8472,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8391,
									"end": 8470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 8391,
									"end": 8470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 8391,
									"end": 8470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8391,
									"end": 8470,
									"name": "tag",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 8391,
									"end": 8470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8355,
									"end": 8472,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 8355,
									"end": 8472,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8496,
									"end": 8617,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 8609,
									"end": 8616,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8589,
									"end": 8598,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 8585,
									"end": 8607,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8496,
									"end": 8617,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 8496,
									"end": 8617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8496,
									"end": 8617,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 8496,
									"end": 8617,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8486,
									"end": 8617,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8486,
									"end": 8617,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8287,
									"end": 8627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8666,
									"end": 8669,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 8693,
									"end": 8768,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 8760,
									"end": 8767,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 8751,
									"end": 8757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8740,
									"end": 8749,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 8736,
									"end": 8758,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8693,
									"end": 8768,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 8693,
									"end": 8768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8693,
									"end": 8768,
									"name": "tag",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 8693,
									"end": 8768,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8683,
									"end": 8768,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8683,
									"end": 8768,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8637,
									"end": 8778,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6592,
									"end": 8785,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8791,
									"end": 8890,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 8791,
									"end": 8890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8843,
									"end": 8849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8877,
									"end": 8882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8871,
									"end": 8883,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8861,
									"end": 8883,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8861,
									"end": 8883,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8791,
									"end": 8890,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8791,
									"end": 8890,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8791,
									"end": 8890,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8791,
									"end": 8890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8896,
									"end": 9076,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 8896,
									"end": 9076,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8941,
									"end": 8942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8934,
									"end": 9022,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 9038,
									"end": 9039,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 9031,
									"end": 9046,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9065,
									"end": 9069,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 9062,
									"end": 9063,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9055,
									"end": 9070,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9402,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 9082,
									"end": 9402,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9126,
									"end": 9132,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9163,
									"end": 9164,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 9157,
									"end": 9161,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9153,
									"end": 9165,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 9143,
									"end": 9165,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9143,
									"end": 9165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9210,
									"end": 9211,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 9204,
									"end": 9208,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9200,
									"end": 9212,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9231,
									"end": 9249,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 9221,
									"end": 9302,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 9221,
									"end": 9302,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9287,
									"end": 9291,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 9279,
									"end": 9285,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9275,
									"end": 9292,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9265,
									"end": 9292,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9265,
									"end": 9292,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9221,
									"end": 9302,
									"name": "tag",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 9221,
									"end": 9302,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9349,
									"end": 9351,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9341,
									"end": 9347,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9338,
									"end": 9352,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 9318,
									"end": 9336,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9315,
									"end": 9353,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 9312,
									"end": 9396,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 9312,
									"end": 9396,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9368,
									"end": 9386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 9368,
									"end": 9386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 9368,
									"end": 9386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9368,
									"end": 9386,
									"name": "tag",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 9368,
									"end": 9386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9312,
									"end": 9396,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 9312,
									"end": 9396,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9133,
									"end": 9402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9402,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9402,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9402,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9408,
									"end": 9549,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 9408,
									"end": 9549,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9457,
									"end": 9461,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9480,
									"end": 9483,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9472,
									"end": 9483,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9472,
									"end": 9483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9503,
									"end": 9506,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9500,
									"end": 9501,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9493,
									"end": 9507,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9537,
									"end": 9541,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9534,
									"end": 9535,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9524,
									"end": 9542,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 9516,
									"end": 9542,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9516,
									"end": 9542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9408,
									"end": 9549,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9408,
									"end": 9549,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9408,
									"end": 9549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9408,
									"end": 9549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9555,
									"end": 9648,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 9555,
									"end": 9648,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9592,
									"end": 9598,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9639,
									"end": 9641,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9634,
									"end": 9636,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 9627,
									"end": 9632,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9623,
									"end": 9637,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9619,
									"end": 9642,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 9609,
									"end": 9642,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9609,
									"end": 9642,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9555,
									"end": 9648,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9555,
									"end": 9648,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9555,
									"end": 9648,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9555,
									"end": 9648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9654,
									"end": 9761,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 9654,
									"end": 9761,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9698,
									"end": 9706,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9748,
									"end": 9753,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9742,
									"end": 9746,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9738,
									"end": 9754,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 9717,
									"end": 9754,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9717,
									"end": 9754,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9654,
									"end": 9761,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9654,
									"end": 9761,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9654,
									"end": 9761,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9654,
									"end": 9761,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9654,
									"end": 9761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9836,
									"end": 9842,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9886,
									"end": 9887,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 9874,
									"end": 9884,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9870,
									"end": 9888,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 9909,
									"end": 10006,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 9939,
									"end": 10005,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9928,
									"end": 9937,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9909,
									"end": 10006,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 9909,
									"end": 10006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9909,
									"end": 10006,
									"name": "tag",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 9909,
									"end": 10006,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10027,
									"end": 10066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 10057,
									"end": 10065,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10046,
									"end": 10055,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10027,
									"end": 10066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 10027,
									"end": 10066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10027,
									"end": 10066,
									"name": "tag",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 10027,
									"end": 10066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10015,
									"end": 10066,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 10015,
									"end": 10066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10099,
									"end": 10103,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 10095,
									"end": 10104,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 10088,
									"end": 10093,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10084,
									"end": 10105,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 10075,
									"end": 10105,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 10075,
									"end": 10105,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10148,
									"end": 10152,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 10138,
									"end": 10146,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10134,
									"end": 10153,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 10127,
									"end": 10132,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10124,
									"end": 10154,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 10114,
									"end": 10154,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 10114,
									"end": 10154,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9843,
									"end": 10160,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9843,
									"end": 10160,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9767,
									"end": 10160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10166,
									"end": 10226,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 10166,
									"end": 10226,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10194,
									"end": 10197,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10215,
									"end": 10220,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10208,
									"end": 10220,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10208,
									"end": 10220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10166,
									"end": 10226,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10166,
									"end": 10226,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10166,
									"end": 10226,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10166,
									"end": 10226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10232,
									"end": 10374,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 10232,
									"end": 10374,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10282,
									"end": 10291,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10315,
									"end": 10368,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 10333,
									"end": 10367,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 10342,
									"end": 10366,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 10360,
									"end": 10365,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10342,
									"end": 10366,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 10342,
									"end": 10366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10342,
									"end": 10366,
									"name": "tag",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 10342,
									"end": 10366,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10333,
									"end": 10367,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 10333,
									"end": 10367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10333,
									"end": 10367,
									"name": "tag",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 10333,
									"end": 10367,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10315,
									"end": 10368,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 10315,
									"end": 10368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10315,
									"end": 10368,
									"name": "tag",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 10315,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10302,
									"end": 10368,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10302,
									"end": 10368,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10232,
									"end": 10374,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10232,
									"end": 10374,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10232,
									"end": 10374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10232,
									"end": 10374,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10380,
									"end": 10455,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 10380,
									"end": 10455,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10423,
									"end": 10426,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10444,
									"end": 10449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10437,
									"end": 10449,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10437,
									"end": 10449,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10380,
									"end": 10455,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10380,
									"end": 10455,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10380,
									"end": 10455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10380,
									"end": 10455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10461,
									"end": 10730,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10461,
									"end": 10730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10571,
									"end": 10610,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "211"
								},
								{
									"begin": 10602,
									"end": 10609,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10571,
									"end": 10610,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 10571,
									"end": 10610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10571,
									"end": 10610,
									"name": "tag",
									"source": 10,
									"value": "211"
								},
								{
									"begin": 10571,
									"end": 10610,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10632,
									"end": 10723,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 10681,
									"end": 10722,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 10705,
									"end": 10721,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10681,
									"end": 10722,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 10681,
									"end": 10722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10681,
									"end": 10722,
									"name": "tag",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 10681,
									"end": 10722,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10673,
									"end": 10679,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10666,
									"end": 10670,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10660,
									"end": 10671,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 10632,
									"end": 10723,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 10632,
									"end": 10723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10632,
									"end": 10723,
									"name": "tag",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 10632,
									"end": 10723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10626,
									"end": 10630,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10619,
									"end": 10724,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 10537,
									"end": 10730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10461,
									"end": 10730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10461,
									"end": 10730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10461,
									"end": 10730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10461,
									"end": 10730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10736,
									"end": 10809,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 10736,
									"end": 10809,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10781,
									"end": 10784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10736,
									"end": 10809,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10736,
									"end": 10809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10815,
									"end": 11004,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 10815,
									"end": 11004,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10892,
									"end": 10924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 10892,
									"end": 10924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 10892,
									"end": 10924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10892,
									"end": 10924,
									"name": "tag",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 10892,
									"end": 10924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10933,
									"end": 10998,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "217"
								},
								{
									"begin": 10991,
									"end": 10997,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10983,
									"end": 10989,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10977,
									"end": 10981,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10933,
									"end": 10998,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10933,
									"end": 10998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10933,
									"end": 10998,
									"name": "tag",
									"source": 10,
									"value": "217"
								},
								{
									"begin": 10933,
									"end": 10998,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10868,
									"end": 11004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10815,
									"end": 11004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10815,
									"end": 11004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10815,
									"end": 11004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11010,
									"end": 11196,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 11010,
									"end": 11196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "tag",
									"source": 10,
									"value": "219"
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11087,
									"end": 11090,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11080,
									"end": 11085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11077,
									"end": 11091,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "221"
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11141,
									"end": 11180,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "222"
								},
								{
									"begin": 11178,
									"end": 11179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11171,
									"end": 11176,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11141,
									"end": 11180,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 11141,
									"end": 11180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11141,
									"end": 11180,
									"name": "tag",
									"source": 10,
									"value": "222"
								},
								{
									"begin": 11141,
									"end": 11180,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11114,
									"end": 11115,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11107,
									"end": 11112,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11103,
									"end": 11116,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11094,
									"end": 11116,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11094,
									"end": 11116,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "219"
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "tag",
									"source": 10,
									"value": "221"
								},
								{
									"begin": 11070,
									"end": 11190,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11010,
									"end": 11196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11010,
									"end": 11196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11010,
									"end": 11196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11202,
									"end": 11745,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 11202,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11303,
									"end": 11305,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 11298,
									"end": 11301,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11295,
									"end": 11306,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 11292,
									"end": 11738,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11292,
									"end": 11738,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "224"
								},
								{
									"begin": 11292,
									"end": 11738,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11337,
									"end": 11375,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 11369,
									"end": 11374,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11337,
									"end": 11375,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 11337,
									"end": 11375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11337,
									"end": 11375,
									"name": "tag",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 11337,
									"end": 11375,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11421,
									"end": 11450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 11439,
									"end": 11449,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11421,
									"end": 11450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 11421,
									"end": 11450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11421,
									"end": 11450,
									"name": "tag",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 11421,
									"end": 11450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11411,
									"end": 11419,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11407,
									"end": 11451,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11604,
									"end": 11606,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 11592,
									"end": 11602,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11589,
									"end": 11607,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 11586,
									"end": 11635,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11586,
									"end": 11635,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 11586,
									"end": 11635,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11625,
									"end": 11633,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11610,
									"end": 11633,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11610,
									"end": 11633,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11586,
									"end": 11635,
									"name": "tag",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 11586,
									"end": 11635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11648,
									"end": 11728,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 11704,
									"end": 11726,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "229"
								},
								{
									"begin": 11722,
									"end": 11725,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11704,
									"end": 11726,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 11704,
									"end": 11726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11704,
									"end": 11726,
									"name": "tag",
									"source": 10,
									"value": "229"
								},
								{
									"begin": 11704,
									"end": 11726,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11694,
									"end": 11702,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 11690,
									"end": 11727,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11677,
									"end": 11688,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11648,
									"end": 11728,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 11648,
									"end": 11728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11648,
									"end": 11728,
									"name": "tag",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 11648,
									"end": 11728,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11307,
									"end": 11738,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11307,
									"end": 11738,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11292,
									"end": 11738,
									"name": "tag",
									"source": 10,
									"value": "224"
								},
								{
									"begin": 11292,
									"end": 11738,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11202,
									"end": 11745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11202,
									"end": 11745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11202,
									"end": 11745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11202,
									"end": 11745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11751,
									"end": 11868,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 11751,
									"end": 11868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11805,
									"end": 11813,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11855,
									"end": 11860,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11849,
									"end": 11853,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11845,
									"end": 11861,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 11824,
									"end": 11861,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11824,
									"end": 11861,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11751,
									"end": 11868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11751,
									"end": 11868,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11751,
									"end": 11868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11751,
									"end": 11868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11751,
									"end": 11868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11874,
									"end": 12043,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 11874,
									"end": 12043,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11918,
									"end": 11924,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11951,
									"end": 12002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 11999,
									"end": 12000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11995,
									"end": 12001,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 11987,
									"end": 11992,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11984,
									"end": 11985,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 11980,
									"end": 11993,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 11951,
									"end": 12002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 11951,
									"end": 12002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11951,
									"end": 12002,
									"name": "tag",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 11951,
									"end": 12002,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11947,
									"end": 12003,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 12032,
									"end": 12036,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 12026,
									"end": 12030,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12022,
									"end": 12037,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12012,
									"end": 12037,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12012,
									"end": 12037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11925,
									"end": 12043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11874,
									"end": 12043,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11874,
									"end": 12043,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11874,
									"end": 12043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11874,
									"end": 12043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11874,
									"end": 12043,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12048,
									"end": 12343,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 12048,
									"end": 12343,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12124,
									"end": 12128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12270,
									"end": 12299,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "234"
								},
								{
									"begin": 12295,
									"end": 12298,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12289,
									"end": 12293,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12270,
									"end": 12299,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 12270,
									"end": 12299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12270,
									"end": 12299,
									"name": "tag",
									"source": 10,
									"value": "234"
								},
								{
									"begin": 12270,
									"end": 12299,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12262,
									"end": 12299,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12262,
									"end": 12299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12332,
									"end": 12335,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12329,
									"end": 12330,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 12325,
									"end": 12336,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 12319,
									"end": 12323,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12316,
									"end": 12337,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 12308,
									"end": 12337,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12308,
									"end": 12337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12048,
									"end": 12343,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12048,
									"end": 12343,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12048,
									"end": 12343,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12048,
									"end": 12343,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12048,
									"end": 12343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12348,
									"end": 13743,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 12348,
									"end": 13743,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12465,
									"end": 12502,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 12498,
									"end": 12501,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12465,
									"end": 12502,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 12465,
									"end": 12502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12465,
									"end": 12502,
									"name": "tag",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 12465,
									"end": 12502,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12567,
									"end": 12585,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12559,
									"end": 12565,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12556,
									"end": 12586,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12553,
									"end": 12609,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12553,
									"end": 12609,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 12553,
									"end": 12609,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12589,
									"end": 12607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 12589,
									"end": 12607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 12589,
									"end": 12607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12589,
									"end": 12607,
									"name": "tag",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 12589,
									"end": 12607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12553,
									"end": 12609,
									"name": "tag",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 12553,
									"end": 12609,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12633,
									"end": 12671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "239"
								},
								{
									"begin": 12665,
									"end": 12669,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12659,
									"end": 12670,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 12633,
									"end": 12671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 12633,
									"end": 12671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12633,
									"end": 12671,
									"name": "tag",
									"source": 10,
									"value": "239"
								},
								{
									"begin": 12633,
									"end": 12671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12718,
									"end": 12785,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "240"
								},
								{
									"begin": 12778,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12770,
									"end": 12776,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12764,
									"end": 12768,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 12718,
									"end": 12785,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 12718,
									"end": 12785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12718,
									"end": 12785,
									"name": "tag",
									"source": 10,
									"value": "240"
								},
								{
									"begin": 12718,
									"end": 12785,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12812,
									"end": 12813,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12836,
									"end": 12840,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 12823,
									"end": 12840,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12823,
									"end": 12840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12868,
									"end": 12870,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 12860,
									"end": 12866,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12857,
									"end": 12871,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12885,
									"end": 12886,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 12880,
									"end": 13498,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12880,
									"end": 13498,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 12880,
									"end": 13498,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "242"
								},
								{
									"begin": 12880,
									"end": 13498,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13542,
									"end": 13543,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13559,
									"end": 13565,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13556,
									"end": 13633,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13556,
									"end": 13633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "243"
								},
								{
									"begin": 13556,
									"end": 13633,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13608,
									"end": 13617,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13603,
									"end": 13606,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 13599,
									"end": 13618,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13593,
									"end": 13619,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 13584,
									"end": 13619,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13584,
									"end": 13619,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13556,
									"end": 13633,
									"name": "tag",
									"source": 10,
									"value": "243"
								},
								{
									"begin": 13556,
									"end": 13633,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13659,
									"end": 13726,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 13719,
									"end": 13725,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 13712,
									"end": 13717,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13659,
									"end": 13726,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 13659,
									"end": 13726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13659,
									"end": 13726,
									"name": "tag",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 13659,
									"end": 13726,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13653,
									"end": 13657,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 13646,
									"end": 13727,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 13515,
									"end": 13737,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12850,
									"end": 13737,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "241"
								},
								{
									"begin": 12850,
									"end": 13737,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12880,
									"end": 13498,
									"name": "tag",
									"source": 10,
									"value": "242"
								},
								{
									"begin": 12880,
									"end": 13498,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12932,
									"end": 12936,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 12928,
									"end": 12937,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 12920,
									"end": 12926,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12916,
									"end": 12938,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12966,
									"end": 13003,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "245"
								},
								{
									"begin": 12998,
									"end": 13002,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 12966,
									"end": 13003,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 12966,
									"end": 13003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12966,
									"end": 13003,
									"name": "tag",
									"source": 10,
									"value": "245"
								},
								{
									"begin": 12966,
									"end": 13003,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13025,
									"end": 13026,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "tag",
									"source": 10,
									"value": "246"
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13053,
									"end": 13060,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13050,
									"end": 13051,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13047,
									"end": 13061,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13132,
									"end": 13141,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13127,
									"end": 13130,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 13123,
									"end": 13142,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13117,
									"end": 13143,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 13109,
									"end": 13115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13102,
									"end": 13144,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 13183,
									"end": 13184,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 13175,
									"end": 13181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13171,
									"end": 13185,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13161,
									"end": 13185,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13161,
									"end": 13185,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13230,
									"end": 13232,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 13219,
									"end": 13228,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 13215,
									"end": 13233,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13202,
									"end": 13233,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 13202,
									"end": 13233,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13076,
									"end": 13080,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 13073,
									"end": 13074,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13069,
									"end": 13081,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13064,
									"end": 13081,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13064,
									"end": 13081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "246"
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "tag",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 13039,
									"end": 13247,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13275,
									"end": 13281,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 13266,
									"end": 13273,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13263,
									"end": 13282,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 13260,
									"end": 13439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13333,
									"end": 13342,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13328,
									"end": 13331,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 13324,
									"end": 13343,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13318,
									"end": 13344,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 13376,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "250"
								},
								{
									"begin": 13418,
									"end": 13422,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 13410,
									"end": 13416,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 13406,
									"end": 13423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 13395,
									"end": 13404,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13376,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 13376,
									"end": 13424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13376,
									"end": 13424,
									"name": "tag",
									"source": 10,
									"value": "250"
								},
								{
									"begin": 13376,
									"end": 13424,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13368,
									"end": 13374,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13361,
									"end": 13425,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 13283,
									"end": 13439,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13439,
									"name": "tag",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 13260,
									"end": 13439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13485,
									"end": 13486,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 13481,
									"end": 13482,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 13473,
									"end": 13479,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 13469,
									"end": 13483,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 13465,
									"end": 13487,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13459,
									"end": 13463,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 13452,
									"end": 13488,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 12887,
									"end": 13498,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12887,
									"end": 13498,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12887,
									"end": 13498,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12850,
									"end": 13737,
									"name": "tag",
									"source": 10,
									"value": "241"
								},
								{
									"begin": 12850,
									"end": 13737,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12850,
									"end": 13737,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12440,
									"end": 13743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12440,
									"end": 13743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12440,
									"end": 13743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12348,
									"end": 13743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12348,
									"end": 13743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12348,
									"end": 13743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13749,
									"end": 13867,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 13749,
									"end": 13867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13836,
									"end": 13860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 13854,
									"end": 13859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13836,
									"end": 13860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 13836,
									"end": 13860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13836,
									"end": 13860,
									"name": "tag",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 13836,
									"end": 13860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13831,
									"end": 13834,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13824,
									"end": 13861,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 13749,
									"end": 13867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13749,
									"end": 13867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13749,
									"end": 13867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13873,
									"end": 14095,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 13873,
									"end": 14095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13966,
									"end": 13970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14004,
									"end": 14006,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 13993,
									"end": 14002,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13989,
									"end": 14007,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13981,
									"end": 14007,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13981,
									"end": 14007,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14017,
									"end": 14088,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 14085,
									"end": 14086,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14074,
									"end": 14083,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14070,
									"end": 14087,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14061,
									"end": 14067,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14017,
									"end": 14088,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 14017,
									"end": 14088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14017,
									"end": 14088,
									"name": "tag",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 14017,
									"end": 14088,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13873,
									"end": 14095,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13873,
									"end": 14095,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13873,
									"end": 14095,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13873,
									"end": 14095,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13873,
									"end": 14095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14101,
									"end": 14281,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 14101,
									"end": 14281,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14149,
									"end": 14226,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14146,
									"end": 14147,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14139,
									"end": 14227,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14246,
									"end": 14250,
									"name": "PUSH",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 14243,
									"end": 14244,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 14236,
									"end": 14251,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14270,
									"end": 14274,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 14267,
									"end": 14268,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14260,
									"end": 14275,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 14287,
									"end": 14467,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 14287,
									"end": 14467,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14335,
									"end": 14412,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14332,
									"end": 14333,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14325,
									"end": 14413,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14432,
									"end": 14436,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 14429,
									"end": 14430,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 14422,
									"end": 14437,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14456,
									"end": 14460,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 14453,
									"end": 14454,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14446,
									"end": 14461,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 14473,
									"end": 14591,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 14473,
									"end": 14591,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14560,
									"end": 14584,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "258"
								},
								{
									"begin": 14578,
									"end": 14583,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 14560,
									"end": 14584,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 14560,
									"end": 14584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14560,
									"end": 14584,
									"name": "tag",
									"source": 10,
									"value": "258"
								},
								{
									"begin": 14560,
									"end": 14584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14555,
									"end": 14558,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14548,
									"end": 14585,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14473,
									"end": 14591,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14473,
									"end": 14591,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14473,
									"end": 14591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14597,
									"end": 14819,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 14597,
									"end": 14819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14690,
									"end": 14694,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14728,
									"end": 14730,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14717,
									"end": 14726,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14713,
									"end": 14731,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14705,
									"end": 14731,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14705,
									"end": 14731,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14741,
									"end": 14812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "260"
								},
								{
									"begin": 14809,
									"end": 14810,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14798,
									"end": 14807,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14794,
									"end": 14811,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14785,
									"end": 14791,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14741,
									"end": 14812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 14741,
									"end": 14812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14741,
									"end": 14812,
									"name": "tag",
									"source": 10,
									"value": "260"
								},
								{
									"begin": 14741,
									"end": 14812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14597,
									"end": 14819,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14597,
									"end": 14819,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14597,
									"end": 14819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14597,
									"end": 14819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14597,
									"end": 14819,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 2991,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097e9d2a8afd09ce5671f5539aa4478ca37d36f71fffa25866f9ce4a46b722e6764736f6c63430008170033",
									".code": [
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "6FD5AE15"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "BD5546BE"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "F9E05C6D"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "6FD5AE15"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "737D6A6C"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "48361490"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "635A4CC5"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "63A2B02B"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "D9CE804"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 2991,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1886,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1886,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2121,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2720,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2720,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 640,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 640,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1552,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1552,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 571,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 571,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2557,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2557,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2557,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2874,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2874,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2356,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2356,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2356,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1655,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1655,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 525,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 525,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1967,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1963,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2026,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2043,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2026,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2190,
											"end": 2215,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2215,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2215,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2215,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2168,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2168,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2255,
											"end": 2265,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2249,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2274,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2249,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2793,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2812,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 640,
											"end": 679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 640,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1597,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1620,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1620,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1612,
											"end": 1642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1612,
											"end": 1642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2649,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2967,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2465,
											"end": 2467,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2450,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1722,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1751,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1704,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1704,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1790,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 565,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 525,
											"end": 565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3560,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3705,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3868,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4023,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3905,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4010,
											"end": 4015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3992,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4190,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4177,
											"end": 4186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4173,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4201,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4269,
											"end": 4270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4245,
											"end": 4251,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4201,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 4201,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4201,
											"end": 4272,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4201,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4350,
											"end": 4352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4282,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4354,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4282,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4589,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4367,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4500,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4579,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4564,
											"end": 4581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4511,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4582,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4511,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4589,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4589,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4735,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4705,
											"end": 4824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4743,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4743,
											"end": 4822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4822,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4743,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4824,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4705,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4933,
											"end": 4940,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 4930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4888,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4941,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4834,
											"end": 4951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 5016,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5069,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5016,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5069,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 5079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5178,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5144,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5197,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5144,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 5214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5306,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5220,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5255,
											"end": 5262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5288,
											"end": 5293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5273,
											"end": 5300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5273,
											"end": 5300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5424,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5312,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5395,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5417,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5395,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5644,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5430,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5634,
											"end": 5635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5570,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5637,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5570,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5644,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5796,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5650,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5789,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5796,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 6018,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5802,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5933,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 6018,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 6018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 6018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 6018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 6018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6188,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6024,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6171,
											"end": 6174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6302,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6194,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6289,
											"end": 6294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6271,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6295,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6271,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6416,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6308,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6403,
											"end": 6408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6385,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6409,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6385,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6410,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 7019,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6490,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6744,
											"end": 6748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6727,
											"end": 6750,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6818,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 6825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6763,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6920,
											"end": 6924,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6913,
											"end": 6918,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 6926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6991,
											"end": 6994,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6939,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6939,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6846,
											"end": 7012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 7019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 7019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7332,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7025,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7285,
											"end": 7288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7283,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7179,
											"end": 7289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7289,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7179,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7332,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7332,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7483,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 7338,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 8549,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7561,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7744,
											"end": 7747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7853,
											"end": 7858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7773,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 7859,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7773,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7981,
											"end": 7984,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7875,
											"end": 7993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7993,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7875,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 8017,
											"end": 8105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8105,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 8017,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8128,
											"end": 8135,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8160,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8166,
											"end": 8167,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8176,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8252,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 8395,
											"end": 8398,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 8272,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8399,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 8272,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8265,
											"end": 8399,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8265,
											"end": 8399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8507,
											"end": 8513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8422,
											"end": 8514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8514,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8422,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8514,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8204,
											"end": 8524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8192,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8179,
											"end": 8193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8179,
											"end": 8193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8144,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8543,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 8549,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 8549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 8549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 9056,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 8555,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8762,
											"end": 8766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8800,
											"end": 8802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 8858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8843,
											"end": 8847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8813,
											"end": 8860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 9044,
											"end": 9048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8877,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 9049,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 8877,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 9056,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 9056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 9056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 9056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 9056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9062,
											"end": 9242,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 9062,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9187,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9100,
											"end": 9188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 9204,
											"end": 9205,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9248,
											"end": 9364,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9248,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9333,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9325,
											"end": 9330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9312,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 9312,
											"end": 9358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 9338,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9312,
											"end": 9358,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 9312,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9248,
											"end": 9364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9248,
											"end": 9364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9503,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 9370,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9418,
											"end": 9425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 9491,
											"end": 9496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9453,
											"end": 9497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9497,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 9453,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9642,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 9509,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9601,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 9630,
											"end": 9635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 9601,
											"end": 9636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9636,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 9601,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9642,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9797,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 9648,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9784,
											"end": 9789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 9744,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9790,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9744,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9739,
											"end": 9742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 10043,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 9803,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9905,
											"end": 9909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 10033,
											"end": 10034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10009,
											"end": 10015,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 9956,
											"end": 10036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 10036,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 9956,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 10043,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 10043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 10043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 10043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 10043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10378,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10049,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10155,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10160,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10244,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 10125,
											"end": 10244,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 10163,
											"end": 10242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10244,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 10125,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10308,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10353,
											"end": 10360,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10342,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10308,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 10308,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10308,
											"end": 10361,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10308,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10378,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10606,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 10384,
											"end": 10606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10515,
											"end": 10517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 10596,
											"end": 10597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10598,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10578,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 10528,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10606,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10722,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10612,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10698,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10676,
											"end": 10716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10702,
											"end": 10714,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10716,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10676,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10889,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 10728,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10785,
											"end": 10790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10823,
											"end": 10829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10810,
											"end": 10830,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10839,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10839,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10839,
											"end": 10883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10839,
											"end": 10883,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 10839,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10889,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11246,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 10895,
											"end": 11246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10965,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11002,
											"end": 11011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11000,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10985,
											"end": 11017,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11101,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 10982,
											"end": 11101,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11020,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 11020,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 11020,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11020,
											"end": 11099,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 11020,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11101,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 10982,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 11221,
											"end": 11228,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11201,
											"end": 11210,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11197,
											"end": 11219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 11165,
											"end": 11229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11229,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 11165,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11111,
											"end": 11239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11246,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11320,
											"end": 11326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11377,
											"end": 11379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11365,
											"end": 11374,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11356,
											"end": 11363,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11352,
											"end": 11375,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11380,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11464,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11345,
											"end": 11464,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11383,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11383,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 11383,
											"end": 11462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11383,
											"end": 11462,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11383,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11464,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11345,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11503,
											"end": 11504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 11573,
											"end": 11580,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11553,
											"end": 11562,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11549,
											"end": 11571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 11528,
											"end": 11581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11518,
											"end": 11581,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11518,
											"end": 11581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11474,
											"end": 11591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11656,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 11701,
											"end": 11708,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11692,
											"end": 11698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11690,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11677,
											"end": 11699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11656,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 11656,
											"end": 11709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11656,
											"end": 11709,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 11656,
											"end": 11709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11646,
											"end": 11709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11646,
											"end": 11709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11601,
											"end": 11719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11732,
											"end": 11912,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 11732,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11857,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11777,
											"end": 11778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11770,
											"end": 11858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 11874,
											"end": 11875,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11867,
											"end": 11882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11905,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11898,
											"end": 11899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11891,
											"end": 11906,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11918,
											"end": 12238,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 11918,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 11968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11999,
											"end": 12000,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11993,
											"end": 11997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11989,
											"end": 12001,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12040,
											"end": 12044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12036,
											"end": 12048,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12057,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12057,
											"end": 12138,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12123,
											"end": 12127,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 12115,
											"end": 12121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12111,
											"end": 12128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12057,
											"end": 12138,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12057,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12177,
											"end": 12183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12174,
											"end": 12188,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12151,
											"end": 12189,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12204,
											"end": 12222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 12238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11918,
											"end": 12238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11918,
											"end": 12238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11918,
											"end": 12238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11918,
											"end": 12238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12244,
											"end": 12413,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12244,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12384,
											"end": 12405,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420616C6C6F77656420746F206D696E7400000000000000000000000000"
										},
										{
											"begin": 12380,
											"end": 12381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12378,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12368,
											"end": 12382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12361,
											"end": 12406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12244,
											"end": 12413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12244,
											"end": 12413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12561,
											"end": 12564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 12646,
											"end": 12648,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 12641,
											"end": 12644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 12582,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 12747,
											"end": 12750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12658,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12776,
											"end": 12778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12771,
											"end": 12774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12957,
											"end": 12961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12984,
											"end": 12993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 12998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 12998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13044,
											"end": 13053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13034,
											"end": 13054,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13030,
											"end": 13031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13015,
											"end": 13032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13008,
											"end": 13055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 13198,
											"end": 13202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13072,
											"end": 13203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13216,
											"end": 13385,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13216,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13377,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420616C6C6F77656420746F206275726E00000000000000000000000000"
										},
										{
											"begin": 13352,
											"end": 13353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13344,
											"end": 13350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13340,
											"end": 13354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13333,
											"end": 13378,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13216,
											"end": 13385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13216,
											"end": 13385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13757,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 13391,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 13618,
											"end": 13620,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 13613,
											"end": 13616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13554,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 13554,
											"end": 13621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13554,
											"end": 13621,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 13554,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13547,
											"end": 13621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13547,
											"end": 13621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 13719,
											"end": 13722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13630,
											"end": 13723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 13723,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 13630,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13748,
											"end": 13750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13757,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13757,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 14182,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 13763,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13956,
											"end": 13965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 13970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13944,
											"end": 13970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13944,
											"end": 13970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14016,
											"end": 14025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14010,
											"end": 14014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14026,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14002,
											"end": 14003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13991,
											"end": 14000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13987,
											"end": 14004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13980,
											"end": 14027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 14170,
											"end": 14174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 14044,
											"end": 14175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14175,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 14044,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14036,
											"end": 14175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14036,
											"end": 14175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 14182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 14182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 14182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 14182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14188,
											"end": 14362,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14188,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14328,
											"end": 14354,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420616C6C6F77656420746F20736574206C6576656C0000000000000000"
										},
										{
											"begin": 14324,
											"end": 14325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14316,
											"end": 14322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14312,
											"end": 14326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14305,
											"end": 14355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14188,
											"end": 14362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14188,
											"end": 14362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14368,
											"end": 14734,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 14368,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14531,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 14595,
											"end": 14597,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 14590,
											"end": 14593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14531,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 14531,
											"end": 14598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14531,
											"end": 14598,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 14531,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14524,
											"end": 14598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14524,
											"end": 14598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14607,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 14696,
											"end": 14699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14607,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14607,
											"end": 14700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14607,
											"end": 14700,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 14607,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14725,
											"end": 14727,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14720,
											"end": 14723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14716,
											"end": 14728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14709,
											"end": 14728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14709,
											"end": 14728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14368,
											"end": 14734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14368,
											"end": 14734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14368,
											"end": 14734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14368,
											"end": 14734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14906,
											"end": 14910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14944,
											"end": 14946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14933,
											"end": 14942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14929,
											"end": 14947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14921,
											"end": 14947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14921,
											"end": 14947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14993,
											"end": 15002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 14991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14983,
											"end": 15003,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14979,
											"end": 14980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14964,
											"end": 14981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 15004,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 15147,
											"end": 15151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 15021,
											"end": 15152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 15021,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15013,
											"end": 15152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15013,
											"end": 15152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 15159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 15159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15314,
											"end": 15318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15341,
											"end": 15350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15329,
											"end": 15355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15329,
											"end": 15355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 15433,
											"end": 15434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15431,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15415,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 15365,
											"end": 15436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 15514,
											"end": 15516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15503,
											"end": 15512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15496,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 15446,
											"end": 15518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 15518,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 15446,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15585,
											"end": 15594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15578,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 15528,
											"end": 15600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15613,
											"end": 15793,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 15613,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15661,
											"end": 15738,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15658,
											"end": 15659,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15651,
											"end": 15739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15758,
											"end": 15762,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15755,
											"end": 15756,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15748,
											"end": 15763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15779,
											"end": 15780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15772,
											"end": 15787,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15990,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 15799,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15858,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 15876,
											"end": 15877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15858,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 15858,
											"end": 15878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15858,
											"end": 15878,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 15858,
											"end": 15878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15853,
											"end": 15878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15853,
											"end": 15878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 15910,
											"end": 15911,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 15892,
											"end": 15912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15912,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 15892,
											"end": 15912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15912,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15935,
											"end": 15936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15932,
											"end": 15933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15921,
											"end": 15937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15921,
											"end": 15937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 15959,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15953,
											"end": 15954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15960,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 15983,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 15983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 15947,
											"end": 15983,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15963,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 15963,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 15963,
											"end": 15981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15963,
											"end": 15981,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 15963,
											"end": 15981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 15983,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 15947,
											"end": 15983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15990,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"recipe.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"getInputResources()": "48361490",
							"getOutputResources()": "737d6a6c",
							"inputResources(uint256)": "0d9ce804",
							"isFirstLevel()": "63a2b02b",
							"level()": "6fd5ae15",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"outputResources(uint256)": "635a4cc5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setLevel(uint8)": "bd5546be",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unlimitedAllowanceAddress()": "f9e05c6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_unlimitedAllowanceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"resourceContractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Recipe.ResourceAmount[]\",\"name\":\"_inputResources\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"resourceContractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Recipe.ResourceAmount[]\",\"name\":\"_outputResources\",\"type\":\"tuple[]\"},{\"internalType\":\"enum Recipe.Levels\",\"name\":\"level_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInputResources\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"resourceContractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Recipe.ResourceAmount[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOutputResources\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"resourceContractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Recipe.ResourceAmount[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inputResources\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resourceContractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFirstLevel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"enum Recipe.Levels\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"outputResources\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resourceContractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Recipe.Levels\",\"name\":\"level_\",\"type\":\"uint8\"}],\"name\":\"setLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlimitedAllowanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"recipe.sol\":\"Recipe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"recipe.sol\":{\"keccak256\":\"0xc326bd2ea859a1a31418484e80a285cb0dd7c3501acf411d0de4ab7bceaa80f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2976d482491a1b3481da6535af2f04f7adf1cc7b997ecaef2311b949c26eb9a\",\"dweb:/ipfs/QmbHuLqSeMRBmbPYQuPPCJNEzfMKjutwEthQheuLF8M2Qh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "recipe.sol:Recipe",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "recipe.sol:Recipe",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "recipe.sol:Recipe",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "recipe.sol:Recipe",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "recipe.sol:Recipe",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "recipe.sol:Recipe",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1545,
								"contract": "recipe.sol:Recipe",
								"label": "unlimitedAllowanceAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1548,
								"contract": "recipe.sol:Recipe",
								"label": "level",
								"offset": 20,
								"slot": "6",
								"type": "t_enum(Levels)1534"
							},
							{
								"astId": 1552,
								"contract": "recipe.sol:Recipe",
								"label": "inputResources",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(ResourceAmount)1539_storage)dyn_storage"
							},
							{
								"astId": 1556,
								"contract": "recipe.sol:Recipe",
								"label": "outputResources",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_struct(ResourceAmount)1539_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(ResourceAmount)1539_storage)dyn_storage": {
								"base": "t_struct(ResourceAmount)1539_storage",
								"encoding": "dynamic_array",
								"label": "struct Recipe.ResourceAmount[]",
								"numberOfBytes": "32"
							},
							"t_enum(Levels)1534": {
								"encoding": "inplace",
								"label": "enum Recipe.Levels",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(ResourceAmount)1539_storage": {
								"encoding": "inplace",
								"label": "struct Recipe.ResourceAmount",
								"members": [
									{
										"astId": 1536,
										"contract": "recipe.sol:Recipe",
										"label": "resourceContractAddr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1538,
										"contract": "recipe.sol:Recipe",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1512
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1513,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1512
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1512
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1513,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								1512
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							939
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 939,
							"linearizedBaseContracts": [
								939
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 939,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 939,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 939,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 940,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1482
						],
						"IERC20": [
							877
						],
						"IERC20Permit": [
							939
						],
						"SafeERC20": [
							1229
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 878,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 942,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 940,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 944,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 939,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1483,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 946,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1482,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 948,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 951,
									"libraryName": {
										"id": 949,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1482,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 950,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 956,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 965,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 980,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 982,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 978,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 976,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 967,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 1229,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1008,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1009,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1004,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1002,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 1229,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1033,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1229",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1229",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1029,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1039,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1040,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1042,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1038,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 877,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 1229,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 1088,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															1059
														],
														"declarations": [
															{
																"constant": false,
																"id": 1059,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 1088,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1064,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1229",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1229",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1062,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1066,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1060,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1070,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1079,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 1078,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1074,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1059,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1075,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1072,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1077,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1081,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1082,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1083,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1084,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1080,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1087,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 877,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 1229,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1101,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1105,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1107,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1108,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1103,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1113,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1114,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1112,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1118,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1121,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1123,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1096,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1125,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1119,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1117,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1128,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1130,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1129,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1092,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 877,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 1229,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1146,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"arguments": [
														{
															"id": 1153,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1150,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1303,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1156,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 1162,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1163,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1165,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1160,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1172,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1175,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 877,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 1229,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													1191,
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1190,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1196,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1202,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1203,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1209,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1211,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1210,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1212,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1207,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1215,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1219,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1226,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1181,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 877,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 1229,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1230,
							"src": "751:5018:6",
							"usedErrors": [
								956,
								965
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1482
						]
					},
					"id": 1483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1232,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1482,
							"linearizedBaseContracts": [
								1482
							],
							"name": "Address",
							"nameLocation": "203:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1237,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:7"
									},
									"src": "316:50:7"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1242,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "475:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:7"
									},
									"src": "452:39:7"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1245,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:7"
									},
									"src": "591:24:7"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1602:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1258,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "1640:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "1612:109:7",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "1648:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1263,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1261,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1260,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "1669:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1266,
															"nodeType": "RevertStatement",
															"src": "1662:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1270,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "1732:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1277,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1271,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "1750:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "1772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:7"
											},
											{
												"condition": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:7",
													"subExpression": {
														"id": 1278,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "1793:63:7",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "1807:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1280,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "1828:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "1821:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1550:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1577:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:7"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:7"
									},
									"scope": 1482,
									"src": "1531:331:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2794:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "2833:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "2841:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1296,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "2811:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1301,
												"nodeType": "Return",
												"src": "2804:45:7"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2743:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2780:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:7"
									},
									"scope": 1482,
									"src": "2705:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "3293:279:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1317,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1320,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "3331:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "3303:108:7",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "3338:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1325,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1323,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1322,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "3359:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1328,
															"nodeType": "RevertStatement",
															"src": "3352:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1332,
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "3421:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "3435:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "3488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1335,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "3462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1337,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "3481:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3537:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1345,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1342,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3510:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1347,
												"nodeType": "Return",
												"src": "3503:62:7"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3227:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3279:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:7"
									},
									"scope": 1482,
									"src": "3180:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "3811:154:7",
										"statements": [
											{
												"assignments": [
													1360,
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "3822:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1359,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "3836:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1361,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"arguments": [
														{
															"id": 1365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3881:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3863:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3930:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1371,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "3947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1368,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3903:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1373,
												"nodeType": "Return",
												"src": "3896:62:7"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3739:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3755:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:7"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3797:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:7"
									},
									"scope": 1482,
									"src": "3711:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "4203:156:7",
										"statements": [
											{
												"assignments": [
													1386,
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "4214:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1385,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "4228:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1387,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"id": 1391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "4275:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1389,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1397,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "4341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1394,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "4297:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1399,
												"nodeType": "Return",
												"src": "4290:62:7"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4152:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:7"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4189:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:7"
									},
									"scope": 1482,
									"src": "4106:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "4783:424:7",
										"statements": [
											{
												"condition": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:7",
													"subExpression": {
														"id": 1413,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "4798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "4857:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1420,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "5045:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1424,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1404,
																				"src": "5071:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "5041:119:7",
															"trueBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "5096:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1431,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "5138:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1430,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "5121:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1433,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "5180:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1412,
															"id": 1437,
															"nodeType": "Return",
															"src": "5173:17:7"
														}
													]
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "4793:408:7",
												"trueBody": {
													"id": 1419,
													"nodeType": "Block",
													"src": "4807:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1416,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "4829:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1415,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4821:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4694:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4716:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4769:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:7"
									},
									"scope": 1482,
									"src": "4625:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "5509:122:7",
										"statements": [
											{
												"condition": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:7",
													"subExpression": {
														"id": 1451,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "5524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "5583:42:7",
													"statements": [
														{
															"expression": {
																"id": 1458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "5604:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1450,
															"id": 1459,
															"nodeType": "Return",
															"src": "5597:17:7"
														}
													]
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "5519:106:7",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "5533:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1454,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "5555:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1453,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "5547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5447:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5495:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:7"
									},
									"scope": 1482,
									"src": "5407:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "5798:461:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1469,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5874:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "6204:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1475,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "6225:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1477,
															"nodeType": "RevertStatement",
															"src": "6218:24:7"
														}
													]
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "5870:383:7",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "5897:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:7",
																"nodeType": "YulBlock",
																"src": "6055:133:7",
																"statements": [
																	{
																		"nativeSrc": "6073:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:7"
																			},
																			"nativeSrc": "6096:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:7",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:7",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:7"
																					},
																					"nativeSrc": "6137:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:7"
																			},
																			"nativeSrc": "6130:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:7"
																		},
																		"nativeSrc": "6130:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1466,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1466,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:7",
																	"valueSize": 1
																}
															],
															"id": 1473,
															"nodeType": "InlineAssembly",
															"src": "6046:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "5760:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:7"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:7"
									},
									"scope": 1482,
									"src": "5743:516:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1483,
							"src": "195:6066:7",
							"usedErrors": [
								1237,
								1242,
								1245
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1512
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1484,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1485,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1512,
							"linearizedBaseContracts": [
								1512
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1490,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1492,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1512,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1501,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1512,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1507,
												"id": 1509,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1512,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1513,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"recipe.sol": {
				"ast": {
					"absolutePath": "recipe.sol",
					"exportedSymbols": {
						"Address": [
							1482
						],
						"Context": [
							1512
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC20Permit": [
							939
						],
						"Ownable": [
							147
						],
						"Recipe": [
							1769
						],
						"SafeERC20": [
							1229
						]
					},
					"id": 1770,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 800,
							"src": "57:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 148,
							"src": "113:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 1230,
							"src": "166:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1518,
										"name": "ERC20",
										"nameLocations": [
											"252:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "252:5:9"
									},
									"id": 1519,
									"nodeType": "InheritanceSpecifier",
									"src": "252:5:9"
								},
								{
									"baseName": {
										"id": 1520,
										"name": "Ownable",
										"nameLocations": [
											"259:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "259:7:9"
									},
									"id": 1521,
									"nodeType": "InheritanceSpecifier",
									"src": "259:7:9"
								}
							],
							"canonicalName": "Recipe",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1769,
							"linearizedBaseContracts": [
								1769,
								147,
								799,
								189,
								903,
								877,
								1512
							],
							"name": "Recipe",
							"nameLocation": "242:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Recipe.TerrainType",
									"id": 1528,
									"members": [
										{
											"id": 1522,
											"name": "Mountains",
											"nameLocation": "292:9:9",
											"nodeType": "EnumValue",
											"src": "292:9:9"
										},
										{
											"id": 1523,
											"name": "Forest",
											"nameLocation": "302:6:9",
											"nodeType": "EnumValue",
											"src": "302:6:9"
										},
										{
											"id": 1524,
											"name": "Water",
											"nameLocation": "309:5:9",
											"nodeType": "EnumValue",
											"src": "309:5:9"
										},
										{
											"id": 1525,
											"name": "DeepWater",
											"nameLocation": "315:9:9",
											"nodeType": "EnumValue",
											"src": "315:9:9"
										},
										{
											"id": 1526,
											"name": "Sand",
											"nameLocation": "325:4:9",
											"nodeType": "EnumValue",
											"src": "325:4:9"
										},
										{
											"id": 1527,
											"name": "Grass",
											"nameLocation": "330:5:9",
											"nodeType": "EnumValue",
											"src": "330:5:9"
										}
									],
									"name": "TerrainType",
									"nameLocation": "279:11:9",
									"nodeType": "EnumDefinition",
									"src": "274:62:9"
								},
								{
									"canonicalName": "Recipe.Levels",
									"id": 1534,
									"members": [
										{
											"id": 1529,
											"name": "Level1",
											"nameLocation": "354:6:9",
											"nodeType": "EnumValue",
											"src": "354:6:9"
										},
										{
											"id": 1530,
											"name": "Level2",
											"nameLocation": "361:6:9",
											"nodeType": "EnumValue",
											"src": "361:6:9"
										},
										{
											"id": 1531,
											"name": "Level3",
											"nameLocation": "368:6:9",
											"nodeType": "EnumValue",
											"src": "368:6:9"
										},
										{
											"id": 1532,
											"name": "Level4",
											"nameLocation": "375:6:9",
											"nodeType": "EnumValue",
											"src": "375:6:9"
										},
										{
											"id": 1533,
											"name": "Level5",
											"nameLocation": "382:6:9",
											"nodeType": "EnumValue",
											"src": "382:6:9"
										}
									],
									"name": "Levels",
									"nameLocation": "346:6:9",
									"nodeType": "EnumDefinition",
									"src": "341:48:9"
								},
								{
									"canonicalName": "Recipe.ResourceAmount",
									"id": 1539,
									"members": [
										{
											"constant": false,
											"id": 1536,
											"mutability": "mutable",
											"name": "resourceContractAddr",
											"nameLocation": "435:20:9",
											"nodeType": "VariableDeclaration",
											"scope": 1539,
											"src": "427:28:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1535,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "473:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1539,
											"src": "465:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1537,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "465:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ResourceAmount",
									"nameLocation": "402:14:9",
									"nodeType": "StructDefinition",
									"scope": 1769,
									"src": "395:91:9",
									"visibility": "public"
								},
								{
									"global": false,
									"id": 1543,
									"libraryName": {
										"id": 1540,
										"name": "SafeERC20",
										"nameLocations": [
											"498:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "498:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:27:9",
									"typeName": {
										"id": 1542,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1541,
											"name": "IERC20",
											"nameLocations": [
												"512:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "512:6:9"
										},
										"referencedDeclaration": 877,
										"src": "512:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f9e05c6d",
									"id": 1545,
									"mutability": "mutable",
									"name": "unlimitedAllowanceAddress",
									"nameLocation": "540:25:9",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "525:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1544,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "525:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6fd5ae15",
									"id": 1548,
									"mutability": "mutable",
									"name": "level",
									"nameLocation": "585:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "571:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Levels_$1534",
										"typeString": "enum Recipe.Levels"
									},
									"typeName": {
										"id": 1547,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1546,
											"name": "Levels",
											"nameLocations": [
												"571:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1534,
											"src": "571:6:9"
										},
										"referencedDeclaration": 1534,
										"src": "571:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Levels_$1534",
											"typeString": "enum Recipe.Levels"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d9ce804",
									"id": 1552,
									"mutability": "mutable",
									"name": "inputResources",
									"nameLocation": "620:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "596:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage",
										"typeString": "struct Recipe.ResourceAmount[]"
									},
									"typeName": {
										"baseType": {
											"id": 1550,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1549,
												"name": "ResourceAmount",
												"nameLocations": [
													"596:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1539,
												"src": "596:14:9"
											},
											"referencedDeclaration": 1539,
											"src": "596:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ResourceAmount_$1539_storage_ptr",
												"typeString": "struct Recipe.ResourceAmount"
											}
										},
										"id": 1551,
										"nodeType": "ArrayTypeName",
										"src": "596:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr",
											"typeString": "struct Recipe.ResourceAmount[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "635a4cc5",
									"id": 1556,
									"mutability": "mutable",
									"name": "outputResources",
									"nameLocation": "664:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1769,
									"src": "640:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage",
										"typeString": "struct Recipe.ResourceAmount[]"
									},
									"typeName": {
										"baseType": {
											"id": 1554,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1553,
												"name": "ResourceAmount",
												"nameLocations": [
													"640:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1539,
												"src": "640:14:9"
											},
											"referencedDeclaration": 1539,
											"src": "640:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ResourceAmount_$1539_storage_ptr",
												"typeString": "struct Recipe.ResourceAmount"
											}
										},
										"id": 1555,
										"nodeType": "ArrayTypeName",
										"src": "640:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr",
											"typeString": "struct Recipe.ResourceAmount[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "1000:546:9",
										"statements": [
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1585,
														"name": "unlimitedAllowanceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "1071:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1586,
														"name": "_unlimitedAllowanceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "1099:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1071:54:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "1071:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "unlimitedAllowanceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "1144:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1591,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "1171:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1190:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1593,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1190:7:9",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1592,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1185:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1199:3:9",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1185:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1589,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "1135:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "1135:68:9"
											},
											{
												"expression": {
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1599,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "1213:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Levels_$1534",
															"typeString": "enum Recipe.Levels"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1600,
														"name": "level_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "1221:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Levels_$1534",
															"typeString": "enum Recipe.Levels"
														}
													},
													"src": "1213:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Levels_$1534",
														"typeString": "enum Recipe.Levels"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "1213:14:9"
											},
											{
												"body": {
													"id": 1622,
													"nodeType": "Block",
													"src": "1347:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1617,
																			"name": "_inputResources",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "1381:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Recipe.ResourceAmount memory[] memory"
																			}
																		},
																		"id": 1619,
																		"indexExpression": {
																			"id": 1618,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "1397:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1381:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ResourceAmount_$1539_memory_ptr",
																			"typeString": "struct Recipe.ResourceAmount memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_ResourceAmount_$1539_memory_ptr",
																			"typeString": "struct Recipe.ResourceAmount memory"
																		}
																	],
																	"expression": {
																		"id": 1614,
																		"name": "inputResources",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "1361:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage",
																			"typeString": "struct Recipe.ResourceAmount storage ref[] storage ref"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1376:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1361:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr_$_t_struct$_ResourceAmount_$1539_storage_$returns$__$attached_to$_t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Recipe.ResourceAmount storage ref[] storage pointer,struct Recipe.ResourceAmount storage ref)"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:39:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1621,
															"nodeType": "ExpressionStatement",
															"src": "1361:39:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1607,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "1314:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1608,
															"name": "_inputResources",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "1318:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Recipe.ResourceAmount memory[] memory"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1334:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1318:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1314:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"initializationExpression": {
													"assignments": [
														1604
													],
													"declarations": [
														{
															"constant": false,
															"id": 1604,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1307:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1623,
															"src": "1299:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1603,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1299:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1606,
													"initialValue": {
														"hexValue": "30",
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1311:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1299:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1342:3:9",
														"subExpression": {
															"id": 1611,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "1342:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1613,
													"nodeType": "ExpressionStatement",
													"src": "1342:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1294:117:9"
											},
											{
												"body": {
													"id": 1643,
													"nodeType": "Block",
													"src": "1474:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1638,
																			"name": "_outputResources",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "1509:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Recipe.ResourceAmount memory[] memory"
																			}
																		},
																		"id": 1640,
																		"indexExpression": {
																			"id": 1639,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "1526:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1509:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ResourceAmount_$1539_memory_ptr",
																			"typeString": "struct Recipe.ResourceAmount memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_ResourceAmount_$1539_memory_ptr",
																			"typeString": "struct Recipe.ResourceAmount memory"
																		}
																	],
																	"expression": {
																		"id": 1635,
																		"name": "outputResources",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1556,
																		"src": "1488:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage",
																			"typeString": "struct Recipe.ResourceAmount storage ref[] storage ref"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1504:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1488:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr_$_t_struct$_ResourceAmount_$1539_storage_$returns$__$attached_to$_t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Recipe.ResourceAmount storage ref[] storage pointer,struct Recipe.ResourceAmount storage ref)"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1488:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1642,
															"nodeType": "ExpressionStatement",
															"src": "1488:41:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1628,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "1440:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1629,
															"name": "_outputResources",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "1444:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Recipe.ResourceAmount memory[] memory"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1461:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1444:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1440:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"initializationExpression": {
													"assignments": [
														1625
													],
													"declarations": [
														{
															"constant": false,
															"id": 1625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1433:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1644,
															"src": "1425:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1624,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1425:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1627,
													"initialValue": {
														"hexValue": "30",
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1437:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1425:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1469:3:9",
														"subExpression": {
															"id": 1632,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "1469:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1634,
													"nodeType": "ExpressionStatement",
													"src": "1469:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1420:120:9"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1578,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1558,
													"src": "964:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1579,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1560,
													"src": "970:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1580,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1577,
												"name": "ERC20",
												"nameLocations": [
													"958:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "958:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "958:19:9"
										},
										{
											"arguments": [
												{
													"id": 1582,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1564,
													"src": "986:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1583,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1581,
												"name": "Ownable",
												"nameLocations": [
													"978:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "978:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "978:21:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "721:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "707:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "707:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "749:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "735:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "735:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "_unlimitedAllowanceAddress",
												"nameLocation": "773:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "765:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "817:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "809:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_inputResources",
												"nameLocation": "863:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "839:39:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Recipe.ResourceAmount[]"
												},
												"typeName": {
													"baseType": {
														"id": 1566,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1565,
															"name": "ResourceAmount",
															"nameLocations": [
																"839:14:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1539,
															"src": "839:14:9"
														},
														"referencedDeclaration": 1539,
														"src": "839:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ResourceAmount_$1539_storage_ptr",
															"typeString": "struct Recipe.ResourceAmount"
														}
													},
													"id": 1567,
													"nodeType": "ArrayTypeName",
													"src": "839:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr",
														"typeString": "struct Recipe.ResourceAmount[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_outputResources",
												"nameLocation": "912:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "888:40:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Recipe.ResourceAmount[]"
												},
												"typeName": {
													"baseType": {
														"id": 1570,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1569,
															"name": "ResourceAmount",
															"nameLocations": [
																"888:14:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1539,
															"src": "888:14:9"
														},
														"referencedDeclaration": 1539,
														"src": "888:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ResourceAmount_$1539_storage_ptr",
															"typeString": "struct Recipe.ResourceAmount"
														}
													},
													"id": 1571,
													"nodeType": "ArrayTypeName",
													"src": "888:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr",
														"typeString": "struct Recipe.ResourceAmount[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "level_",
												"nameLocation": "945:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "938:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Levels_$1534",
													"typeString": "enum Recipe.Levels"
												},
												"typeName": {
													"id": 1574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1573,
														"name": "Levels",
														"nameLocations": [
															"938:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1534,
														"src": "938:6:9"
													},
													"referencedDeclaration": 1534,
													"src": "938:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Levels_$1534",
														"typeString": "enum Recipe.Levels"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:260:9"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:0:9"
									},
									"scope": 1769,
									"src": "686:860:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "1602:47:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_enum$_Levels_$1534",
														"typeString": "enum Recipe.Levels"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1651,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "1620:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Levels_$1534",
															"typeString": "enum Recipe.Levels"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1652,
															"name": "Levels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "1629:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Levels_$1534_$",
																"typeString": "type(enum Recipe.Levels)"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1636:6:9",
														"memberName": "Level1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1529,
														"src": "1629:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Levels_$1534",
															"typeString": "enum Recipe.Levels"
														}
													},
													"src": "1620:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1655,
												"nodeType": "Return",
												"src": "1612:30:9"
											}
										]
									},
									"functionSelector": "63a2b02b",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFirstLevel",
									"nameLocation": "1561:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1573:2:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1597:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1597:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:6:9"
									},
									"scope": 1769,
									"src": "1552:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "1694:117:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1664,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1712:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1716:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1712:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1666,
																"name": "unlimitedAllowanceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1726:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1712:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20736574206c6576656c",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86",
																"typeString": "literal_string \"Not allowed to set level\""
															},
															"value": "Not allowed to set level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e624431605a30ad41eb071603d65569b596585e312f904fc5c9364623843cc86",
																"typeString": "literal_string \"Not allowed to set level\""
															}
														],
														"id": 1663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "1704:76:9"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "1790:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Levels_$1534",
															"typeString": "enum Recipe.Levels"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1672,
														"name": "level_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "1798:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Levels_$1534",
															"typeString": "enum Recipe.Levels"
														}
													},
													"src": "1790:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Levels_$1534",
														"typeString": "enum Recipe.Levels"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "1790:14:9"
											}
										]
									},
									"functionSelector": "bd5546be",
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLevel",
									"nameLocation": "1664:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "level_",
												"nameLocation": "1680:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1673:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Levels_$1534",
													"typeString": "enum Recipe.Levels"
												},
												"typeName": {
													"id": 1659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1658,
														"name": "Levels",
														"nameLocations": [
															"1673:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1534,
														"src": "1673:6:9"
													},
													"referencedDeclaration": 1534,
													"src": "1673:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Levels_$1534",
														"typeString": "enum Recipe.Levels"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:15:9"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:9"
									},
									"scope": 1769,
									"src": "1655:156:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "1935:115:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1684,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1953:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1957:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1953:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1686,
																"name": "unlimitedAllowanceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1967:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1953:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f206d696e74",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1994:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c",
																"typeString": "literal_string \"Not allowed to mint\""
															},
															"value": "Not allowed to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_904a3daeea976528631082e420ad9cac46a22ae3ed4efd3889348974831bf78c",
																"typeString": "literal_string \"Not allowed to mint\""
															}
														],
														"id": 1683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1945:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "1945:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "2032:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "2036:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1691,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2026:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2026:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "2026:17:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1895:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1908:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "1900:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1920:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "1912:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:28:9"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1935:0:9"
									},
									"scope": 1769,
									"src": "1886:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "2158:123:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1703,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2176:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2180:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2176:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1705,
																"name": "unlimitedAllowanceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "2190:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2176:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f206275726e",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2217:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9",
																"typeString": "literal_string \"Not allowed to burn\""
															},
															"value": "Not allowed to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db4cbb438c42e0f443a5b735bce3508a97a9a36e91d927155d6d83bf2fb365d9",
																"typeString": "literal_string \"Not allowed to burn\""
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2168:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "2168:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1711,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2255:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2255:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "2267:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1710,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2249:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "2249:25:9"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2130:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2143:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "2135:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:16:9"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:9"
									},
									"scope": 1769,
									"src": "2121:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "2433:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1729,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "2465:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1730,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "2469:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1727,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2450:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Recipe_$1769_$",
																"typeString": "type(contract super Recipe)"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2456:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2450:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2450:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1726,
												"id": 1732,
												"nodeType": "Return",
												"src": "2443:33:9"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2365:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2409:8:9"
									},
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2382:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2374:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2394:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2386:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:28:9"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2427:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2427:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:6:9"
									},
									"scope": 1769,
									"src": "2356:127:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										385
									],
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "2632:48:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1744,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "2665:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1742,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2649:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Recipe_$1769_$",
																"typeString": "type(contract super Recipe)"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2655:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "2649:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1741,
												"id": 1746,
												"nodeType": "Return",
												"src": "2642:31:9"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2566:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1738,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2605:8:9"
									},
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2584:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "2576:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:17:9"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "2623:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:9:9"
									},
									"scope": 1769,
									"src": "2557:123:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "2795:38:9",
										"statements": [
											{
												"expression": {
													"id": 1755,
													"name": "inputResources",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1552,
													"src": "2812:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage",
														"typeString": "struct Recipe.ResourceAmount storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1756,
												"nodeType": "Return",
												"src": "2805:21:9"
											}
										]
									},
									"functionSelector": "48361490",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInputResources",
									"nameLocation": "2729:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2746:2:9"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "2770:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Recipe.ResourceAmount[]"
												},
												"typeName": {
													"baseType": {
														"id": 1751,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1750,
															"name": "ResourceAmount",
															"nameLocations": [
																"2770:14:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1539,
															"src": "2770:14:9"
														},
														"referencedDeclaration": 1539,
														"src": "2770:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ResourceAmount_$1539_storage_ptr",
															"typeString": "struct Recipe.ResourceAmount"
														}
													},
													"id": 1752,
													"nodeType": "ArrayTypeName",
													"src": "2770:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr",
														"typeString": "struct Recipe.ResourceAmount[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:25:9"
									},
									"scope": 1769,
									"src": "2720:113:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "2950:39:9",
										"statements": [
											{
												"expression": {
													"id": 1765,
													"name": "outputResources",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1556,
													"src": "2967:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage",
														"typeString": "struct Recipe.ResourceAmount storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1766,
												"nodeType": "Return",
												"src": "2960:22:9"
											}
										]
									},
									"functionSelector": "737d6a6c",
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOutputResources",
									"nameLocation": "2883:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2901:2:9"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "2925:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Recipe.ResourceAmount[]"
												},
												"typeName": {
													"baseType": {
														"id": 1761,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1760,
															"name": "ResourceAmount",
															"nameLocations": [
																"2925:14:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1539,
															"src": "2925:14:9"
														},
														"referencedDeclaration": 1539,
														"src": "2925:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ResourceAmount_$1539_storage_ptr",
															"typeString": "struct Recipe.ResourceAmount"
														}
													},
													"id": 1762,
													"nodeType": "ArrayTypeName",
													"src": "2925:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ResourceAmount_$1539_storage_$dyn_storage_ptr",
														"typeString": "struct Recipe.ResourceAmount[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2924:25:9"
									},
									"scope": 1769,
									"src": "2874:115:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1770,
							"src": "233:2758:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:2960:9"
				},
				"id": 9
			}
		}
	}
}