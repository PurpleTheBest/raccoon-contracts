{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "mapWidth",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "mapHeight",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "mapName",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "x",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "y",
								"type": "uint256"
							},
							{
								"internalType": "enum Game.TerrainType",
								"name": "terrainType",
								"type": "uint8"
							},
							{
								"internalType": "enum Game.BiomeType",
								"name": "biomeType",
								"type": "uint8"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "id",
										"type": "uint256"
									},
									{
										"internalType": "enum Game.BuildingType",
										"name": "buildingType",
										"type": "uint8"
									},
									{
										"internalType": "string",
										"name": "name",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "owner",
										"type": "address"
									}
								],
								"internalType": "struct Game.Building",
								"name": "building",
								"type": "tuple"
							}
						],
						"internalType": "struct Game.Tile[]",
						"name": "tiles",
						"type": "tuple[]"
					}
				],
				"name": "__initializeTiles",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "y",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "enum Game.BuildingType",
								"name": "buildingType",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							}
						],
						"internalType": "struct Game.Building",
						"name": "building",
						"type": "tuple"
					}
				],
				"name": "__setBuilding__",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nativeCurrency",
						"type": "address"
					}
				],
				"name": "__setNativeCurrency__",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "map",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "y",
						"type": "uint256"
					},
					{
						"internalType": "enum Game.TerrainType",
						"name": "terrainType",
						"type": "uint8"
					},
					{
						"internalType": "enum Game.BiomeType",
						"name": "biomeType",
						"type": "uint8"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "enum Game.BuildingType",
								"name": "buildingType",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							}
						],
						"internalType": "struct Game.Building",
						"name": "building",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"game.sol": "Game"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"game.sol": {
			"keccak256": "0x7d022e7a9cae1a4f407ac83f1ecf0293758e043bddd6af9ea5d3bf9b3aba0a69",
			"license": "MIT",
			"urls": [
				"bzz-raw://1476e7d2b3ff7231184193cab6ca4f4bf2e0abedb3ce7da54a6bd0b7c049f1ae",
				"dweb:/ipfs/QmZtxYNntKoeFZVMeBL44RCxN1jaVKB2grWxyUZV4h6z9j"
			]
		}
	},
	"version": 1
}